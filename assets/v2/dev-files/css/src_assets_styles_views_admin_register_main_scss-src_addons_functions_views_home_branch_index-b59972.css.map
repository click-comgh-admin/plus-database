{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/css/src_assets_styles_views_admin_register_main_scss-src_addons_functions_views_home_branch_index-b59972.css","mappings":"AAAA;EACI;EACA;ACCJ;;ADGA;AENA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADOJ;;ADXA;AAGA;AGbA;AAEA;AAA+F;EAAK;EAA8B;EAAiB;EAAgB;EAAc;AF+BjL;;AE/B4L;EAAK;EAAgH;AFoCjT;;AEpC0T;EAAG;EAAc;AFyC3U;;AEzCoV;EAAY;EAAyC;AF8CzY;;AE9C0a;EAAS;AFkDnb;;AElDsc;EAAkB;EAAiF;AFuDziB;;AEvDujB;EAAM;AF2D7jB;;AE3D2kB;EAAQ;EAAc;EAAc;EAAkB;AFkEjoB;;AElEypB;EAAI;AFsE7pB;;AEtE2qB;EAAI;AF0E/qB;;AE1EyrB;EAAM;EAAqB;AF+EptB;;AE/EkuB;EAAsC;EAAoB;EAAe;EAAiB;AFsF5zB;;AEtFq0B;EAAc;AF0Fn1B;;AE1Fu2B;EAAgD;AF8Fv5B;;AE9Fi7B;EAAmB;EAAkB;AFmGt9B;;AEnGg+B;EAAgB;AFuGh/B;;AEvG8gC;EAAiB;AF2G/hC;;AE3G+iC;EAAO;AF+GtjC;;AE/GgkC;EAAS;AFmHzkC;;AEnHimC;EAAwD;AFuHzpC;;AEvHqqC;EAAc;EAA6B;AF4HhtC;;AE5HouC;EAA4B;AFgIhwC;;AEhIwxC;EAA6B;EAA0B;AFqI/0C;;AErI41C;EAAQ;AFyIp2C;;AEzIs3C;EAAmD;AF6Iz6C;;AE7Ik7C;EAAO;EAA6B;AFkJt9C;;AElJ4+C;EAAe;EAAS;AFuJpgD;;AEvJ8gD;EAAM;AF2JphD;;AE3JoiD;EAAK;EAAiM;AFgK1uD;;AEhK0vD;EAAK;EAAoB;AFqKnxD;;AErKuyD;EAAiB;EAAe;AF0Kv0D;;AE1K61D;EAAG;AF8Kh2D;;AE9Kq3D;EAAI;AFkLz3D;;AElL44D;EAAS;AFsLr5D;;AEtLq6D;EAAmD;EAAc;AF2Lt+D;;AE3Lg/D;EAA2D;EAAc;AFgMzjE;;AEhMmkE;EAAyC;EAAc;AFqM1nE;;AErMooE;EAAqB;AFyMzpE;;AEzMwqE;EAAgB;AF6MxrE;;AE7MqsE;EAAM;AFiN3sE;;AEjNouE;EAAkB;EAAkB;AFsNxwE;;AEtN4xE;EAAE;EAAc;AF2N5yE;;AE3No0E;EAAsC;EAAc;EAAoB;AFiO54E;;AEjOs5E;EAAkB;AFqOx6E;;AErO4gF;EAA+C;EAAc;AF0OzkF;;AE1O+lF;EAAU;EAAY;AF+OrnF;;AE/OooF;EAAS;AFmP7oF;;AEnP0pF;EAAiB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAgN;EAAsB;EAA4C;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAAsC;EAA4C;EAA0C;EAA2C;EAA4C;EAAwC;EAA0C;EAAuC;EAA6C;EAAsL;AFiRxwH;;AEjRg0H;EAAW;AFqR30H;;AErRs1H;EAAyB;IAAW;EF0Rx3H;AACF;AE3R24H;EAAyB;IAAW;EF+R76H;AACF;AEhSg8H;EAA0B;IAAW;EFoSn+H;AACF;AErSu/H;EAA0B;IAAW;EFyS1hI;AACF;AE1S8iI;EAA0B;IAAW;EF8SjlI;AACF;AE/SqmI;EAA0B;IAAW;EFmTxoI;AACF;AEpT4pI;EAAS;AFuTrqI;;AEvTwrI;EAAQ;AF2ThsI;;AE3TgtI;EAAO;AF+TvtI;;AE/TsuI;EAAU;AFmUhvI;;AEnUkwI;EAAU;AFuU5wI;;AEvU8xI;EAAS;EAAS;EAAO;EAAQ;AF8U/zI;;AE9Uq0I;EAAQ;AFkV70I;;AElVw1I;EAAQ;AFsVh2I;;AEtVu2I;EAAS;AF0Vh3I;;AE1Vw3I;EAAS;AF8Vj4I;;AE9V44I;EAAW;AFkWv5I;;AElWm6I;EAAO;AFsW16I;;AEtWg7I;EAAO;AF0Wv7I;;AE1Wg8I;EAAS;AF8Wz8I;;AE9Wm9I;EAAQ;AFkX39I;;AElXo+I;EAAQ;AFsX5+I;;AEtXq/I;EAAU;AF0X//I;;AE1X4gJ;EAAS;AF8XrhJ;;AE9XmiJ;EAAM;AFkYziJ;;AElYojJ;EAAM;AFsY1jJ;;AEtYqkJ;EAAM;AF0Y3kJ;;AE1YslJ;EAAK;AF8Y3lJ;;AE9YqmJ;EAAK;AFkZ1mJ;;AElZwnJ;EAAK;AFsZ7nJ;;AEtZsoJ;EAAM;EAAoB;AF2ZhqJ;;AE3ZirJ;EAAM;EAAgB;AFgavsJ;;AEhaotJ;EAAM;EAAqB;AFqa/uJ;;AEraiwJ;EAAM;EAAmB;AF0a1xJ;;AE1a0yJ;EAAM;EAAkB;AF+al0J;;AE/aq1J;EAAM;EAAmB;AFob92J;;AEpbk4J;EAAQ;EAA6B;AFybv6J;;AEzbq8J;EAAM;AF6b38J;;AE7b69J;EAAM;AFicn+J;;AEjcm/J;EAAM;AFqcz/J;;AErc4gK;EAAM;AFyclhK;;AEzcoiK;EAAM;AF6c1iK;;AE7c8jK;EAAM;AFidpkK;;AEjdulK;EAAM;AFqd7lK;;AErdinK;EAAM;AFydvnK;;AEzd0oK;EAAM;AF6dhpK;;AE7d6pK;EAAM;AFienqK;;AEjeorK;EAAM;AFqe1rK;;AEre4sK;EAAM;AFyeltK;;AEzeouK;EAAM;AF6e1uK;;AE7ewvK;EAAM;AFif9vK;;AEjf6wK;EAAM;AFqfnxK;;AErfsyK;EAAO;AFyf7yK;;AEzf+zK;EAAO;AF6ft0K;;AE7fy1K;EAAO;AFigBh2K;;AEjgBm3K;EAAM;AFqgBz3K;;AErgB84K;EAAM;AFygBp5K;;AEzgBq6K;EAAO;AF6gB56K;;AE7gB87K;EAAM;AFihBp8K;;AEjhBw9K;EAAO;AFqhB/9K;;AErhB6+K;EAAS;AFyhBt/K;;AEzhB8gL;EAAc;AF6hB5hL;;AE7hBijL;EAAM;AFiiBvjL;;AEjiBokL;EAAQ;AFqiB5kL;;AEriBmmL;EAAa;AFyiBhnL;;AEziBooL;EAAO;AF6iB3oL;;AE7iBypL;EAAY;AFijBrqL;;AEjjBwrL;EAAoB;AFqjB5sL;;AErjBuuL;EAAiB;AFyjBxvL;;AEzjBgxL;EAAW;AF6jB3xL;;AE7jB6yL;EAAM;AFikBnzL;;AEjkBg0L;EAAU;AFqkB10L;;AErkB21L;EAAQ;AFykBn2L;;AEzkBg3L;EAAQ;AF6kBx3L;;AE7kBo4L;EAAM;AFilB14L;;AEjlBs5L;EAAM;AFqlB55L;;AErlBw6L;EAAM;AFylB96L;;AEzlB27L;EAAM;AF6lBj8L;;AE7lB88L;EAAK;AFimBn9L;;AEjmBi+L;EAAK;AFqmBt+L;;AErmBk/L;EAAM;AFymBx/L;;AEzmBqgM;EAAM;AF6mB3gM;;AE7mBwhM;EAAM;AFinB9hM;;AEjnB0iM;EAAM;AFqnBhjM;;AErnB8jM;EAAM;AFynBpkM;;AEznBmlM;EAAM;AF6nBzlM;;AE7nBqmM;EAAU;AFioB/mM;;AEjoBgoM;EAAQ;AFqoBxoM;;AEroBmpM;EAAM;AFyoBzpM;;AEzoBoqM;EAAM;AF6oB1qM;;AE7oBqrM;EAAO;EAA0B;EAAuB;AFmpB7uM;;AEnpB+vM;EAAK;AFupBpwM;;AEvpBixM;EAAQ;AF2pBzxM;;AE3pBoyM;EAAM;AF+pB1yM;;AE/pBszM;EAAM;AFmqB5zM;;AEnqBw0M;EAAM;AFuqB90M;;AEvqBy1M;EAAM;AF2qB/1M;;AE3qB22M;EAAM;AF+qBj3M;;AE/qB63M;EAAM;AFmrBn4M;;AEnrB+4M;EAAQ;AFurBv5M;;AEvrB46M;EAAW;AF2rBv7M;;AE3rBm8M;EAAW;AF+rB98M;;AE/rB4+M;EAAQ;AFmsBp/M;;AEnsBggN;EAAW;AFusB3gN;;AEvsBgiN;EAAiB;EAAwB;EAAqB;AF6sB9lN;;AE7sB8mN;EAAU;AFitBxnN;;AEjtB2oN;EAAkB;AFqtB7pN;;AErtBwrN;EAAU;AFytBlsN;;AEztBwtN;EAAW;AF6tBnuN;;AE7tBkvN;EAAa;AFiuB/vN;;AEjuBgxN;EAAgB;AFquBhyN;;AEruBqzN;EAAiB;AFyuBt0N;;AEzuBk2N;EAAa;AF6uB/2N;;AE7uBs4N;EAAW;AFivBj5N;;AEjvBs6N;EAAc;AFqvBp7N;;AErvBu8N;EAAe;AFyvBt9N;;AEzvBi/N;EAAa;AF6vB9/N;;AE7vBuhO;EAAgB;AFiwBviO;;AEjwB8jO;EAAiB;AFqwB/kO;;AErwB6mO;EAAmB;AFywBhoO;;AEzwBwqO;EAAgB;AF6wBxrO;;AE7wBqtO;EAAyC;EAAuB;EAAqD;AFmxB10O;;AEnxBk4O;EAAiB;AFuxBn5O;;AEvxBm6O;EAAiB;AF2xBp7O;;AE3xBo8O;EAAmB;AF+xBv9O;;AE/xBy+O;EAAmB;AFmyB5/O;;AEnyB8gP;EAAmB;AFuyBjiP;;AEvyBmjP;EAAU;EAAgB;EAAuB;AF6yBpmP;;AE7yBunP;EAAmB;AFizB1oP;;AEjzB6pP;EAAmB;AFqzBhrP;;AErzBmsP;EAAqB;AFyzBxtP;;AEzzB6uP;EAAqB;AF6zBlwP;;AE7zBuxP;EAAY;AFi0BnyP;;AEj0ByzP;EAAc;AFq0Bv0P;;AEr0B41P;EAAS;AFy0Br2P;;AEz0B03P;EAAc;AF60Bx4P;;AE70Bw5P;EAAa;AFi1Br6P;;AEj1Bw7P;EAAY;AFq1Bp8P;;AEr1By9P;EAAa;AFy1Bt+P;;AEz1B2/P;EAAgB;EAA6B;AF81BxiQ;;AE91BkkQ;EAAc;EAAkC;AFm2BlnQ;;AEn2BqpQ;EAAU;AFu2B/pQ;;AEv2BgrQ;EAAQ;AF22BxrQ;;AE32BysQ;EAAU;AF+2BntQ;;AE/2BkuQ;EAAY;AFm3B9uQ;;AEn3BswQ;EAAY;AFu3BlxQ;;AEv3BuyQ;EAAU;AF23BjzQ;;AE33By0Q;EAAU;AF+3Bn1Q;;AE/3Bw2Q;EAAY;AFm4Bp3Q;;AEn4B24Q;EAAY;AFu4Bv5Q;;AEv4B66Q;EAAc;AF24B37Q;;AE34B88Q;EAAa;AF+4B39Q;;AE/4B6+Q;EAAiB;EAAsB;AFo5BphR;;AEp5B4kR;EAAmB;EAAsB;AFy5BrnR;;AEz5B4qR;EAA6B;EAAsB;AF85B/tR;;AE95BsxR;EAAiB;EAAsB;AFm6B7zR;;AEn6Bq3R;EAAgB;EAAsB;AFw6B35R;;AEx6Bi9R;EAAiB;EAAsB;AF66Bx/R;;AE76BgjS;EAAoB;AFi7BpkS;;AEj7B6lS;EAA4B;EAAsB;AFs7B/oS;;AEt7BosS;EAAU;EAAkB;AF27BhuS;;AE37BwxS;EAAc;EAAkB;AFg8BxzS;;AEh8B+2S;EAAY;EAAkB;AFq8B74S;;AEr8Bq8S;EAAa;EAAkB;AF08Bp+S;;AE18B4hT;EAAa;EAAkB;AF+8B3jT;;AE/8BmnT;EAAgB;AFm9BnoT;;AEn9BgqT;EAAc;EAAkB;AFw9BhsT;;AEx9BovT;EAAmB;AF49BvwT;;AE59B+0T;EAAkB;AFg+Bj2T;;AEh+Bq6T;EAAmB;AFo+Bx7T;;AEp+BmgU;EAA6B;EAA2B;AFy+B3jU;;AEz+BgpU;EAAc;EAA2B;AF8+BzrU;;AE9+B+wU;EAA2B;EAA2B;AFm/Br0U;;AEn/B05U;EAAW;AFu/Br6U;;AEv/B8/U;EAAc;AF2/B5gV;;AE3/B0mV;EAAwB;AF+/BloV;;AE//B2pV;EAAc;AFmgCzqV;;AEngC2rV;EAAgB;EAAsB;AFwgCjuV;;AExgCovV;EAAc;EAAoB;AF6gCtxV;;AE7gCuyV;EAAe;EAA0B;AFkhCh1V;;AElhCu2V;EAAK;AFshC52V;;AEthC23V;EAAK;AF0hCh4V;;AE1hC+4V;EAAK;AF8hCp5V;;AE9hCi6V;EAAK;AFkiCt6V;;AEliCq7V;EAAK;AFsiC17V;;AEtiCw8V;EAAK;AF0iC78V;;AE1iCu9V;EAAQ;EAAgC;AF+iC//V;;AE/iC4hW;EAAQ;EAAyB;AFojC7jW;;AEpjCulW;EAAM;EAAqB;AFyjClnW;;AEzjCooW;EAAQ;EAA8B;AF8jC1qW;;AE9jCqsW;EAAM;EAAmB;AFmkC9tW;;AEnkCkvW;EAAM;EAAkB;AFwkC1wW;;AExkC6xW;EAAM;EAAoB;AF6kCvzW;;AE7kC40W;EAAM;EAAsB;AFklCx2W;;AEllC23W;EAAM;EAAqB;AFulCt5W;;AEvlC46W;EAAM;EAAoB;AF4lCt8W;;AE5lCu9W;EAAM;EAAoB;AFimCj/W;;AEjmCsgX;EAAM;EAAe;AFsmC3hX;;AEtmC2iX;EAAQ;EAA8B;AF2mCjlX;;AE3mCgnX;EAAM;EAAsB;AFgnC5oX;;AEhnC+pX;EAAM;AFonCrqX;;AEpnCwrX;EAAM;AFwnC9rX;;AExnCgtX;EAAM;AF4nCttX;;AE5nC2uX;EAAM;AFgoCjvX;;AEhoCqwX;EAAM;AFooC3wX;;AEpoC0xX;EAAW;AFwoCryX;;AExoCqzX;EAAa;AF4oCl0X;;AE5oCo1X;EAAe;AFgpCn2X;;AEhpC+3X;EAAY;AFopC34X;;AEppC45X;EAAc;AFwpC16X;;AExpCq8X;EAAc;AF4pCn9X;;AE5pCy+X;EAAY;AFgqCr/X;;AEhqCsjY;EAAS;EAAkB;AFqqCjlY;;AErqCqmY;EAAS;EAAmB;AF0qCjoY;;AE1qCqpY;EAAW;EAAe;AF+qC/qY;;AE/qCksY;EAAS;EAAkB;AForC7tY;;AEprCivY;EAAS;EAAiB;AFyrC3wY;;AEzrC4xY;EAAU;EAAmB;AF8rCzzY;;AE9rC60Y;EAAa;AFksC11Y;;AElsC02Y;EAAe;AFssCz3Y;;AEtsCy4Y;EAAW;AF0sCp5Y;;AE1sCo6Y;EAAa;AF8sCj7Y;;AE9sCi8Y;EAAY;AFktC78Y;;AEltC69Y;EAAW;AFstCx+Y;;AEttCigZ;EAAY;AF0tC7gZ;;AE1tCuiZ;EAAQ;AF8tC/iZ;;AE9tCikZ;EAAe;AFkuChlZ;;AEluCimZ;EAAe;AFsuChnZ;;AEtuCsoZ;EAAiB;EAA8B;AF2uCrrZ;;AE3uC2uZ;EAAe;EAAoB;AFgvC9wZ;;AEhvC0zZ;EAAgB;EAA8B;AFqvCx2Z;;AErvCi6Z;EAAiB;EAAoB;AF0vCt8Z;;AE1vCm/Z;EAAY;EAAoB;AF+vCnha;;AE/vCkka;EAAY;EAAoB;AFowClma;;AEpwC2oa;EAAc;EAAoB;AFywC7qa;;AEzwC0ta;EAAiB;EAAoB;AF8wC/va;;AE9wC4ya;EAAe;EAAoB;AFmxC/0a;;AEnxC83a;EAAe;EAAoB;AFwxCj6a;;AExxC88a;EAAgB;EAAoB;AF6xCl/a;;AE7xC8hb;EAAc;EAAoB;AFkyChkb;;AElyC6mb;EAAe;EAAoB;AFuyChpb;;AEvyC+rb;EAAc;EAAoB;AF4yCjub;;AE5yCgxb;EAAe;EAAoB;AFizCnzb;;AEjzC+1b;EAAe;EAAoB;AFszCl4b;;AEtzC86b;EAA0B;EAAoB;AF2zC59b;;AE3zCwgc;EAA2B;EAAoB;AFg0Cvjc;;AEh0Cqmc;EAAgB;EAAoB;AFq0Czoc;;AEr0Csrc;EAAW;AFy0Cjsc;;AEz0C2tc;EAAc;AF60Czuc;;AE70C8vc;EAAQ;AFi1Ctwc;;AEj1Cy0c;EAAmB;AFq1C51c;;AEr1C+7c;EAAW;AFy1C18c;;AEz1Ck/c;EAAW;AF61C7/c;;AE71C0kd;EAAyB;AFi2Cnmd;;AEj2Cssd;EAAc;AFq2Cptd;;AEr2Ckwd;EAAW;AFy2C7wd;;AEz2Cs1d;EAAwB;AF62C92d;;AE72Ci9d;EAAa;AFi3C99d;;AEj3Co/d;EAAW;EAA2E;AFs3C1ke;;AEt3C6qe;EAAc;EAA8B;AF23Czte;;AE33C4ue;EAAQ;EAA2G;AFg4C/1e;;AEh4Ck8e;EAAc;AFo4Ch9e;;AEp4Cyif;EAAM;EAA2G;AFy4C1pf;;AEz4Cmwf;EAA2B;EAAoB;AF84Clzf;;AE94C02f;EAAM;AFk5Ch3f;;AEl5Co4f;EAAc;AFs5Cl5f;;AEt5C06f;EAAK;EAA2B;EAAsF;EAA8F;EAAyB;EAAoE;AF+5C3tgB;;AE/5C6ugB;EAA6C;EAAe;AFo6CzygB;;AEp6CmzgB;EAAmD;EAAqD;AFy6C35gB;;AEz6C06gB;EAAmD;EAAyB;AF86Ct/gB;;AE96CqghB;EAAW;AFk7ChhhB;;AEl7CqihB;EAAgC;EAAwB;EAAyB;AFw7CtnhB;;AEx7C4phB;EAA6B;AF47CzrhB;;AE57C+shB;EAAyD;EAAsB;EAAoB;AFk8ClzhB;;AEl8Cu0hB;EAAkB;EAAY;AFu8Cr2hB;;AEv8Cq3hB;EAA6G;EAAkB;EAAwD;EAAmB;EAAqB;AF+8CpliB;;AE/8CmmiB;EAAqH;AFm9CxtiB;;AEn9C4uiB;EAAyB;IAAgC;IAAwB;EFy9C3ziB;;EEz9Cu1iB;IAAkB;IAAa;EF89Ct3iB;AACF;AE/9C24iB;EAA0B;IAAgC;IAA4B;EFo+C/9iB;AACF;AEr+CygjB;EAAO;EAA2B;EAAsF;EAAyB;EAAkB;EAAyE;AF6+CrvjB;AE7+Cw1jB;EAAa;AFg/Cr2jB;AEh/Cg7jB;EAAM;EAA2B;EAAoF;EAAyB;EAAkB;EAAyE;AFw/CzpkB;AEx/C4vkB;EAAO;EAA2B;EAAsF;EAAyB;EAAkB;EAAyE;AFggDx+kB;AEhgD2klB;EAAe;AFmgD1llB;AEngDqqlB;EAAQ;EAA2B;EAAsF;EAAyB;EAAkB;EAAyE;AF2gDl5lB;AE3gDq/lB;EAAS;EAA2B;EAAqF;EAAyB;EAAkB;EAAyE;AFmhDlumB;AEnhDq0mB;EAAmB;AFshDx1mB;AEthDm6mB;EAAU;EAA2B;EAAqF;EAAyB;EAAkB;EAAyE;AF8hDjpnB;;AE9hDqvnB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AFsiD59nB;;AEtiDu+nB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AF+iDnloB;;AE/iDomoB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AFyjDxuoB;;AEzjDmvoB;EAAyB;IAAmC;EF8jD7yoB;;EE9jD6zoB;IAAuB;EFkkDp1oB;;EElkDg2oB;IAA4B;IAAc;EFukD14oB;;EEvkDq5oB;IAAyB;IAAc;EF4kD57oB;;EE5kD48oB;IAAyB;IAAc;EFilDn/oB;;EEjlDogpB;IAAyB;IAAc;EFslD3ipB;;EEtlDqjpB;IAAyB;IAAc;EF2lD5lpB;;EE3lD6mpB;IAAyB;IAAc;EFgmDpppB;;EEhmDqqpB;IAAyB;IAAc;EFqmD5spB;;EErmDstpB;IAAyB;IAAc;EF0mD7vpB;;EE1mD8wpB;IAAyB;IAAc;EF+mDrzpB;;EE/mDs0pB;IAAyB;IAAc;EFonD72pB;;EEpnDu3pB;IAA0B;IAAc;EFynD/5pB;;EEznDg7pB;IAA0B;IAAc;EF8nDx9pB;;EE9nDy+pB;IAA0B;IAAc;EFmoDjhqB;AACF;AEpoD+hqB;EAAyB;IAAsD;EFwoD5mqB;;EExoD4nqB;IAAuB;EF4oDnpqB;;EE5oD+pqB;IAA4B;IAAc;EFipDzsqB;;EEjpDotqB;IAAyB;IAAc;EFspD3vqB;;EEtpD2wqB;IAAyB;IAAc;EF2pDlzqB;;EE3pDm0qB;IAAyB;IAAc;EFgqD12qB;;EEhqDo3qB;IAAyB;IAAc;EFqqD35qB;;EErqD46qB;IAAyB;IAAc;EF0qDn9qB;;EE1qDo+qB;IAAyB;IAAc;EF+qD3grB;;EE/qDqhrB;IAAyB;IAAc;EForD5jrB;;EEprD6krB;IAAyB;IAAc;EFyrDpnrB;;EEzrDqorB;IAAyB;IAAc;EF8rD5qrB;;EE9rDsrrB;IAA0B;IAAc;EFmsD9trB;;EEnsD+urB;IAA0B;IAAc;EFwsDvxrB;;EExsDwyrB;IAA0B;IAAc;EF6sDh1rB;AACF;AE9sD81rB;EAA0B;IAAyE;EFktD/7rB;;EEltDg9rB;IAAuB;EFstDv+rB;;EEttDm/rB;IAA4B;IAAc;EF2tD7hsB;;EE3tDwisB;IAAyB;IAAc;EFguD/ksB;;EEhuD+lsB;IAAyB;IAAc;EFquDtosB;;EEruDupsB;IAAyB;IAAc;EF0uD9rsB;;EE1uDwssB;IAAyB;IAAc;EF+uD/usB;;EE/uDgwsB;IAAyB;IAAc;EFovDvysB;;EEpvDwzsB;IAAyB;IAAc;EFyvD/1sB;;EEzvDy2sB;IAAyB;IAAc;EF8vDh5sB;;EE9vDi6sB;IAAyB;IAAc;EFmwDx8sB;;EEnwDy9sB;IAAyB;IAAc;EFwwDhgtB;;EExwD0gtB;IAA0B;IAAc;EF6wDljtB;;EE7wDmktB;IAA0B;IAAc;EFkxD3mtB;;EElxD4ntB;IAA0B;IAAc;EFuxDpqtB;AACF;AExxDkrtB;EAA0B;IAA4F;EF4xDtytB;;EE5xDuztB;IAAuB;EFgyD90tB;;EEhyD01tB;IAA4B;IAAc;EFqyDp4tB;;EEryD+4tB;IAAyB;IAAc;EF0yDt7tB;;EE1yDs8tB;IAAyB;IAAc;EF+yD7+tB;;EE/yD8/tB;IAAyB;IAAc;EFozDriuB;;EEpzD+iuB;IAAyB;IAAc;EFyzDtluB;;EEzzDumuB;IAAyB;IAAc;EF8zD9ouB;;EE9zD+puB;IAAyB;IAAc;EFm0DtsuB;;EEn0DgtuB;IAAyB;IAAc;EFw0DvvuB;;EEx0DwwuB;IAAyB;IAAc;EF60D/yuB;;EE70Dg0uB;IAAyB;IAAc;EFk1Dv2uB;;EEl1Di3uB;IAA0B;IAAc;EFu1Dz5uB;;EEv1D06uB;IAA0B;IAAc;EF41Dl9uB;;EE51Dm+uB;IAA0B;IAAc;EFi2D3gvB;AACF;AEl2DyhvB;EAA0B;IAAgH;EFs2DjqvB;;EEt2DkrvB;IAAwB;EF02D1svB;;EE12DstvB;IAA6B;IAAc;EF+2DjwvB;;EE/2D4wvB;IAA0B;IAAc;EFo3DpzvB;;EEp3Do0vB;IAA0B;IAAc;EFy3D52vB;;EEz3D63vB;IAA0B;IAAc;EF83Dr6vB;;EE93D+6vB;IAA0B;IAAc;EFm4Dv9vB;;EEn4Dw+vB;IAA0B;IAAc;EFw4DhhwB;;EEx4DiiwB;IAA0B;IAAc;EF64DzkwB;;EE74DmlwB;IAA0B;IAAc;EFk5D3nwB;;EEl5D4owB;IAA0B;IAAc;EFu5DprwB;;EEv5DqswB;IAA0B;IAAc;EF45D7uwB;;EE55DuvwB;IAA2B;IAAc;EFi6DhywB;;EEj6DizwB;IAA2B;IAAc;EFs6D11wB;;EEt6D22wB;IAA2B;IAAc;EF26Dp5wB;AACF;AE56Dk6wB;EAA0B;IAAqI;EFg7D/jxB;;EEh7DglxB;IAAyB;EFo7DzmxB;;EEp7DqnxB;IAA8B;IAAc;EFy7DjqxB;;EEz7D4qxB;IAA2B;IAAc;EF87DrtxB;;EE97DquxB;IAA2B;IAAc;EFm8D9wxB;;EEn8D+xxB;IAA2B;IAAc;EFw8Dx0xB;;EEx8Dk1xB;IAA2B;IAAc;EF68D33xB;;EE78D44xB;IAA2B;IAAc;EFk9Dr7xB;;EEl9Ds8xB;IAA2B;IAAc;EFu9D/+xB;;EEv9Dy/xB;IAA2B;IAAc;EF49DliyB;;EE59DmjyB;IAA2B;IAAc;EFi+D5lyB;;EEj+D6myB;IAA2B;IAAc;EFs+DtpyB;;EEt+DgqyB;IAA4B;IAAc;EF2+D1syB;;EE3+D2tyB;IAA4B;IAAc;EFg/DrwyB;;EEh/DsxyB;IAA4B;IAAc;EFq/Dh0yB;AACF;AEt/D80yB;EAAsB;EAAyC;AF0/D74yB;AE1/D47yB;EAAO;EAA4C;AF8/D/+yB;AE9/D2hzB;EAAU;EAA+C;AFkgEplzB;AElgE6nzB;EAAO;EAA4C;AFsgEhrzB;AEtgEytzB;EAAU;EAA+C;AF0gElxzB;AE1gE2zzB;EAAS;EAA8C;AF8gEl3zB;AE9gE25zB;EAAU;EAA+C;AFkhEp9zB;;AElhE8/zB;EAA6B;EAAuB;AFuhElj0B;AEvhEml0B;EAAM;AF0hEzl0B;AE1hEym0B;EAAM;AF6hE/m0B;AE7hEso0B;EAAM;AFgiE5o0B;AEhiEkq0B;EAAM;AFmiExq0B;AEniE6r0B;EAAM;AFsiEns0B;;AEtiEqu0B;EAA8B;AF0iEnw0B;;AE1iE0x0B;EAAgB;EAAyE;EAAqB;EAAmB;EAAqB;EAAmG;EAAqB;AFojExi1B;;AEpjE+j1B;EAAsB;EAA2E;AFyjEhq1B;;AEzjEmw1B;EAAyB;EAAkB;EAAkB;EAAoB;EAAwD;AFikE541B;;AEjkE271B;EAAuB;EAA2B;EAAqF;EAAyB;EAAkB;EAAoB;EAAyE;EAA2E;EAAmG;AF6kEx32B;;AE7kEu62B;EAA8B;EAA8B;AFklEn+2B;;AEllEyh3B;EAA2B;AFslEpj3B;;AEtlEyk3B;EAAgC;EAAsB;AF2lE/n3B;;AE3lEur3B;EAAmB;EAA2G;EAAyG;AFimE953B;;AEjmEu/3B;EAA8B;EAAoB;AFsmEzi4B;;AEtmEkm4B;EAA8B;AF0mEho4B;;AE1mEsp4B;EAAyB;IAAY;EF+mEzr4B;;EE/mEss4B;IAAY;EFmnElt4B;AACF;AEpnE+t4B;EAAyB;IAAW;EFwnEjw4B;;EExnE+w4B;IAAY;EF4nE3x4B;;EE5nEwy4B;IAAc;EFgoEtz4B;;EEhoEy04B;IAAc;EFooEv14B;AACF;AEroEg34B;EAA0B;IAAc;EFyoEt54B;AACF;AD3nEA;AIjBA;AAEA;AAA+F;EAAK;EAA8B;EAAiB;EAAgB;EAAc;AHopEjL;;AGppE4L;EAAK;EAAgH;AHypEjT;;AGzpE0T;EAAG;EAAc;AH8pE3U;;AG9pEoV;EAAY;EAAyC;AHmqEzY;;AGnqE0a;EAAS;AHuqEnb;;AGvqEsc;EAAkB;EAAiF;AH4qEziB;;AG5qEujB;EAAM;AHgrE7jB;;AGhrE2kB;EAAQ;EAAc;EAAc;EAAkB;AHurEjoB;;AGvrEypB;EAAI;AH2rE7pB;;AG3rE2qB;EAAI;AH+rE/qB;;AG/rEyrB;EAAM;EAAqB;AHosEptB;;AGpsEkuB;EAAsC;EAAoB;EAAe;EAAiB;AH2sE5zB;;AG3sEq0B;EAAc;AH+sEn1B;;AG/sEu2B;EAAgD;AHmtEv5B;;AGntEi7B;EAAmB;EAAkB;AHwtEt9B;;AGxtEg+B;EAAgB;AH4tEh/B;;AG5tE8gC;EAAiB;AHguE/hC;;AGhuE+iC;EAAO;AHouEtjC;;AGpuEgkC;EAAS;AHwuEzkC;;AGxuEimC;EAAwD;AH4uEzpC;;AG5uEqqC;EAAc;EAA6B;AHivEhtC;;AGjvEouC;EAA4B;AHqvEhwC;;AGrvEwxC;EAA6B;EAA0B;AH0vE/0C;;AG1vE41C;EAAQ;AH8vEp2C;;AG9vEs3C;EAAmD;AHkwEz6C;;AGlwEk7C;EAAO;EAA6B;AHuwEt9C;;AGvwE4+C;EAAe;EAAS;AH4wEpgD;;AG5wE8gD;EAAM;AHgxEphD;;AGhxEoiD;EAAK;EAAiM;AHqxE1uD;;AGrxE0vD;EAAK;EAAoB;AH0xEnxD;;AG1xEuyD;EAAiB;EAAe;AH+xEv0D;;AG/xE61D;EAAG;AHmyEh2D;;AGnyEq3D;EAAI;AHuyEz3D;;AGvyE44D;EAAS;AH2yEr5D;;AG3yEq6D;EAAmD;EAAc;AHgzEt+D;;AGhzEg/D;EAA2D;EAAc;AHqzEzjE;;AGrzEmkE;EAAyC;EAAc;AH0zE1nE;;AG1zEooE;EAAqB;AH8zEzpE;;AG9zEwqE;EAAgB;AHk0ExrE;;AGl0EqsE;EAAM;AHs0E3sE;;AGt0EouE;EAAkB;EAAkB;AH20ExwE;;AG30E4xE;EAAE;EAAc;AHg1E5yE;;AGh1Eo0E;EAAsC;EAAc;EAAoB;AHs1E54E;;AGt1Es5E;EAAkB;AH01Ex6E;;AG11E4gF;EAA+C;EAAc;AH+1EzkF;;AG/1E+lF;EAAU;EAAY;AHo2ErnF;;AGp2EooF;EAAS;AHw2E7oF;;AGx2E0pF;EAAiB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAgN;EAAsB;EAA4C;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAAsC;EAA4C;EAA0C;EAA2C;EAA4C;EAAwC;EAA0C;EAAuC;EAA6C;EAAsL;AHs4ExwH;;AGt4Eg0H;EAAW;AH04E30H;;AG14Es1H;EAAyB;IAAW;EH+4Ex3H;AACF;AGh5E24H;EAAyB;IAAW;EHo5E76H;AACF;AGr5Eg8H;EAA0B;IAAW;EHy5En+H;AACF;AG15Eu/H;EAA0B;IAAW;EH85E1hI;AACF;AG/5E8iI;EAA0B;IAAW;EHm6EjlI;AACF;AGp6EqmI;EAA0B;IAAW;EHw6ExoI;AACF;AGz6E4pI;EAAS;AH46ErqI;;AG56EwrI;EAAQ;AHg7EhsI;;AGh7EgtI;EAAO;AHo7EvtI;;AGp7EsuI;EAAU;AHw7EhvI;;AGx7EkwI;EAAU;AH47E5wI;;AG57E8xI;EAAS;EAAS;EAAO;EAAQ;AHm8E/zI;;AGn8Eq0I;EAAQ;AHu8E70I;;AGv8Ew1I;EAAQ;AH28Eh2I;;AG38Eu2I;EAAS;AH+8Eh3I;;AG/8Ew3I;EAAS;AHm9Ej4I;;AGn9E44I;EAAW;AHu9Ev5I;;AGv9Em6I;EAAO;AH29E16I;;AG39Eg7I;EAAO;AH+9Ev7I;;AG/9Eg8I;EAAS;AHm+Ez8I;;AGn+Em9I;EAAQ;AHu+E39I;;AGv+Eo+I;EAAQ;AH2+E5+I;;AG3+Eq/I;EAAU;AH++E//I;;AG/+E4gJ;EAAS;AHm/ErhJ;;AGn/EmiJ;EAAM;AHu/EziJ;;AGv/EojJ;EAAM;AH2/E1jJ;;AG3/EqkJ;EAAM;AH+/E3kJ;;AG//EslJ;EAAK;AHmgF3lJ;;AGngFqmJ;EAAK;AHugF1mJ;;AGvgFwnJ;EAAK;AH2gF7nJ;;AG3gFsoJ;EAAM;EAAoB;AHghFhqJ;;AGhhFirJ;EAAM;EAAgB;AHqhFvsJ;;AGrhFotJ;EAAM;EAAqB;AH0hF/uJ;;AG1hFiwJ;EAAM;EAAmB;AH+hF1xJ;;AG/hF0yJ;EAAM;EAAkB;AHoiFl0J;;AGpiFq1J;EAAM;EAAmB;AHyiF92J;;AGziFk4J;EAAQ;EAA6B;AH8iFv6J;;AG9iFq8J;EAAM;AHkjF38J;;AGljF69J;EAAM;AHsjFn+J;;AGtjFm/J;EAAM;AH0jFz/J;;AG1jF4gK;EAAM;AH8jFlhK;;AG9jFoiK;EAAM;AHkkF1iK;;AGlkF8jK;EAAM;AHskFpkK;;AGtkFulK;EAAM;AH0kF7lK;;AG1kFinK;EAAM;AH8kFvnK;;AG9kF0oK;EAAM;AHklFhpK;;AGllF6pK;EAAM;AHslFnqK;;AGtlForK;EAAM;AH0lF1rK;;AG1lF4sK;EAAM;AH8lFltK;;AG9lFouK;EAAM;AHkmF1uK;;AGlmFwvK;EAAM;AHsmF9vK;;AGtmF6wK;EAAM;AH0mFnxK;;AG1mFsyK;EAAO;AH8mF7yK;;AG9mF+zK;EAAO;AHknFt0K;;AGlnFy1K;EAAO;AHsnFh2K;;AGtnFm3K;EAAM;AH0nFz3K;;AG1nF84K;EAAM;AH8nFp5K;;AG9nFq6K;EAAO;AHkoF56K;;AGloF87K;EAAM;AHsoFp8K;;AGtoFw9K;EAAO;AH0oF/9K;;AG1oF6+K;EAAS;AH8oFt/K;;AG9oF8gL;EAAc;AHkpF5hL;;AGlpFijL;EAAM;AHspFvjL;;AGtpFokL;EAAQ;AH0pF5kL;;AG1pFmmL;EAAa;AH8pFhnL;;AG9pFooL;EAAO;AHkqF3oL;;AGlqFypL;EAAY;AHsqFrqL;;AGtqFwrL;EAAoB;AH0qF5sL;;AG1qFuuL;EAAiB;AH8qFxvL;;AG9qFgxL;EAAW;AHkrF3xL;;AGlrF6yL;EAAM;AHsrFnzL;;AGtrFg0L;EAAU;AH0rF10L;;AG1rF21L;EAAQ;AH8rFn2L;;AG9rFg3L;EAAQ;AHksFx3L;;AGlsFo4L;EAAM;AHssF14L;;AGtsFs5L;EAAM;AH0sF55L;;AG1sFw6L;EAAM;AH8sF96L;;AG9sF27L;EAAM;AHktFj8L;;AGltF88L;EAAK;AHstFn9L;;AGttFi+L;EAAK;AH0tFt+L;;AG1tFk/L;EAAM;AH8tFx/L;;AG9tFqgM;EAAM;AHkuF3gM;;AGluFwhM;EAAM;AHsuF9hM;;AGtuF0iM;EAAM;AH0uFhjM;;AG1uF8jM;EAAM;AH8uFpkM;;AG9uFmlM;EAAM;AHkvFzlM;;AGlvFqmM;EAAU;AHsvF/mM;;AGtvFgoM;EAAQ;AH0vFxoM;;AG1vFmpM;EAAM;AH8vFzpM;;AG9vFoqM;EAAM;AHkwF1qM;;AGlwFqrM;EAAO;EAA0B;EAAuB;AHwwF7uM;;AGxwF+vM;EAAK;AH4wFpwM;;AG5wFixM;EAAQ;AHgxFzxM;;AGhxFoyM;EAAM;AHoxF1yM;;AGpxFszM;EAAM;AHwxF5zM;;AGxxFw0M;EAAM;AH4xF90M;;AG5xFy1M;EAAM;AHgyF/1M;;AGhyF22M;EAAM;AHoyFj3M;;AGpyF63M;EAAM;AHwyFn4M;;AGxyF+4M;EAAQ;AH4yFv5M;;AG5yF46M;EAAW;AHgzFv7M;;AGhzFm8M;EAAW;AHozF98M;;AGpzF4+M;EAAQ;AHwzFp/M;;AGxzFggN;EAAW;AH4zF3gN;;AG5zFgiN;EAAiB;EAAwB;EAAqB;AHk0F9lN;;AGl0F8mN;EAAU;AHs0FxnN;;AGt0F2oN;EAAkB;AH00F7pN;;AG10FwrN;EAAU;AH80FlsN;;AG90FwtN;EAAW;AHk1FnuN;;AGl1FkvN;EAAa;AHs1F/vN;;AGt1FgxN;EAAgB;AH01FhyN;;AG11FqzN;EAAiB;AH81Ft0N;;AG91Fk2N;EAAa;AHk2F/2N;;AGl2Fs4N;EAAW;AHs2Fj5N;;AGt2Fs6N;EAAc;AH02Fp7N;;AG12Fu8N;EAAe;AH82Ft9N;;AG92Fi/N;EAAa;AHk3F9/N;;AGl3FuhO;EAAgB;AHs3FviO;;AGt3F8jO;EAAiB;AH03F/kO;;AG13F6mO;EAAmB;AH83FhoO;;AG93FwqO;EAAgB;AHk4FxrO;;AGl4FqtO;EAAyC;EAAuB;EAAqD;AHw4F10O;;AGx4Fk4O;EAAiB;AH44Fn5O;;AG54Fm6O;EAAiB;AHg5Fp7O;;AGh5Fo8O;EAAmB;AHo5Fv9O;;AGp5Fy+O;EAAmB;AHw5F5/O;;AGx5F8gP;EAAmB;AH45FjiP;;AG55FmjP;EAAU;EAAgB;EAAuB;AHk6FpmP;;AGl6FunP;EAAmB;AHs6F1oP;;AGt6F6pP;EAAmB;AH06FhrP;;AG16FmsP;EAAqB;AH86FxtP;;AG96F6uP;EAAqB;AHk7FlwP;;AGl7FuxP;EAAY;AHs7FnyP;;AGt7FyzP;EAAc;AH07Fv0P;;AG17F41P;EAAS;AH87Fr2P;;AG97F03P;EAAc;AHk8Fx4P;;AGl8Fw5P;EAAa;AHs8Fr6P;;AGt8Fw7P;EAAY;AH08Fp8P;;AG18Fy9P;EAAa;AH88Ft+P;;AG98F2/P;EAAgB;EAA6B;AHm9FxiQ;;AGn9FkkQ;EAAc;EAAkC;AHw9FlnQ;;AGx9FqpQ;EAAU;AH49F/pQ;;AG59FgrQ;EAAQ;AHg+FxrQ;;AGh+FysQ;EAAU;AHo+FntQ;;AGp+FkuQ;EAAY;AHw+F9uQ;;AGx+FswQ;EAAY;AH4+FlxQ;;AG5+FuyQ;EAAU;AHg/FjzQ;;AGh/Fy0Q;EAAU;AHo/Fn1Q;;AGp/Fw2Q;EAAY;AHw/Fp3Q;;AGx/F24Q;EAAY;AH4/Fv5Q;;AG5/F66Q;EAAc;AHggG37Q;;AGhgG88Q;EAAa;AHogG39Q;;AGpgG6+Q;EAAiB;EAAsB;AHygGphR;;AGzgG4kR;EAAmB;EAAsB;AH8gGrnR;;AG9gG4qR;EAA6B;EAAsB;AHmhG/tR;;AGnhGsxR;EAAiB;EAAsB;AHwhG7zR;;AGxhGq3R;EAAgB;EAAsB;AH6hG35R;;AG7hGi9R;EAAiB;EAAsB;AHkiGx/R;;AGliGgjS;EAAoB;AHsiGpkS;;AGtiG6lS;EAA4B;EAAsB;AH2iG/oS;;AG3iGosS;EAAU;EAAkB;AHgjGhuS;;AGhjGwxS;EAAc;EAAkB;AHqjGxzS;;AGrjG+2S;EAAY;EAAkB;AH0jG74S;;AG1jGq8S;EAAa;EAAkB;AH+jGp+S;;AG/jG4hT;EAAa;EAAkB;AHokG3jT;;AGpkGmnT;EAAgB;AHwkGnoT;;AGxkGgqT;EAAc;EAAkB;AH6kGhsT;;AG7kGovT;EAAmB;AHilGvwT;;AGjlG+0T;EAAkB;AHqlGj2T;;AGrlGq6T;EAAmB;AHylGx7T;;AGzlGmgU;EAA6B;EAA2B;AH8lG3jU;;AG9lGgpU;EAAc;EAA2B;AHmmGzrU;;AGnmG+wU;EAA2B;EAA2B;AHwmGr0U;;AGxmG05U;EAAW;AH4mGr6U;;AG5mG8/U;EAAc;AHgnG5gV;;AGhnG0mV;EAAwB;AHonGloV;;AGpnG2pV;EAAc;AHwnGzqV;;AGxnG2rV;EAAgB;EAAsB;AH6nGjuV;;AG7nGovV;EAAc;EAAoB;AHkoGtxV;;AGloGuyV;EAAe;EAA0B;AHuoGh1V;;AGvoGu2V;EAAK;AH2oG52V;;AG3oG23V;EAAK;AH+oGh4V;;AG/oG+4V;EAAK;AHmpGp5V;;AGnpGi6V;EAAK;AHupGt6V;;AGvpGq7V;EAAK;AH2pG17V;;AG3pGw8V;EAAK;AH+pG78V;;AG/pGu9V;EAAQ;EAAgC;AHoqG//V;;AGpqG4hW;EAAQ;EAAyB;AHyqG7jW;;AGzqGulW;EAAM;EAAqB;AH8qGlnW;;AG9qGooW;EAAQ;EAA8B;AHmrG1qW;;AGnrGqsW;EAAM;EAAmB;AHwrG9tW;;AGxrGkvW;EAAM;EAAkB;AH6rG1wW;;AG7rG6xW;EAAM;EAAoB;AHksGvzW;;AGlsG40W;EAAM;EAAsB;AHusGx2W;;AGvsG23W;EAAM;EAAqB;AH4sGt5W;;AG5sG46W;EAAM;EAAoB;AHitGt8W;;AGjtGu9W;EAAM;EAAoB;AHstGj/W;;AGttGsgX;EAAM;EAAe;AH2tG3hX;;AG3tG2iX;EAAQ;EAA8B;AHguGjlX;;AGhuGgnX;EAAM;EAAsB;AHquG5oX;;AGruG+pX;EAAM;AHyuGrqX;;AGzuGwrX;EAAM;AH6uG9rX;;AG7uGgtX;EAAM;AHivGttX;;AGjvG2uX;EAAM;AHqvGjvX;;AGrvGqwX;EAAM;AHyvG3wX;;AGzvG0xX;EAAW;AH6vGryX;;AG7vGqzX;EAAa;AHiwGl0X;;AGjwGo1X;EAAe;AHqwGn2X;;AGrwG+3X;EAAY;AHywG34X;;AGzwG45X;EAAc;AH6wG16X;;AG7wGq8X;EAAc;AHixGn9X;;AGjxGy+X;EAAY;AHqxGr/X;;AGrxGsjY;EAAS;EAAkB;AH0xGjlY;;AG1xGqmY;EAAS;EAAmB;AH+xGjoY;;AG/xGqpY;EAAW;EAAe;AHoyG/qY;;AGpyGksY;EAAS;EAAkB;AHyyG7tY;;AGzyGivY;EAAS;EAAiB;AH8yG3wY;;AG9yG4xY;EAAU;EAAmB;AHmzGzzY;;AGnzG60Y;EAAa;AHuzG11Y;;AGvzG02Y;EAAe;AH2zGz3Y;;AG3zGy4Y;EAAW;AH+zGp5Y;;AG/zGo6Y;EAAa;AHm0Gj7Y;;AGn0Gi8Y;EAAY;AHu0G78Y;;AGv0G69Y;EAAW;AH20Gx+Y;;AG30GigZ;EAAY;AH+0G7gZ;;AG/0GuiZ;EAAQ;AHm1G/iZ;;AGn1GikZ;EAAe;AHu1GhlZ;;AGv1GimZ;EAAe;AH21GhnZ;;AG31GsoZ;EAAiB;EAA8B;AHg2GrrZ;;AGh2G2uZ;EAAe;EAAoB;AHq2G9wZ;;AGr2G0zZ;EAAgB;EAA8B;AH02Gx2Z;;AG12Gi6Z;EAAiB;EAAoB;AH+2Gt8Z;;AG/2Gm/Z;EAAY;EAAoB;AHo3Gnha;;AGp3Gkka;EAAY;EAAoB;AHy3Glma;;AGz3G2oa;EAAc;EAAoB;AH83G7qa;;AG93G0ta;EAAiB;EAAoB;AHm4G/va;;AGn4G4ya;EAAe;EAAoB;AHw4G/0a;;AGx4G83a;EAAe;EAAoB;AH64Gj6a;;AG74G88a;EAAgB;EAAoB;AHk5Gl/a;;AGl5G8hb;EAAc;EAAoB;AHu5Ghkb;;AGv5G6mb;EAAe;EAAoB;AH45Ghpb;;AG55G+rb;EAAc;EAAoB;AHi6Gjub;;AGj6Ggxb;EAAe;EAAoB;AHs6Gnzb;;AGt6G+1b;EAAe;EAAoB;AH26Gl4b;;AG36G86b;EAA0B;EAAoB;AHg7G59b;;AGh7Gwgc;EAA2B;EAAoB;AHq7Gvjc;;AGr7Gqmc;EAAgB;EAAoB;AH07Gzoc;;AG17Gsrc;EAAW;AH87Gjsc;;AG97G2tc;EAAc;AHk8Gzuc;;AGl8G8vc;EAAQ;AHs8Gtwc;;AGt8Gy0c;EAAmB;AH08G51c;;AG18G+7c;EAAW;AH88G18c;;AG98Gk/c;EAAW;AHk9G7/c;;AGl9G0kd;EAAyB;AHs9Gnmd;;AGt9Gssd;EAAc;AH09Gptd;;AG19Gkwd;EAAW;AH89G7wd;;AG99Gs1d;EAAwB;AHk+G92d;;AGl+Gi9d;EAAa;AHs+G99d;;AGt+Go/d;EAAW;EAA2E;AH2+G1ke;;AG3+G6qe;EAAc;EAA8B;AHg/Gzte;;AGh/G4ue;EAAQ;EAA2G;AHq/G/1e;;AGr/Gk8e;EAAc;AHy/Gh9e;;AGz/Gyif;EAAM;EAA2G;AH8/G1pf;;AG9/Gmwf;EAA2B;EAAoB;AHmgHlzf;;AGngH02f;EAAM;AHugHh3f;;AGvgHo4f;EAAc;AH2gHl5f;;AG3gH06f;EAAK;EAA2B;EAAsF;EAA8F;EAAyB;EAAoE;AHohH3tgB;;AGphH6ugB;EAA6C;EAAe;AHyhHzygB;;AGzhHmzgB;EAAmD;EAAqD;AH8hH35gB;;AG9hH06gB;EAAmD;EAAyB;AHmiHt/gB;;AGniHqghB;EAAW;AHuiHhhhB;;AGviHqihB;EAAgC;EAAwB;EAAyB;AH6iHtnhB;;AG7iH4phB;EAA6B;AHijHzrhB;;AGjjH+shB;EAAyD;EAAsB;EAAoB;AHujHlzhB;;AGvjHu0hB;EAAkB;EAAY;AH4jHr2hB;;AG5jHq3hB;EAA6G;EAAkB;EAAwD;EAAmB;EAAqB;AHokHpliB;;AGpkHmmiB;EAAqH;AHwkHxtiB;;AGxkH4uiB;EAAyB;IAAgC;IAAwB;EH8kH3ziB;;EG9kHu1iB;IAAkB;IAAa;EHmlHt3iB;AACF;AGplH24iB;EAA0B;IAAgC;IAA4B;EHylH/9iB;AACF;AG1lHygjB;EAAO;EAA2B;EAAsF;EAAyB;EAAkB;EAAyE;AHkmHrvjB;AGlmHw1jB;EAAa;AHqmHr2jB;AGrmHg7jB;EAAM;EAA2B;EAAoF;EAAyB;EAAkB;EAAyE;AH6mHzpkB;AG7mH4vkB;EAAO;EAA2B;EAAsF;EAAyB;EAAkB;EAAyE;AHqnHx+kB;AGrnH2klB;EAAe;AHwnH1llB;AGxnHqqlB;EAAQ;EAA2B;EAAsF;EAAyB;EAAkB;EAAyE;AHgoHl5lB;AGhoHq/lB;EAAS;EAA2B;EAAqF;EAAyB;EAAkB;EAAyE;AHwoHlumB;AGxoHq0mB;EAAmB;AH2oHx1mB;AG3oHm6mB;EAAU;EAA2B;EAAqF;EAAyB;EAAkB;EAAyE;AHmpHjpnB;;AGnpHqvnB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AH2pH59nB;;AG3pHu+nB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AHoqHnloB;;AGpqHomoB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AH8qHxuoB;;AG9qHmvoB;EAAyB;IAAmC;EHmrH7yoB;;EGnrH6zoB;IAAuB;EHurHp1oB;;EGvrHg2oB;IAA4B;IAAc;EH4rH14oB;;EG5rHq5oB;IAAyB;IAAc;EHisH57oB;;EGjsH48oB;IAAyB;IAAc;EHssHn/oB;;EGtsHogpB;IAAyB;IAAc;EH2sH3ipB;;EG3sHqjpB;IAAyB;IAAc;EHgtH5lpB;;EGhtH6mpB;IAAyB;IAAc;EHqtHpppB;;EGrtHqqpB;IAAyB;IAAc;EH0tH5spB;;EG1tHstpB;IAAyB;IAAc;EH+tH7vpB;;EG/tH8wpB;IAAyB;IAAc;EHouHrzpB;;EGpuHs0pB;IAAyB;IAAc;EHyuH72pB;;EGzuHu3pB;IAA0B;IAAc;EH8uH/5pB;;EG9uHg7pB;IAA0B;IAAc;EHmvHx9pB;;EGnvHy+pB;IAA0B;IAAc;EHwvHjhqB;AACF;AGzvH+hqB;EAAyB;IAAsD;EH6vH5mqB;;EG7vH4nqB;IAAuB;EHiwHnpqB;;EGjwH+pqB;IAA4B;IAAc;EHswHzsqB;;EGtwHotqB;IAAyB;IAAc;EH2wH3vqB;;EG3wH2wqB;IAAyB;IAAc;EHgxHlzqB;;EGhxHm0qB;IAAyB;IAAc;EHqxH12qB;;EGrxHo3qB;IAAyB;IAAc;EH0xH35qB;;EG1xH46qB;IAAyB;IAAc;EH+xHn9qB;;EG/xHo+qB;IAAyB;IAAc;EHoyH3grB;;EGpyHqhrB;IAAyB;IAAc;EHyyH5jrB;;EGzyH6krB;IAAyB;IAAc;EH8yHpnrB;;EG9yHqorB;IAAyB;IAAc;EHmzH5qrB;;EGnzHsrrB;IAA0B;IAAc;EHwzH9trB;;EGxzH+urB;IAA0B;IAAc;EH6zHvxrB;;EG7zHwyrB;IAA0B;IAAc;EHk0Hh1rB;AACF;AGn0H81rB;EAA0B;IAAyE;EHu0H/7rB;;EGv0Hg9rB;IAAuB;EH20Hv+rB;;EG30Hm/rB;IAA4B;IAAc;EHg1H7hsB;;EGh1HwisB;IAAyB;IAAc;EHq1H/ksB;;EGr1H+lsB;IAAyB;IAAc;EH01HtosB;;EG11HupsB;IAAyB;IAAc;EH+1H9rsB;;EG/1HwssB;IAAyB;IAAc;EHo2H/usB;;EGp2HgwsB;IAAyB;IAAc;EHy2HvysB;;EGz2HwzsB;IAAyB;IAAc;EH82H/1sB;;EG92Hy2sB;IAAyB;IAAc;EHm3Hh5sB;;EGn3Hi6sB;IAAyB;IAAc;EHw3Hx8sB;;EGx3Hy9sB;IAAyB;IAAc;EH63HhgtB;;EG73H0gtB;IAA0B;IAAc;EHk4HljtB;;EGl4HmktB;IAA0B;IAAc;EHu4H3mtB;;EGv4H4ntB;IAA0B;IAAc;EH44HpqtB;AACF;AG74HkrtB;EAA0B;IAA4F;EHi5HtytB;;EGj5HuztB;IAAuB;EHq5H90tB;;EGr5H01tB;IAA4B;IAAc;EH05Hp4tB;;EG15H+4tB;IAAyB;IAAc;EH+5Ht7tB;;EG/5Hs8tB;IAAyB;IAAc;EHo6H7+tB;;EGp6H8/tB;IAAyB;IAAc;EHy6HriuB;;EGz6H+iuB;IAAyB;IAAc;EH86HtluB;;EG96HumuB;IAAyB;IAAc;EHm7H9ouB;;EGn7H+puB;IAAyB;IAAc;EHw7HtsuB;;EGx7HgtuB;IAAyB;IAAc;EH67HvvuB;;EG77HwwuB;IAAyB;IAAc;EHk8H/yuB;;EGl8Hg0uB;IAAyB;IAAc;EHu8Hv2uB;;EGv8Hi3uB;IAA0B;IAAc;EH48Hz5uB;;EG58H06uB;IAA0B;IAAc;EHi9Hl9uB;;EGj9Hm+uB;IAA0B;IAAc;EHs9H3gvB;AACF;AGv9HyhvB;EAA0B;IAAgH;EH29HjqvB;;EG39HkrvB;IAAwB;EH+9H1svB;;EG/9HstvB;IAA6B;IAAc;EHo+HjwvB;;EGp+H4wvB;IAA0B;IAAc;EHy+HpzvB;;EGz+Ho0vB;IAA0B;IAAc;EH8+H52vB;;EG9+H63vB;IAA0B;IAAc;EHm/Hr6vB;;EGn/H+6vB;IAA0B;IAAc;EHw/Hv9vB;;EGx/Hw+vB;IAA0B;IAAc;EH6/HhhwB;;EG7/HiiwB;IAA0B;IAAc;EHkgIzkwB;;EGlgImlwB;IAA0B;IAAc;EHugI3nwB;;EGvgI4owB;IAA0B;IAAc;EH4gIprwB;;EG5gIqswB;IAA0B;IAAc;EHihI7uwB;;EGjhIuvwB;IAA2B;IAAc;EHshIhywB;;EGthIizwB;IAA2B;IAAc;EH2hI11wB;;EG3hI22wB;IAA2B;IAAc;EHgiIp5wB;AACF;AGjiIk6wB;EAA0B;IAAqI;EHqiI/jxB;;EGriIglxB;IAAyB;EHyiIzmxB;;EGziIqnxB;IAA8B;IAAc;EH8iIjqxB;;EG9iI4qxB;IAA2B;IAAc;EHmjIrtxB;;EGnjIquxB;IAA2B;IAAc;EHwjI9wxB;;EGxjI+xxB;IAA2B;IAAc;EH6jIx0xB;;EG7jIk1xB;IAA2B;IAAc;EHkkI33xB;;EGlkI44xB;IAA2B;IAAc;EHukIr7xB;;EGvkIs8xB;IAA2B;IAAc;EH4kI/+xB;;EG5kIy/xB;IAA2B;IAAc;EHilIliyB;;EGjlImjyB;IAA2B;IAAc;EHslI5lyB;;EGtlI6myB;IAA2B;IAAc;EH2lItpyB;;EG3lIgqyB;IAA4B;IAAc;EHgmI1syB;;EGhmI2tyB;IAA4B;IAAc;EHqmIrwyB;;EGrmIsxyB;IAA4B;IAAc;EH0mIh0yB;AACF;AG3mI80yB;EAAsB;EAAyC;AH+mI74yB;AG/mI47yB;EAAO;EAA4C;AHmnI/+yB;AGnnI2hzB;EAAU;EAA+C;AHunIplzB;AGvnI6nzB;EAAO;EAA4C;AH2nIhrzB;AG3nIytzB;EAAU;EAA+C;AH+nIlxzB;AG/nI2zzB;EAAS;EAA8C;AHmoIl3zB;AGnoI25zB;EAAU;EAA+C;AHuoIp9zB;;AGvoI8/zB;EAA6B;EAAuB;AH4oIlj0B;AG5oIml0B;EAAM;AH+oIzl0B;AG/oIym0B;EAAM;AHkpI/m0B;AGlpIso0B;EAAM;AHqpI5o0B;AGrpIkq0B;EAAM;AHwpIxq0B;AGxpI6r0B;EAAM;AH2pIns0B;;AG3pIqu0B;EAA8B;AH+pInw0B;;AG/pI0x0B;EAAgB;EAAyE;EAAqB;EAAmB;EAAqB;EAAmG;EAAqB;AHyqIxi1B;;AGzqI+j1B;EAAsB;EAA2E;AH8qIhq1B;;AG9qImw1B;EAAyB;EAAkB;EAAkB;EAAoB;EAAwD;AHsrI541B;;AGtrI271B;EAAuB;EAA2B;EAAqF;EAAyB;EAAkB;EAAoB;EAAyE;EAA2E;EAAmG;AHksIx32B;;AGlsIu62B;EAAwH;EAAoB;EAA4C;EAAc;EAAiB;EAAgB;EAAiB;EAAkB;AH6sIjr3B;AG7sIis3B;EAAO;AHgtIxs3B;AGhtIut3B;EAAO;AHmtI9t3B;AGntI4u3B;EAAO;AHstInv3B;AGttIgw3B;EAAO;EAAoB;AH0tI3x3B;AG1tIy03B;EAAS;EAAiB;AH8tIn23B;AG9tIo33B;EAAS;AHiuI733B;AGjuI643B;EAAS;EAAoB;AHquI163B;AGruIw93B;EAAS;AHwuIj+3B;AGxuIo/3B;EAAS;EAAkB;AH4uI/g4B;AG5uImi4B;EAAS;AH+uI5i4B;AG/uI4j4B;EAAS;EAAoB;AHmvIzl4B;;AGnvIwo4B;EAAsB;AHuvI9p4B;;AGvvI+t4B;EAAgB;EAA8B;AH4vI7w4B;AG5vIm04B;EAA2B;EAA8B;AHgwI534B;AGhwIm74B;EAA+H;EAA8B;AHowIhl5B;AGpwIso5B;EAAa;EAA8B;AHwwIjr5B;AGxwIyu5B;EAAqB;EAA8B;AH4wI5x5B;AG5wIq15B;EAAgB;EAA8B;AHgxIn45B;AGhxIy75B;EAA2B;EAA8B;AHoxIl/5B;AGpxIyi6B;EAAe;EAA8B;AHwxItl6B;AGxxI6o6B;EAAyB;EAA8B;AH4xIps6B;AG5xI2v6B;EAAgB;EAA8B;AHgyIzy6B;AGhyIg26B;EAA2B;EAA8B;AHoyIz56B;;AGpyIi96B;EAAsB;AHwyIv+6B;;AGxyI0/6B;EAAkC;AH4yI5h7B;;AG5yIyi7B;EAAsC;EAAkB;EAAwD;EAAkB;EAAc;EAAkB;AHqzI3s7B;;AGrzIst7B;EAAa;AHyzInu7B;;AGzzIgv7B;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAwD;EAAkB;EAAc;AHs0I9k8B;;AGt0Igm8B;EAAiD;AH00Ijp8B;AG10Igs8B;EAAU;AH60I1s8B;AG70Iyv8B;EAAO;AHg1Ihw8B;AGh1I4y8B;EAAU;AHm1Itz8B;AGn1Iq28B;EAAS;AHs1I928B;AGt1I458B;EAAU;AHy1It68B;;AGz1Is98B;EAAsB;EAAa;AH81Iz/8B;;AG91Iki9B;EAAO;EAAkB;EAAkB;EAAoB;EAAqD;AHs2Itp9B;AGt2Iks9B;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AH62I1z9B;AG72Iy29B;EAAO;EAAkB;EAAkB;EAAoB;EAAuD;AHo3I/99B;AGp3I8g+B;EAAU;EAAkB;EAAkB;EAAoB;EAAuD;AH23Ivo+B;AG33Isr+B;EAAS;EAAkB;EAAkB;EAAoB;EAAsD;AHk4I7y+B;AGl4I41+B;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AHy4Ip9+B;;AGz4Iog/B;EAAmB;EAA+C;AH84Itk/B;AG94Ikm/B;EAAkC;EAA4C;AHk5Ihr/B;AGl5I+s/B;EAAwC;EAA+C;AHs5Ity/B;AGt5Ik0/B;EAAkC;EAA4C;AH05Ih5/B;AG15I46/B;EAAwC;EAA+C;AH85InggC;AG95I+hgC;EAAsC;EAA8C;AHk6InngC;AGl6I+ogC;EAAwC;EAA+C;AHs6ItugC;AGt6I0xgC;EAAO;EAA4C;AH06I70gC;AG16Iy2gC;EAAU;EAAwD;AH86I36gC;AG96Iu8gC;EAAO;EAAqD;AHk7InghC;AGl7I+hhC;EAAU;EAAwD;AHs7IjmhC;AGt7I6nhC;EAAS;EAAuD;AH07I7rhC;AG17IythC;EAAU;EAAwD;AH87I3xhC;;AG97IyzhC;EAAY;EAA+C;EAAmD;EAA8D;AHq8Ir+hC;AGr8IigiC;EAAO;EAAkB;EAAkB;EAAoB;EAAqD;AH48IrniC;AG58IiqiC;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AHm9IzxiC;AGn9Iw0iC;EAAO;EAAkB;EAAkB;EAAoB;EAAuD;AH09I97iC;AG19I6+iC;EAAU;EAAkB;EAAkB;EAAoB;EAAuD;AHi+ItmjC;AGj+IqpjC;EAAS;EAAkB;EAAkB;EAAoB;EAAsD;AHw+I5wjC;AGx+I2zjC;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AH++In7jC;AG/+Ik+jC;EAAO;EAA4C;EAAgD;EAA2D;AHq/IhokC;AGr/I+pkC;EAAU;EAA+C;EAAmD;EAA8D;AH2/Iz0kC;AG3/Iq2kC;EAAO;EAA4C;EAAgD;EAA2D;AHigJnglC;AGjgJ+hlC;EAAU;EAA+C;EAAmD;EAA8D;AHugJzslC;AGvgJqulC;EAAS;EAA8C;EAAkD;EAA6D;AH6gJ34lC;AG7gJu6lC;EAAU;EAA+C;EAAmD;EAA8D;AHmhJjlmC;;AGnhJ8mmC;EAA8B;EAA8B;AHwhJ1qmC;;AGxhJgumC;EAA2B;AH4hJ3vmC;;AG5hJgxmC;EAAgC;EAAsB;AHiiJt0mC;;AGjiJ83mC;EAAmB;EAA2G;EAAyG;AHuiJrmnC;;AGviJ8rnC;EAA8B;EAAoB;AH4iJhvnC;;AG5iJyynC;EAA8B;AHgjJv0nC;;AGhjJ61nC;EAAyB;IAAY;EHqjJh4nC;;EGrjJ64nC;IAAY;EHyjJz5nC;AACF;AG1jJs6nC;EAAyB;IAAW;EH8jJx8nC;;EG9jJs9nC;IAAY;EHkkJl+nC;;EGlkJ++nC;IAAc;EHskJ7/nC;;EGtkJghoC;IAAc;EH0kJ9hoC;AACF;AG3kJujoC;EAA0B;IAAc;EH+kJ7loC;AACF;AIllJA;AAEA;AAA+F;EAAK;EAA8B;EAAiB;EAAgB;EAAc;AJylJjL;;AIzlJ4L;EAAK;EAAgH;AJ8lJjT;;AI9lJ0T;EAAG;EAAc;AJmmJ3U;;AInmJoV;EAAY;EAAyC;AJwmJzY;;AIxmJ0a;EAAS;AJ4mJnb;;AI5mJsc;EAAkB;EAAiF;AJinJziB;;AIjnJujB;EAAM;AJqnJ7jB;;AIrnJ2kB;EAAQ;EAAc;EAAc;EAAkB;AJ4nJjoB;;AI5nJypB;EAAI;AJgoJ7pB;;AIhoJ2qB;EAAI;AJooJ/qB;;AIpoJyrB;EAAM;EAAqB;AJyoJptB;;AIzoJkuB;EAAsC;EAAoB;EAAe;EAAiB;AJgpJ5zB;;AIhpJq0B;EAAc;AJopJn1B;;AIppJu2B;EAAgD;AJwpJv5B;;AIxpJi7B;EAAmB;EAAkB;AJ6pJt9B;;AI7pJg+B;EAAgB;AJiqJh/B;;AIjqJ8gC;EAAiB;AJqqJ/hC;;AIrqJ+iC;EAAO;AJyqJtjC;;AIzqJgkC;EAAS;AJ6qJzkC;;AI7qJimC;EAAwD;AJirJzpC;;AIjrJqqC;EAAc;EAA6B;AJsrJhtC;;AItrJouC;EAA4B;AJ0rJhwC;;AI1rJwxC;EAA6B;EAA0B;AJ+rJ/0C;;AI/rJ41C;EAAQ;AJmsJp2C;;AInsJs3C;EAAmD;AJusJz6C;;AIvsJk7C;EAAO;EAA6B;AJ4sJt9C;;AI5sJ4+C;EAAe;EAAS;AJitJpgD;;AIjtJ8gD;EAAM;AJqtJphD;;AIrtJoiD;EAAK;EAAiM;AJ0tJ1uD;;AI1tJ0vD;EAAK;EAAoB;AJ+tJnxD;;AI/tJuyD;EAAiB;EAAe;AJouJv0D;;AIpuJ61D;EAAG;AJwuJh2D;;AIxuJq3D;EAAI;AJ4uJz3D;;AI5uJ44D;EAAS;AJgvJr5D;;AIhvJq6D;EAAmD;EAAc;AJqvJt+D;;AIrvJg/D;EAA2D;EAAc;AJ0vJzjE;;AI1vJmkE;EAAyC;EAAc;AJ+vJ1nE;;AI/vJooE;EAAqB;AJmwJzpE;;AInwJwqE;EAAgB;AJuwJxrE;;AIvwJqsE;EAAM;AJ2wJ3sE;;AI3wJouE;EAAkB;EAAkB;AJgxJxwE;;AIhxJ4xE;EAAE;EAAc;AJqxJ5yE;;AIrxJo0E;EAAsC;EAAc;EAAoB;AJ2xJ54E;;AI3xJs5E;EAAkB;AJ+xJx6E;;AI/xJ4gF;EAA+C;EAAc;AJoyJzkF;;AIpyJ+lF;EAAU;EAAY;AJyyJrnF;;AIzyJooF;EAAS;AJ6yJ7oF;;AI7yJ0pF;EAAiB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAgN;EAAsB;EAA4C;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAAsC;EAA4C;EAA0C;EAA2C;EAA4C;EAAwC;EAA0C;EAAuC;EAA6C;EAAsL;AJ20JxwH;;AI30Jg0H;EAAW;AJ+0J30H;;AI/0Js1H;EAAyB;IAAW;EJo1Jx3H;AACF;AIr1J24H;EAAyB;IAAW;EJy1J76H;AACF;AI11Jg8H;EAA0B;IAAW;EJ81Jn+H;AACF;AI/1Ju/H;EAA0B;IAAW;EJm2J1hI;AACF;AIp2J8iI;EAA0B;IAAW;EJw2JjlI;AACF;AIz2JqmI;EAA0B;IAAW;EJ62JxoI;AACF;AI92J4pI;EAAS;AJi3JrqI;;AIj3JwrI;EAAQ;AJq3JhsI;;AIr3JgtI;EAAO;AJy3JvtI;;AIz3JsuI;EAAU;AJ63JhvI;;AI73JkwI;EAAU;AJi4J5wI;;AIj4J8xI;EAAS;EAAS;EAAO;EAAQ;AJw4J/zI;;AIx4Jq0I;EAAQ;AJ44J70I;;AI54Jw1I;EAAQ;AJg5Jh2I;;AIh5Ju2I;EAAS;AJo5Jh3I;;AIp5Jw3I;EAAS;AJw5Jj4I;;AIx5J44I;EAAW;AJ45Jv5I;;AI55Jm6I;EAAO;AJg6J16I;;AIh6Jg7I;EAAO;AJo6Jv7I;;AIp6Jg8I;EAAS;AJw6Jz8I;;AIx6Jm9I;EAAQ;AJ46J39I;;AI56Jo+I;EAAQ;AJg7J5+I;;AIh7Jq/I;EAAU;AJo7J//I;;AIp7J4gJ;EAAS;AJw7JrhJ;;AIx7JmiJ;EAAM;AJ47JziJ;;AI57JojJ;EAAM;AJg8J1jJ;;AIh8JqkJ;EAAM;AJo8J3kJ;;AIp8JslJ;EAAK;AJw8J3lJ;;AIx8JqmJ;EAAK;AJ48J1mJ;;AI58JwnJ;EAAK;AJg9J7nJ;;AIh9JsoJ;EAAM;EAAoB;AJq9JhqJ;;AIr9JirJ;EAAM;EAAgB;AJ09JvsJ;;AI19JotJ;EAAM;EAAqB;AJ+9J/uJ;;AI/9JiwJ;EAAM;EAAmB;AJo+J1xJ;;AIp+J0yJ;EAAM;EAAkB;AJy+Jl0J;;AIz+Jq1J;EAAM;EAAmB;AJ8+J92J;;AI9+Jk4J;EAAQ;EAA6B;AJm/Jv6J;;AIn/Jq8J;EAAM;AJu/J38J;;AIv/J69J;EAAM;AJ2/Jn+J;;AI3/Jm/J;EAAM;AJ+/Jz/J;;AI//J4gK;EAAM;AJmgKlhK;;AIngKoiK;EAAM;AJugK1iK;;AIvgK8jK;EAAM;AJ2gKpkK;;AI3gKulK;EAAM;AJ+gK7lK;;AI/gKinK;EAAM;AJmhKvnK;;AInhK0oK;EAAM;AJuhKhpK;;AIvhK6pK;EAAM;AJ2hKnqK;;AI3hKorK;EAAM;AJ+hK1rK;;AI/hK4sK;EAAM;AJmiKltK;;AIniKouK;EAAM;AJuiK1uK;;AIviKwvK;EAAM;AJ2iK9vK;;AI3iK6wK;EAAM;AJ+iKnxK;;AI/iKsyK;EAAO;AJmjK7yK;;AInjK+zK;EAAO;AJujKt0K;;AIvjKy1K;EAAO;AJ2jKh2K;;AI3jKm3K;EAAM;AJ+jKz3K;;AI/jK84K;EAAM;AJmkKp5K;;AInkKq6K;EAAO;AJukK56K;;AIvkK87K;EAAM;AJ2kKp8K;;AI3kKw9K;EAAO;AJ+kK/9K;;AI/kK6+K;EAAS;AJmlKt/K;;AInlK8gL;EAAc;AJulK5hL;;AIvlKijL;EAAM;AJ2lKvjL;;AI3lKokL;EAAQ;AJ+lK5kL;;AI/lKmmL;EAAa;AJmmKhnL;;AInmKooL;EAAO;AJumK3oL;;AIvmKypL;EAAY;AJ2mKrqL;;AI3mKwrL;EAAoB;AJ+mK5sL;;AI/mKuuL;EAAiB;AJmnKxvL;;AInnKgxL;EAAW;AJunK3xL;;AIvnK6yL;EAAM;AJ2nKnzL;;AI3nKg0L;EAAU;AJ+nK10L;;AI/nK21L;EAAQ;AJmoKn2L;;AInoKg3L;EAAQ;AJuoKx3L;;AIvoKo4L;EAAM;AJ2oK14L;;AI3oKs5L;EAAM;AJ+oK55L;;AI/oKw6L;EAAM;AJmpK96L;;AInpK27L;EAAM;AJupKj8L;;AIvpK88L;EAAK;AJ2pKn9L;;AI3pKi+L;EAAK;AJ+pKt+L;;AI/pKk/L;EAAM;AJmqKx/L;;AInqKqgM;EAAM;AJuqK3gM;;AIvqKwhM;EAAM;AJ2qK9hM;;AI3qK0iM;EAAM;AJ+qKhjM;;AI/qK8jM;EAAM;AJmrKpkM;;AInrKmlM;EAAM;AJurKzlM;;AIvrKqmM;EAAU;AJ2rK/mM;;AI3rKgoM;EAAQ;AJ+rKxoM;;AI/rKmpM;EAAM;AJmsKzpM;;AInsKoqM;EAAM;AJusK1qM;;AIvsKqrM;EAAO;EAA0B;EAAuB;AJ6sK7uM;;AI7sK+vM;EAAK;AJitKpwM;;AIjtKixM;EAAQ;AJqtKzxM;;AIrtKoyM;EAAM;AJytK1yM;;AIztKszM;EAAM;AJ6tK5zM;;AI7tKw0M;EAAM;AJiuK90M;;AIjuKy1M;EAAM;AJquK/1M;;AIruK22M;EAAM;AJyuKj3M;;AIzuK63M;EAAM;AJ6uKn4M;;AI7uK+4M;EAAQ;AJivKv5M;;AIjvK46M;EAAW;AJqvKv7M;;AIrvKm8M;EAAW;AJyvK98M;;AIzvK4+M;EAAQ;AJ6vKp/M;;AI7vKggN;EAAW;AJiwK3gN;;AIjwKgiN;EAAiB;EAAwB;EAAqB;AJuwK9lN;;AIvwK8mN;EAAU;AJ2wKxnN;;AI3wK2oN;EAAkB;AJ+wK7pN;;AI/wKwrN;EAAU;AJmxKlsN;;AInxKwtN;EAAW;AJuxKnuN;;AIvxKkvN;EAAa;AJ2xK/vN;;AI3xKgxN;EAAgB;AJ+xKhyN;;AI/xKqzN;EAAiB;AJmyKt0N;;AInyKk2N;EAAa;AJuyK/2N;;AIvyKs4N;EAAW;AJ2yKj5N;;AI3yKs6N;EAAc;AJ+yKp7N;;AI/yKu8N;EAAe;AJmzKt9N;;AInzKi/N;EAAa;AJuzK9/N;;AIvzKuhO;EAAgB;AJ2zKviO;;AI3zK8jO;EAAiB;AJ+zK/kO;;AI/zK6mO;EAAmB;AJm0KhoO;;AIn0KwqO;EAAgB;AJu0KxrO;;AIv0KqtO;EAAyC;EAAuB;EAAqD;AJ60K10O;;AI70Kk4O;EAAiB;AJi1Kn5O;;AIj1Km6O;EAAiB;AJq1Kp7O;;AIr1Ko8O;EAAmB;AJy1Kv9O;;AIz1Ky+O;EAAmB;AJ61K5/O;;AI71K8gP;EAAmB;AJi2KjiP;;AIj2KmjP;EAAU;EAAgB;EAAuB;AJu2KpmP;;AIv2KunP;EAAmB;AJ22K1oP;;AI32K6pP;EAAmB;AJ+2KhrP;;AI/2KmsP;EAAqB;AJm3KxtP;;AIn3K6uP;EAAqB;AJu3KlwP;;AIv3KuxP;EAAY;AJ23KnyP;;AI33KyzP;EAAc;AJ+3Kv0P;;AI/3K41P;EAAS;AJm4Kr2P;;AIn4K03P;EAAc;AJu4Kx4P;;AIv4Kw5P;EAAa;AJ24Kr6P;;AI34Kw7P;EAAY;AJ+4Kp8P;;AI/4Ky9P;EAAa;AJm5Kt+P;;AIn5K2/P;EAAgB;EAA6B;AJw5KxiQ;;AIx5KkkQ;EAAc;EAAkC;AJ65KlnQ;;AI75KqpQ;EAAU;AJi6K/pQ;;AIj6KgrQ;EAAQ;AJq6KxrQ;;AIr6KysQ;EAAU;AJy6KntQ;;AIz6KkuQ;EAAY;AJ66K9uQ;;AI76KswQ;EAAY;AJi7KlxQ;;AIj7KuyQ;EAAU;AJq7KjzQ;;AIr7Ky0Q;EAAU;AJy7Kn1Q;;AIz7Kw2Q;EAAY;AJ67Kp3Q;;AI77K24Q;EAAY;AJi8Kv5Q;;AIj8K66Q;EAAc;AJq8K37Q;;AIr8K88Q;EAAa;AJy8K39Q;;AIz8K6+Q;EAAiB;EAAsB;AJ88KphR;;AI98K4kR;EAAmB;EAAsB;AJm9KrnR;;AIn9K4qR;EAA6B;EAAsB;AJw9K/tR;;AIx9KsxR;EAAiB;EAAsB;AJ69K7zR;;AI79Kq3R;EAAgB;EAAsB;AJk+K35R;;AIl+Ki9R;EAAiB;EAAsB;AJu+Kx/R;;AIv+KgjS;EAAoB;AJ2+KpkS;;AI3+K6lS;EAA4B;EAAsB;AJg/K/oS;;AIh/KosS;EAAU;EAAkB;AJq/KhuS;;AIr/KwxS;EAAc;EAAkB;AJ0/KxzS;;AI1/K+2S;EAAY;EAAkB;AJ+/K74S;;AI//Kq8S;EAAa;EAAkB;AJogLp+S;;AIpgL4hT;EAAa;EAAkB;AJygL3jT;;AIzgLmnT;EAAgB;AJ6gLnoT;;AI7gLgqT;EAAc;EAAkB;AJkhLhsT;;AIlhLovT;EAAmB;AJshLvwT;;AIthL+0T;EAAkB;AJ0hLj2T;;AI1hLq6T;EAAmB;AJ8hLx7T;;AI9hLmgU;EAA6B;EAA2B;AJmiL3jU;;AIniLgpU;EAAc;EAA2B;AJwiLzrU;;AIxiL+wU;EAA2B;EAA2B;AJ6iLr0U;;AI7iL05U;EAAW;AJijLr6U;;AIjjL8/U;EAAc;AJqjL5gV;;AIrjL0mV;EAAwB;AJyjLloV;;AIzjL2pV;EAAc;AJ6jLzqV;;AI7jL2rV;EAAgB;EAAsB;AJkkLjuV;;AIlkLovV;EAAc;EAAoB;AJukLtxV;;AIvkLuyV;EAAe;EAA0B;AJ4kLh1V;;AI5kLu2V;EAAK;AJglL52V;;AIhlL23V;EAAK;AJolLh4V;;AIplL+4V;EAAK;AJwlLp5V;;AIxlLi6V;EAAK;AJ4lLt6V;;AI5lLq7V;EAAK;AJgmL17V;;AIhmLw8V;EAAK;AJomL78V;;AIpmLu9V;EAAQ;EAAgC;AJymL//V;;AIzmL4hW;EAAQ;EAAyB;AJ8mL7jW;;AI9mLulW;EAAM;EAAqB;AJmnLlnW;;AInnLooW;EAAQ;EAA8B;AJwnL1qW;;AIxnLqsW;EAAM;EAAmB;AJ6nL9tW;;AI7nLkvW;EAAM;EAAkB;AJkoL1wW;;AIloL6xW;EAAM;EAAoB;AJuoLvzW;;AIvoL40W;EAAM;EAAsB;AJ4oLx2W;;AI5oL23W;EAAM;EAAqB;AJipLt5W;;AIjpL46W;EAAM;EAAoB;AJspLt8W;;AItpLu9W;EAAM;EAAoB;AJ2pLj/W;;AI3pLsgX;EAAM;EAAe;AJgqL3hX;;AIhqL2iX;EAAQ;EAA8B;AJqqLjlX;;AIrqLgnX;EAAM;EAAsB;AJ0qL5oX;;AI1qL+pX;EAAM;AJ8qLrqX;;AI9qLwrX;EAAM;AJkrL9rX;;AIlrLgtX;EAAM;AJsrLttX;;AItrL2uX;EAAM;AJ0rLjvX;;AI1rLqwX;EAAM;AJ8rL3wX;;AI9rL0xX;EAAW;AJksLryX;;AIlsLqzX;EAAa;AJssLl0X;;AItsLo1X;EAAe;AJ0sLn2X;;AI1sL+3X;EAAY;AJ8sL34X;;AI9sL45X;EAAc;AJktL16X;;AIltLq8X;EAAc;AJstLn9X;;AIttLy+X;EAAY;AJ0tLr/X;;AI1tLsjY;EAAS;EAAkB;AJ+tLjlY;;AI/tLqmY;EAAS;EAAmB;AJouLjoY;;AIpuLqpY;EAAW;EAAe;AJyuL/qY;;AIzuLksY;EAAS;EAAkB;AJ8uL7tY;;AI9uLivY;EAAS;EAAiB;AJmvL3wY;;AInvL4xY;EAAU;EAAmB;AJwvLzzY;;AIxvL60Y;EAAa;AJ4vL11Y;;AI5vL02Y;EAAe;AJgwLz3Y;;AIhwLy4Y;EAAW;AJowLp5Y;;AIpwLo6Y;EAAa;AJwwLj7Y;;AIxwLi8Y;EAAY;AJ4wL78Y;;AI5wL69Y;EAAW;AJgxLx+Y;;AIhxLigZ;EAAY;AJoxL7gZ;;AIpxLuiZ;EAAQ;AJwxL/iZ;;AIxxLikZ;EAAe;AJ4xLhlZ;;AI5xLimZ;EAAe;AJgyLhnZ;;AIhyLsoZ;EAAiB;EAA8B;AJqyLrrZ;;AIryL2uZ;EAAe;EAAoB;AJ0yL9wZ;;AI1yL0zZ;EAAgB;EAA8B;AJ+yLx2Z;;AI/yLi6Z;EAAiB;EAAoB;AJozLt8Z;;AIpzLm/Z;EAAY;EAAoB;AJyzLnha;;AIzzLkka;EAAY;EAAoB;AJ8zLlma;;AI9zL2oa;EAAc;EAAoB;AJm0L7qa;;AIn0L0ta;EAAiB;EAAoB;AJw0L/va;;AIx0L4ya;EAAe;EAAoB;AJ60L/0a;;AI70L83a;EAAe;EAAoB;AJk1Lj6a;;AIl1L88a;EAAgB;EAAoB;AJu1Ll/a;;AIv1L8hb;EAAc;EAAoB;AJ41Lhkb;;AI51L6mb;EAAe;EAAoB;AJi2Lhpb;;AIj2L+rb;EAAc;EAAoB;AJs2Ljub;;AIt2Lgxb;EAAe;EAAoB;AJ22Lnzb;;AI32L+1b;EAAe;EAAoB;AJg3Ll4b;;AIh3L86b;EAA0B;EAAoB;AJq3L59b;;AIr3Lwgc;EAA2B;EAAoB;AJ03Lvjc;;AI13Lqmc;EAAgB;EAAoB;AJ+3Lzoc;;AI/3Lsrc;EAAW;AJm4Ljsc;;AIn4L2tc;EAAc;AJu4Lzuc;;AIv4L8vc;EAAQ;AJ24Ltwc;;AI34Ly0c;EAAmB;AJ+4L51c;;AI/4L+7c;EAAW;AJm5L18c;;AIn5Lk/c;EAAW;AJu5L7/c;;AIv5L0kd;EAAyB;AJ25Lnmd;;AI35Lssd;EAAc;AJ+5Lptd;;AI/5Lkwd;EAAW;AJm6L7wd;;AIn6Ls1d;EAAwB;AJu6L92d;;AIv6Li9d;EAAa;AJ26L99d;;AI36Lo/d;EAAW;EAA2E;AJg7L1ke;;AIh7L6qe;EAAc;EAA8B;AJq7Lzte;;AIr7L4ue;EAAQ;EAA2G;AJ07L/1e;;AI17Lk8e;EAAc;AJ87Lh9e;;AI97Lyif;EAAM;EAA2G;AJm8L1pf;;AIn8Lmwf;EAA2B;EAAoB;AJw8Llzf;;AIx8L02f;EAAM;AJ48Lh3f;;AI58Lo4f;EAAc;AJg9Ll5f;;AIh9L06f;EAAW;AJo9Lr7f;;AIp9L08f;EAAsB;AJw9Lh+f;;AIx9Lm/f;EAAkC;AJ49LrhgB;;AI59LkigB;EAAsC;EAAkB;EAAwD;EAAkB;EAAc;EAAkB;AJq+LpsgB;;AIr+L+sgB;EAAa;AJy+L5tgB;;AIz+LyugB;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAwD;EAAkB;EAAc;AJs/LvkhB;;AIt/LylhB;EAAiD;AJ0/L1ohB;AI1/LyrhB;EAAU;AJ6/LnshB;AI7/LkvhB;EAAO;AJggMzvhB;AIhgMqyhB;EAAU;AJmgM/yhB;AIngM81hB;EAAS;AJsgMv2hB;AItgMq5hB;EAAU;AJygM/5hB;;AIzgM+8hB;EAAsB;EAAa;AJ8gMl/hB;;AI9gM2hiB;EAAO;EAAkB;EAAkB;EAAoB;EAAqD;AJshM/oiB;AIthM2riB;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AJ6hMnziB;AI7hMk2iB;EAAO;EAAkB;EAAkB;EAAoB;EAAuD;AJoiMx9iB;AIpiMugjB;EAAU;EAAkB;EAAkB;EAAoB;EAAuD;AJ2iMhojB;AI3iM+qjB;EAAS;EAAkB;EAAkB;EAAoB;EAAsD;AJkjMtyjB;AIljMq1jB;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AJyjM78jB;;AIzjM6/jB;EAAmB;EAA+C;AJ8jM/jkB;AI9jM2lkB;EAAkC;EAA4C;AJkkMzqkB;AIlkMwskB;EAAwC;EAA+C;AJskM/xkB;AItkM2zkB;EAAkC;EAA4C;AJ0kMz4kB;AI1kMq6kB;EAAwC;EAA+C;AJ8kM5/kB;AI9kMwhlB;EAAsC;EAA8C;AJklM5mlB;AIllMwolB;EAAwC;EAA+C;AJslM/tlB;AItlMmxlB;EAAO;EAA4C;AJ0lMt0lB;AI1lMk2lB;EAAU;EAAwD;AJ8lMp6lB;AI9lMg8lB;EAAO;EAAqD;AJkmM5/lB;AIlmMwhmB;EAAU;EAAwD;AJsmM1lmB;AItmMsnmB;EAAS;EAAuD;AJ0mMtrmB;AI1mMktmB;EAAU;EAAwD;AJ8mMpxmB;;AI9mMkzmB;EAAY;EAA+C;EAAmD;EAA8D;AJqnM99mB;AIrnM0/mB;EAAO;EAAkB;EAAkB;EAAoB;EAAqD;AJ4nM9mnB;AI5nM0pnB;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AJmoMlxnB;AInoMi0nB;EAAO;EAAkB;EAAkB;EAAoB;EAAuD;AJ0oMv7nB;AI1oMs+nB;EAAU;EAAkB;EAAkB;EAAoB;EAAuD;AJipM/loB;AIjpM8ooB;EAAS;EAAkB;EAAkB;EAAoB;EAAsD;AJwpMrwoB;AIxpMozoB;EAAU;EAAkB;EAAkB;EAAoB;EAAsD;AJ+pM56oB;AI/pM29oB;EAAO;EAA4C;EAAgD;EAA2D;AJqqMznpB;AIrqMwppB;EAAU;EAA+C;EAAmD;EAA8D;AJ2qMl0pB;AI3qM81pB;EAAO;EAA4C;EAAgD;EAA2D;AJirM5/pB;AIjrMwhqB;EAAU;EAA+C;EAAmD;EAA8D;AJurMlsqB;AIvrM8tqB;EAAS;EAA8C;EAAkD;EAA6D;AJ6rMp4qB;AI7rMg6qB;EAAU;EAA+C;EAAmD;EAA8D;AJmsM1krB;;AInsMumrB;EAA8B;EAA8B;AJwsMnqrB;;AIxsMytrB;EAA2B;AJ4sMpvrB;;AI5sMywrB;EAAgC;EAAsB;AJitM/zrB;;AIjtMu3rB;EAAmB;EAA2G;EAAyG;AJutM9lsB;;AIvtMursB;EAA8B;EAAoB;AJ4tMzusB;;AI5tMkysB;EAA8B;AJguMh0sB;;AIhuMs1sB;EAAyB;IAAY;EJquMz3sB;;EIruMs4sB;IAAY;EJyuMl5sB;AACF;AI1uM+5sB;EAAyB;IAAW;EJ8uMj8sB;;EI9uM+8sB;IAAY;EJkvM39sB;;EIlvMw+sB;IAAc;EJsvMt/sB;;EItvMygtB;IAAc;EJ0vMvhtB;AACF;AI3vMgjtB;EAA0B;IAAc;EJ+vMtltB;AACF;AA9vMA;AK+CE;ECqRE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;AP8sMJ;;AKruME;EEWI;ECZF;EDwBA;EAZE;ECZF;EDwBA;EEqOA,iBAlPU;EAmPV;EAQA,iCA1PW;EJWT;EACA;EACA;EACA;EACA;AL4tMN;;AS7hME;EF9MI;ECZF;EDwBA;APquMJ;;AUhuMM;EACE;EHlBF;ECZF;EDwBA;EE4MI;ECpMA;AVsuMR;;AS7hME;EF7NI;ECZF;EDwBA;APovMJ;;AU/uMM;EACE;EHlBF;ECZF;EDwBA;EE2NI;ECnNA;AVqvMR;;ASvsME;EFtDE;APiwMJ;;ASrtME;EFxDI;ECZF;EDwBA;APuwMJ;;ASvsME;EFhEE;AP2wMJ;;AWztME;;;EJlDE;APixMJ;;ASlrME;;EAGI,wCA9HU;ATkzMhB;;AShrME;EAEI,qCApIU;ATszMhB;;AS1qME;;EAGI,wBA9IS;EA+IT;AT4qMN;;ASxqME;EAEI,qBArJS;EAsJT;AT0qMN;;AStqME;EAEI;ATwqMN;;AShqME;EFzIE;AP6yMJ;;AS1pME;EFnJE;APizMJ;;AShpME;;;EFjKE;APuzMJ;;ASxjME;EAEI,YAkHK;ATw8LX;;AStjME;EAEI,gBA4GK;AT48LX;;AS1kME;EAEI,YAmIuB;ATy8L7B;;ASliME;;EAGI;AToiMN;;AStgME;;EDrVE;EAAc;EDmBd;ECnBA;EAAc;EDmBd;APk1MJ;;AU70MM;EACE;EFzBJ;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EGQI;AVq1MR;;AS50ME;EFjBE;APi2MJ;;AYrxMI;ELxFE;ECZF;EDwBA;APu2MJ;;AYvtMI;EL5JE;ECZF;EDwBA;AP62MJ;;AYtrMM;EAsBA;ELzNA;ECZF;EDwBA;APo3MJ;;AY7oMM;EAEI;AZ+oMV;;AY1oMQ;EAEI,yBAtRO;EL0Bb;ECZF;EDwBA;AP+3MJ;;AYpoMI;EL3PA;APm4MJ;;ASx2ME;EF3BE;APu4MJ;;AY3zMI;ELxFE;ECZF;EDwBA;AP64MJ;;AY7vMI;EL5JE;ECZF;EDwBA;APm5MJ;;AY5tMM;EAsBA;ELzNA;ECZF;EDwBA;AP05MJ;;AYnrMM;EAEI;AZqrMV;;AYhrMQ;EAEI,yBAtRO;EL0Bb;ECZF;EDwBA;APq6MJ;;AY1qMI;EL3PA;APy6MJ;;AK72ME;EAGI;EACA;EACA;AL82MN;;AK12ME;EAEI;EACA;EACA;EACA;EACA;;;;;IAAA;EAMA;AL42MN;;Aav+ME;EPoSE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EMtCE;EACA;EACA;EACA;Ab8/MN;;AUt9MM;EACE;EFzBJ;EAAc;EKZV;EHuCA;AV29MR;;Aa7/ME;EAEI;Ab+/MN;;AUl+MM;EACE;EFzBJ;EAAc;EKCV;EH0BA;AVu+MR;;Aa5/ME;EAYE;Abo/MJ;;AcxhNE;ER+RE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EOjCE;EACA;EACA;EACA;ENWF;EAAc;EMRZ;Ad+iNN;;AU/gNM;EACE;EFzBJ;EAAc;EMJV;EJ+BA;AVohNR;;Ac9iNE;EDiBE;AbiiNJ;;Ac9iNE;EAEI;AdgjNN;;AU/hNM;EACE;EFzBJ;EAAc;EMaV;EJcA;AVoiNR;;Ac7iNE;ECoEE,WAnBK;EAoBL,YApBK;EAqBL;ED9DE;EN1BF;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EOqBE;EAUA;Ad4hNN;;Aen/ME;EAUI,WAlCG;EAmCH,YAnCG;EAoCH;Af6+MN;;Ae1+MI;EChEA,eAHsB;EAItB,kBAJsB;EAcpB,iBANwB;EAOxB,gBAPwB;AhB4iN9B;;Aet+ME;EC9GE;EACA;EACA,YD0DK;EPnEL;EAAc;EQeZ;EACA,WDmDG;EClDH;AhBqlNN;;AU9kNM;EACE;EFzBJ;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EGQI;AVslNR;;AchlNI;ENjCA;EAAc;EDmBd;ECnBA;EAAc;EDmBd;APumNJ;;AUlmNM;EACE;EFzBJ;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EGQI;AV0mNR;;Ac1lNI;EAEI;Ad4lNR;;AcplNI;EAII;AdolNR;;Ac/kNE;EAEI;EACA;EACA;AdilNN;;Ac7kNE;EAEI;Ad+kNN;;Ac3kNE;EG3EE;EACA;EACA;EACA;EACA;EAAqB;EACrB;AjB2pNJ;;AkB3rNE;EAEI;EACA;EACA;AlB6rNN;;AkB1rNI;EAEI;AlB4rNR;;AkBvrNE;EXmBI;ECZF;EDwBA;EW3BE;EAGA;EACA;EACA;EACA;AlBwrNN;;AcjmNE;EAEI;EACA;EACA;AdmmNN;;AmBtuNE;EbuTE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EYzDE;EACA;EACA;AnB6vNN;;AmBzvNE;EXgCE;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EY/CE;EACA;EACA;EACA;AnB+vNN;;AU9sNM;EACE;EFzBJ;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EGQI;AVstNR;;AmBtwNE;EAEI;EACA;AnBwwNN;;AmBpwNE;EXcE;EAAc;EDmBd;ECnBA;EAAc;EDmBd;AP4uNJ;;AUvuNM;EACE;EFzBJ;EAAc;EO0LV;EL/JA;AV4uNR;;AU/uNM;EACE;EFzBJ;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EGQI;AVuvNR;;AmBzxNE;EXOE;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EYlBE;AnB2xNN;;AUpwNM;EACE;EFzBJ;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EGQI;AV4wNR;;AmBlyNE;EXLE;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EYVE;EACA;AnBwyNN;;AU1xNM;EACE;EFzBJ;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EGQI;AVkyNR;;AmB/yNE;EXdE;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EYDE;AnBqzNN;;AU/yNM;EACE;EFzBJ;EAAc;EDmBd;ECnBA;EAAc;EDmBd;EGQI;AVuzNR;;AmB5zNE;EZfI;ECZF;EDwBA;EYQE;AnB8zNN;;AoBjuNE;EAEI;EACA,eDpG+C;AnBu0NrD;;AoB3rME;EAqBI,YXhqBmC;AT00NzC;;AqBtuNE;EAcM;ArB4tNR;;AWhmNE;EAEI;AXkmNN;;AqB9uNE;;EAcM;ArBquNR;;AWxlNI;;EAEI;AX2lNR;;AqBjuNE;EAEI;ArBmuNN;;AqBvyNI;EACE;IblFF;IAAc;IaoFV;ErB2yNN;EqBvyNI;IACE;IbzFJ;IAAc;Ia2FV;ErB0yNN;EqBtyNI;IACE;IbhGJ;IAAc;IauGV;ErBoyNN;EqBhyNI;Ib3GF;IAAc;Ia6GV;ErBmyNN;AACF;AoBrmNE;EAEI,WE5UY;EF6UZ,YE7UY;AtBm7NlB;;AW9mNE;EAEI,4BSguBA;ApBg5LN;;AuBx3ME;EAEI,Yd3gBmC;ATq4NzC;;AwB9zNI;;;ECxFE;ECZF;EDwBA;AzBk5NJ;;AwBlwNI;;;EC5JE;ECZF;EDwBA;AzB05NJ;;AwBnuNM;;;EAsBA;ECzNA;ECZF;EDwBA;AzBm6NJ;;AwB5rNM;;EAEI;AxB+rNV;;AwB1rNQ;;EAEI,yBAtRO;EC0Bb;ECZF;EDwBA;AzBg7NJ;;AwBrrNI;;EC3PA;AzBq7NJ;;AwBz2NI;;;;ECxFE;ECZF;EDwBA;AzB87NJ;;A2BjyME;;EFzqBI;ECZF;EDwBA;EAAA;AzBs8NJ;;A2BzyME;;;;;;EFzqBI;ECZF;EDwBA;EAZE;ECZF;EDwBA;AzBo9NJ;;A2BhxME;EACE;IFjtBE;ICZF;IDwBA;IAAA;EzB49NF;E2BlxME;IFttBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;EzBo+NF;AACF;A2BrxME;EACE;IF7tBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;EzB8+NF;E2BvxME;IFnuBE;ICZF;IDwBA;IAAA;EzBo/NF;AACF;A2B7kNQ;;;EAEI;A3BglNZ;;A2BzkNQ;;;EAEI;A3B6kNZ;;AAtkOA,sB;A4BRA;ACAA;EAAuB;EAAgC;EAAkE;EAAgC;EAA2B;EAA4B;EAAgC;EAA8B;EAA6B;ADW3S;;AAPA,yB","sources":["webpack://webpackNumbers/./src/assets/styles/views/wireframe/main.scss","webpack://webpackNumbers/./src/assets/styles/views/admin/register/main.scss","webpack://webpackNumbers/./src/assets/styles/variables/variables.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/wireframe.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_form.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_main.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/typography/_typography.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/rtl/_rtl.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/notched-outline/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-header-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/icon-button/_icon-button-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/touch-target/_touch-target.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/dom/_dom.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-progress-indicator.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-pagination.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/floating-label/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-icon-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/list/_evolution-mixins.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/_checkbox-theme.scss","webpack://webpackNumbers/./src/assets/styles/views/widget/file_input/file_input.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/widget.forms.file_input.scss"],"sourcesContent":["body {\r\n    display: block;\r\n    margin: 0px !important;\r\n}\r\n\r\n\r\n/* START :: VARIABLES */\r\n\r\n@import '../../variables/variables.scss';\r\n\r\n/* END :: VARIABLES */\r\n\r\n\r\n/* START :: TAILWIND CSS */\r\n\r\n@import '../tailwind-output/wireframe.scss';\r\n\r\n/* END :: TAILWIND CSS */","@import '../../wireframe/main.scss';\r\n@import '../../tailwind-output/admin_user_form.scss';\r\n@import '../../tailwind-output/admin_user_main.scss';\r\n\r\n/* START :: TABLE CSS */\r\n\r\n@import \"@material/data-table/mdc-data-table\";\r\n\r\n/* END :: TABLE CSS */",":root {\r\n    --theme-default-color: rgba(249, 120, 23);\r\n    --theme-default-color-disabled: rgb(223, 145, 85);\r\n    --theme-gray-color: rgb(175, 175, 175);\r\n    --theme-gray-color-disabled: rgb(216, 215, 215);\r\n    --theme-success-color: rgb(19, 133, 57);\r\n    --theme-success-color-disabled: rgb(107, 190, 135);\r\n    --theme-danger-color: rgb(185, 26, 26);\r\n    --theme-danger-color-disabled: rgb(182, 118, 118);\r\n    --theme-warning-color: rgb(202, 128, 17);\r\n    --theme-warning-color-disabled: rgb(175, 150, 111);\r\n    --theme-info-color: rgb(2, 137, 170);\r\n    --theme-info-color-disabled: rgb(108, 163, 177);\r\n    --theme-primary-color: rgb(11, 59, 216);\r\n    --theme-primary-color-disabled: rgb(76, 93, 146);\r\n}","/*! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com*/\r\n\r\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-webkit-text-size-adjust:100%;line-height:1.15;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;margin:0}hr{color:inherit;height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{border:0 solid;box-sizing:border-box}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:-moz-focusring{outline:auto}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{color:inherit;line-height:inherit;padding:0}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-border-opacity:1;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-blur:var(--tw-empty,/*!*/ /*!*/);--tw-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-invert:var(--tw-empty,/*!*/ /*!*/);--tw-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-drop-shadow:var(--tw-empty,/*!*/ /*!*/);--tw-filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);border-color:rgba(229,231,235,var(--tw-border-opacity))}.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.mt-1{margin-top:.25rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mb-2{margin-bottom:.5rem}.mr-2{margin-right:.5rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-2{margin-top:.5rem}.mr-4{margin-right:1rem}.ml-2{margin-left:.5rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.mb-3{margin-bottom:.75rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.mr-3{margin-right:.75rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-full{height:100%}.h-16{height:4rem}.h-32{height:8rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-8{height:2rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-24{height:6rem}.max-h-48{max-height:12rem}.w-full{width:100%}.w-16{width:4rem}.w-32{width:8rem}.w-max{width:-webkit-max-content;width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.\\!w-28{width:7rem!important}.flex-grow{flex-grow:1}.transform{transform:var(--tw-transform)}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded-full{border-radius:9999px}.rounded{border-radius:.25rem}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgba(209,213,219,var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgba(245,158,11,var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgba(255,161,91,var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgba(156,163,175,var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgba(220,38,38,var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgba(209,89,0,var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgba(16,185,129,var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgba(249,250,251,var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(229,231,235,var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgba(6,78,59,var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(249,120,23,0))}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(249,250,251,0))}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(255,161,91,0))}.via-white{--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to,hsla(0,0%,100%,0))}.via-gray-100{--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to,rgba(243,244,246,0))}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-2{padding:.5rem}.p-0{padding:0}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-3{padding-left:.75rem;padding-right:.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.px-0{padding-left:0;padding-right:0}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-1{padding-bottom:.25rem;padding-top:.25rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-base{font-size:1rem;line-height:1.5rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.font-medium{font-weight:500}.font-semibold{font-weight:600}.font-bold{font-weight:700}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-tight{line-height:1.25}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgba(31,41,55,var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgba(75,85,99,var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgba(248,113,113,var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgba(217,119,6,var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgba(220,38,38,var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgba(79,70,229,var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgba(107,114,128,var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgba(29,78,216,var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgba(4,120,87,var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgba(185,28,28,var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgba(156,163,175,var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgba(248,113,113,var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgba(55,65,81,var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgba(209,89,0,var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgba(255,161,91,var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgba(5,150,105,var(--tw-text-opacity))}.underline{text-decoration:underline}.no-underline{text-decoration:none}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 10px 10px -5px rgba(0,0,0,.04)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.06)}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06)}.shadow-md,.shadow-none{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-none{--tw-shadow:0 0 #0000}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgba(255,161,91,var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-filter)}body{--tw-gradient-from:#f9fafb;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(249,250,251,0));--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to,rgba(243,244,246,0));--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new{>[mdc-data-table=data-table]{width:100%!important}}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{display:block!important;margin-left:16rem!important}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient{&.gray{--tw-gradient-from:#d1d5db;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(209,213,219,0));--tw-gradient-to:#4b5563;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.gray,&.red{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.red{--tw-gradient-from:#fca5a5;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,hsla(0,94%,82%,0));--tw-gradient-to:#dc2626;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.blue{--tw-gradient-from:#93c5fd;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(147,197,253,0));--tw-gradient-to:#2563eb;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.blue,&.green{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.green{--tw-gradient-from:#6ee7b7;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(110,231,183,0));--tw-gradient-to:#059669;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.yellow{--tw-gradient-from:#fcd34d;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(252,211,77,0));--tw-gradient-to:#d97706;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.akwaaba,&.yellow{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(255,161,91,0));--tw-gradient-to:#d15900;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color);&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}&.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}&.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}}div[pageLoadingIndicator=on]{display:flex!important;justify-content:center!important;&>img{margin-top:50vh}&>img{display:flex!important}&>img{height:3rem!important}&>img{width:3rem!important}&>img{justify-content:center!important}}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);align-content:center;align-items:center;border-radius:9999px;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);display:inline-block;justify-content:center}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity));color:rgba(107,114,128,var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(255,161,91,0));--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgba(255,255,255,var(--tw-text-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgba(17,24,39,var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration:none}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgba(165,180,252,var(--tw-border-opacity))}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgba(199,210,254,var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}}@media (min-width:768px){.md\\:block{display:block}.md\\:hidden{display:none}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}}@media (min-width:1024px){.lg\\:flex-row{flex-direction:row}}","/*! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com*/\r\n\r\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-webkit-text-size-adjust:100%;line-height:1.15;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;margin:0}hr{color:inherit;height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{border:0 solid;box-sizing:border-box}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:-moz-focusring{outline:auto}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{color:inherit;line-height:inherit;padding:0}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-border-opacity:1;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-blur:var(--tw-empty,/*!*/ /*!*/);--tw-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-invert:var(--tw-empty,/*!*/ /*!*/);--tw-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-drop-shadow:var(--tw-empty,/*!*/ /*!*/);--tw-filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);border-color:rgba(229,231,235,var(--tw-border-opacity))}.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.mt-1{margin-top:.25rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mb-2{margin-bottom:.5rem}.mr-2{margin-right:.5rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-2{margin-top:.5rem}.mr-4{margin-right:1rem}.ml-2{margin-left:.5rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.mb-3{margin-bottom:.75rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.mr-3{margin-right:.75rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-full{height:100%}.h-16{height:4rem}.h-32{height:8rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-8{height:2rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-24{height:6rem}.max-h-48{max-height:12rem}.w-full{width:100%}.w-16{width:4rem}.w-32{width:8rem}.w-max{width:-webkit-max-content;width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.\\!w-28{width:7rem!important}.flex-grow{flex-grow:1}.transform{transform:var(--tw-transform)}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded-full{border-radius:9999px}.rounded{border-radius:.25rem}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgba(209,213,219,var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgba(245,158,11,var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgba(255,161,91,var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgba(156,163,175,var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgba(220,38,38,var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgba(209,89,0,var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgba(16,185,129,var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgba(249,250,251,var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(229,231,235,var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgba(6,78,59,var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(249,120,23,0))}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(249,250,251,0))}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(255,161,91,0))}.via-white{--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to,hsla(0,0%,100%,0))}.via-gray-100{--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to,rgba(243,244,246,0))}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-2{padding:.5rem}.p-0{padding:0}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-3{padding-left:.75rem;padding-right:.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.px-0{padding-left:0;padding-right:0}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-1{padding-bottom:.25rem;padding-top:.25rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-base{font-size:1rem;line-height:1.5rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.font-medium{font-weight:500}.font-semibold{font-weight:600}.font-bold{font-weight:700}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-tight{line-height:1.25}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgba(31,41,55,var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgba(75,85,99,var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgba(248,113,113,var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgba(217,119,6,var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgba(220,38,38,var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgba(79,70,229,var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgba(107,114,128,var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgba(29,78,216,var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgba(4,120,87,var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgba(185,28,28,var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgba(156,163,175,var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgba(248,113,113,var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgba(55,65,81,var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgba(209,89,0,var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgba(255,161,91,var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgba(5,150,105,var(--tw-text-opacity))}.underline{text-decoration:underline}.no-underline{text-decoration:none}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 10px 10px -5px rgba(0,0,0,.04)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.06)}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06)}.shadow-md,.shadow-none{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-none{--tw-shadow:0 0 #0000}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgba(255,161,91,var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-filter)}body{--tw-gradient-from:#f9fafb;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(249,250,251,0));--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to,rgba(243,244,246,0));--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new{>[mdc-data-table=data-table]{width:100%!important}}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{display:block!important;margin-left:16rem!important}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient{&.gray{--tw-gradient-from:#d1d5db;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(209,213,219,0));--tw-gradient-to:#4b5563;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.gray,&.red{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.red{--tw-gradient-from:#fca5a5;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,hsla(0,94%,82%,0));--tw-gradient-to:#dc2626;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.blue{--tw-gradient-from:#93c5fd;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(147,197,253,0));--tw-gradient-to:#2563eb;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.blue,&.green{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.green{--tw-gradient-from:#6ee7b7;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(110,231,183,0));--tw-gradient-to:#059669;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.yellow{--tw-gradient-from:#fcd34d;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(252,211,77,0));--tw-gradient-to:#d97706;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}&.akwaaba,&.yellow{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}&.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(255,161,91,0));--tw-gradient-to:#d15900;fill:currentColor;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color);&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}&.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}&.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}}div[pageLoadingIndicator=on]{display:flex!important;justify-content:center!important;&>img{margin-top:50vh}&>img{display:flex!important}&>img{height:3rem!important}&>img{width:3rem!important}&>img{justify-content:center!important}}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);align-content:center;align-items:center;border-radius:9999px;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);display:inline-block;justify-content:center}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity));color:rgba(107,114,128,var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(255,161,91,0));--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgba(255,255,255,var(--tw-text-opacity))}.form-container .header>.label,.form-container .header>label,.form-container header>.label,.form-container header>label{--tw-text-opacity:1;color:rgba(55,65,81,var(--tw-text-opacity));display:block;font-size:1.5rem;font-weight:600;line-height:2rem;margin-top:.75rem;text-align:left;>.icon{display:inline}>.icon{height:1.5rem}>.icon{width:1.5rem}>.icon{--tw-text-opacity:1;color:rgba(249,120,23,var(--tw-text-opacity))}>.h1,>h1{font-size:1.5rem;line-height:2rem}>.h1,>h1{font-weight:700}>.h1,>h1{--tw-text-opacity:1;color:rgba(255,161,91,var(--tw-text-opacity))}>.h3,>h3{margin-bottom:1rem}>.h3,>h3{font-size:.875rem;line-height:1.25rem}>.h3,>h3{font-weight:600}>.h3,>h3{--tw-text-opacity:1;color:rgba(255,161,91,var(--tw-text-opacity))}}.form-container .form{margin-top:2.5rem}.form-container .header,.form-container header{&.success .icon{--tw-text-opacity:1!important;color:rgba(4,120,87,var(--tw-text-opacity))!important}&.success .h1,&.success h1{--tw-text-opacity:1!important;color:rgba(5,150,105,var(--tw-text-opacity))!important}&.danger .h3,&.danger h3,&.info .h3,&.info h3,&.primary .h3,&.primary h3,&.success .h3,&.success h3,&.warning .h3,&.warning h3{--tw-text-opacity:1!important;color:rgba(75,85,99,var(--tw-text-opacity))!important}&.info .icon{--tw-text-opacity:1!important;color:rgba(96,165,250,var(--tw-text-opacity))!important}&.info .h1,&.info h1{--tw-text-opacity:1!important;color:rgba(147,197,253,var(--tw-text-opacity))!important}&.warning .icon{--tw-text-opacity:1!important;color:rgba(180,83,9,var(--tw-text-opacity))!important}&.warning .h1,&.warning h1{--tw-text-opacity:1!important;color:rgba(217,119,6,var(--tw-text-opacity))!important}&.danger .icon{--tw-text-opacity:1!important;color:rgba(185,28,28,var(--tw-text-opacity))!important}&.danger .h1,&.danger h1{--tw-text-opacity:1!important;color:rgba(220,38,38,var(--tw-text-opacity))!important}&.primary .icon{--tw-text-opacity:1!important;color:rgba(29,78,216,var(--tw-text-opacity))!important}&.primary .h1,&.primary h1{--tw-text-opacity:1!important;color:rgba(37,99,235,var(--tw-text-opacity))!important}}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgba(255,255,255,var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color);&.success{--mdc-theme-primary:var(--theme-success-color)}&.info{--mdc-theme-primary:var(--theme-info-color)}&.warning{--mdc-theme-primary:var(--theme-warning-color)}&.danger{--mdc-theme-primary:var(--theme-danger-color)}&.primary{--mdc-theme-primary:var(--theme-primary-color)}}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button{&.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity));color:rgba(209,89,0,var(--tw-text-opacity))}&.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(5,150,105,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.info{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(96,165,250,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(249,120,23,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.danger{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(220,38,38,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(37,99,235,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff;&.gray,&.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}&.success,&.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}&.info,&.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}&.warning,&.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}&.danger,&.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}&.primary,&.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}&[data-btn-to=inactive]{&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}&.success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}&.info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}}}mwc-tab-bar{--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff;&.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity));color:rgba(209,89,0,var(--tw-text-opacity))}&.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(5,150,105,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.info{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(96,165,250,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(249,120,23,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.danger{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(220,38,38,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(37,99,235,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}&.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}&.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgba(17,24,39,var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration:none}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgba(165,180,252,var(--tw-border-opacity))}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgba(199,210,254,var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}}@media (min-width:768px){.md\\:block{display:block}.md\\:hidden{display:none}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}}@media (min-width:1024px){.lg\\:flex-row{flex-direction:row}}","/*! tailwindcss v2.2.19 | MIT License | https://tailwindcss.com*/\r\n\r\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{-webkit-text-size-adjust:100%;line-height:1.15;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;margin:0}hr{color:inherit;height:0}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}legend{padding:0}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}button{background-color:transparent;background-image:none}fieldset,ol,ul{margin:0;padding:0}ol,ul{list-style:none}html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}body{font-family:inherit;line-height:inherit}*,:after,:before{border:0 solid;box-sizing:border-box}hr{border-top-width:1px}img{border-style:solid}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input:-ms-input-placeholder,textarea:-ms-input-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:-moz-focusring{outline:auto}table{border-collapse:collapse}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}button,input,optgroup,select,textarea{color:inherit;line-height:inherit;padding:0}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-transform:translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-border-opacity:1;--tw-ring-inset:var(--tw-empty,/*!*/ /*!*/);--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-blur:var(--tw-empty,/*!*/ /*!*/);--tw-brightness:var(--tw-empty,/*!*/ /*!*/);--tw-contrast:var(--tw-empty,/*!*/ /*!*/);--tw-grayscale:var(--tw-empty,/*!*/ /*!*/);--tw-hue-rotate:var(--tw-empty,/*!*/ /*!*/);--tw-invert:var(--tw-empty,/*!*/ /*!*/);--tw-saturate:var(--tw-empty,/*!*/ /*!*/);--tw-sepia:var(--tw-empty,/*!*/ /*!*/);--tw-drop-shadow:var(--tw-empty,/*!*/ /*!*/);--tw-filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);border-color:rgba(229,231,235,var(--tw-border-opacity))}.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.mt-1{margin-top:.25rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mb-2{margin-bottom:.5rem}.mr-2{margin-right:.5rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-2{margin-top:.5rem}.mr-4{margin-right:1rem}.ml-2{margin-left:.5rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.mb-3{margin-bottom:.75rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.mr-3{margin-right:.75rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-full{height:100%}.h-16{height:4rem}.h-32{height:8rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-8{height:2rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-24{height:6rem}.max-h-48{max-height:12rem}.w-full{width:100%}.w-16{width:4rem}.w-32{width:8rem}.w-max{width:-webkit-max-content;width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.\\!w-28{width:7rem!important}.flex-grow{flex-grow:1}.transform{transform:var(--tw-transform)}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded-full{border-radius:9999px}.rounded{border-radius:.25rem}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgba(209,213,219,var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgba(245,158,11,var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgba(255,161,91,var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgba(156,163,175,var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgba(220,38,38,var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgba(229,231,235,var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgba(209,89,0,var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgba(16,185,129,var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgba(249,250,251,var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgba(243,244,246,var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgba(229,231,235,var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgba(6,78,59,var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(249,120,23,0))}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(249,250,251,0))}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to,rgba(255,161,91,0))}.via-white{--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to,hsla(0,0%,100%,0))}.via-gray-100{--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to,rgba(243,244,246,0))}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-2{padding:.5rem}.p-0{padding:0}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-3{padding-left:.75rem;padding-right:.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.px-0{padding-left:0;padding-right:0}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-1{padding-bottom:.25rem;padding-top:.25rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-base{font-size:1rem;line-height:1.5rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-xs{font-size:.75rem;line-height:1rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.font-medium{font-weight:500}.font-semibold{font-weight:600}.font-bold{font-weight:700}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-tight{line-height:1.25}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgba(31,41,55,var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgba(75,85,99,var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgba(248,113,113,var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgba(217,119,6,var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgba(220,38,38,var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgba(79,70,229,var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgba(107,114,128,var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgba(29,78,216,var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgba(4,120,87,var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgba(185,28,28,var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgba(156,163,175,var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgba(248,113,113,var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgba(55,65,81,var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgba(31,41,55,var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgba(209,89,0,var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgba(255,161,91,var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgba(5,150,105,var(--tw-text-opacity))}.underline{text-decoration:underline}.no-underline{text-decoration:none}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 10px 10px -5px rgba(0,0,0,.04)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.06)}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06)}.shadow-md,.shadow-none{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-none{--tw-shadow:0 0 #0000}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -2px rgba(0,0,0,.05);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgba(255,161,91,var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-filter)}mwc-dialog{z-index:50!important}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgba(255,255,255,var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color);&.success{--mdc-theme-primary:var(--theme-success-color)}&.info{--mdc-theme-primary:var(--theme-info-color)}&.warning{--mdc-theme-primary:var(--theme-warning-color)}&.danger{--mdc-theme-primary:var(--theme-danger-color)}&.primary{--mdc-theme-primary:var(--theme-primary-color)}}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button{&.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity));color:rgba(209,89,0,var(--tw-text-opacity))}&.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(5,150,105,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.info{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(96,165,250,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(249,120,23,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.danger{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(220,38,38,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(37,99,235,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff;&.gray,&.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}&.success,&.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}&.info,&.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}&.warning,&.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}&.danger,&.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}&.primary,&.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}&[data-btn-to=inactive]{&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}&.success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}&.info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}}}mwc-tab-bar{--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff;&.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(75,85,99,var(--tw-bg-opacity));color:rgba(209,89,0,var(--tw-text-opacity))}&.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(5,150,105,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.info{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(96,165,250,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(249,120,23,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.danger{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(220,38,38,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgba(37,99,235,var(--tw-bg-opacity));color:rgba(255,255,255,var(--tw-text-opacity))}&.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}&.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}&.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}&.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}&.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}&.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgba(17,24,39,var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration:none}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgba(165,180,252,var(--tw-border-opacity))}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgba(199,210,254,var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}}@media (min-width:768px){.md\\:block{display:block}.md\\:hidden{display:none}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}}@media (min-width:1024px){.lg\\:flex-row{flex-direction:row}}","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/checkbox/mixins' as checkbox-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './data-table-cell';\n@use './data-table-header-cell';\n@use './data-table-pagination';\n@use './data-table-progress-indicator';\n@use './data-table-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define data-table\n\n  .mdc-data-table__content {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  .mdc-data-table {\n    @include data-table-theme.fill-color(\n      data-table-theme.$fill-color,\n      $query: $query\n    );\n    @include data-table-theme.shape-radius(\n      data-table-theme.$shape-radius,\n      $query: $query\n    );\n    @include data-table-theme.stroke-size(\n      data-table-theme.$stroke-size,\n      $query: $query\n    );\n    @include data-table-theme.stroke-color(\n      data-table-theme.$stroke-color,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      // NOTE: Root element should not be scrollable, added this for backward\n      // compatibility.\n      -webkit-overflow-scrolling: touch;\n      display: inline-flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      position: relative;\n    }\n  }\n\n  // Note that we don't output the color styles inside the `@at-root`,\n  // because it makes it difficult to consume by projects that wrap their\n  // themes in a class (e.g. `.my-theme { @include mdc-data-table-core-style() }`).\n  @include data-table-theme.row-fill-color(\n    data-table-theme.$row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-fill-color(\n    data-table-theme.$header-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.selected-row-fill-color(\n    data-table-theme.$selected-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-color(\n    data-table-theme.$divider-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-size(\n    data-table-theme.$divider-size,\n    $query: $query\n  );\n  @include data-table-theme.row-hover-fill-color(\n    data-table-theme.$row-hover-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-text-color(\n    data-table-theme.$header-row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.row-text-color(\n    data-table-theme.$row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.density(\n    data-table-theme.$default-density-scale,\n    $query: $query\n  );\n  @include data-table-theme.cell-padding(\n    $leading-padding: data-table-theme.$cell-leading-padding,\n    $trailing-padding: data-table-theme.$cell-trailing-padding,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-color(\n    data-table-theme.$sort-icon-color,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-active-color(\n    data-table-theme.$sort-icon-active-color,\n    $query: $query\n  );\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      -webkit-overflow-scrolling: touch;\n      overflow-x: auto;\n      width: 100%;\n    }\n  }\n\n  .mdc-data-table__table {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: 100%; // Makes table full-width of its container (Firefox / IE11)\n      border: 0;\n      white-space: nowrap;\n      border-spacing: 0;\n      /**\n       * With table-layout:fixed, table and column widths are defined by the width\n       * of the first row of cells. Cells in subsequent rows do not affect column\n       * widths. This results in a predictable table layout and may also speed up\n       * rendering.\n       */\n      table-layout: fixed;\n    }\n  }\n\n  @include data-table-cell.core-styles($query: $query);\n  @include data-table-header-cell.core-styles($query: $query);\n  @include data-table-progress-indicator.core-styles($query: $query);\n\n  .mdc-data-table--sticky-header {\n    @include data-table-header-cell.header-cell-sticky($query: $query);\n  }\n\n  @include data-table-pagination.core-styles($query: $query);\n}\n\n@mixin theme-baseline($query: feature-targeting.all()) {\n  @include data-table-theme.checked-icon-color(\n    data-table-theme.$checked-icon-color,\n    $query: $query\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(size, map.get($theme, font-size));\n  @include theme.property(weight, map.get($theme, font-weight));\n  @include theme.property(tracking, map.get($theme, letter-spacing));\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/functions';\n@use '@material/checkbox/checkbox-theme';\n@use '@material/density/density';\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/rtl/rtl';\n@use '@material/select/select-theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n\n$fill-color: surface !default;\n$header-row-fill-color: surface !default;\n$row-fill-color: inherit !default;\n$selected-row-fill-color: rgba(theme-color.prop-value(primary), 0.04) !default;\n$checked-icon-color: primary !default;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$divider-size: 1px !default;\n$row-hover-fill-color: rgba(theme-color.prop-value(on-surface), 0.04) !default;\n\n$header-row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$sort-icon-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$sort-icon-active-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.87\n) !default;\n$sort-icon-density-scale: -5 !default;\n\n$shape-radius: medium !default;\n$stroke-size: 1px !default;\n$stroke-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$row-height: 52px !default;\n$header-row-height: get-header-row-height($row-height) !default;\n$cell-leading-padding: 16px !default;\n$cell-trailing-padding: 16px !default;\n\n$minimum-row-height: 36px !default;\n$maximum-row-height: $row-height !default;\n$default-density-scale: density.$default-scale !default;\n$density-config: (\n  height: (\n    maximum: $row-height,\n    default: $row-height,\n    minimum: $minimum-row-height,\n  ),\n);\n$pagination-rows-per-page-select-height: 36px;\n\n@function get-header-row-height($height) {\n  @return $height + 4px;\n}\n\n/// Sets the color of sort icon button when it is in idle state.\n/// (icon showed on header cell focus)\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n/// Sets the color of sort icon button when it is activated (sorted).\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $color);\n  }\n}\n\n@mixin header-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Set background color to cell instead of row to support sticky header.\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin selected-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin checked-icon-color($color, $query: feature-targeting.all()) {\n  .mdc-data-table__header-row-checkbox,\n  .mdc-data-table__row-checkbox {\n    @include checkbox-theme.focus-indicator-color($color, $query: $query);\n    @include checkbox-theme.container-colors(\n      $marked-stroke-color: $color,\n      $marked-fill-color: $color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets divider color of data table (including outline color of rows per page\n/// select). Use `stroke-color()` to set table border color.\n/// @param {Color} $color Divider color.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.outline-color($color, $query: $query);\n  }\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      border-bottom-color: $color;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      border-top-color: $color;\n    }\n  }\n}\n\n@mixin divider-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-width: $size;\n      border-bottom-style: solid;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-width: $size;\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-data-table__row:last-child .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom: none;\n    }\n  }\n}\n\n@mixin row-hover-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin header-row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets row text color (including pagination row text).\n/// @param {Color} $color Row text color\n///\n@mixin row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label,\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets rounded shape radius to data table.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - Set to `true` to flip radius corners in\n///     RTL context.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n  // Apply same border radius as parent to leading & trailing header cells.\n  // Header cells have explicite background color applied which requires border\n  // radius to take its parent rounded shape.\n  $border-radius: shape-functions.unpack-radius($radius);\n  $top-left-radius: shape-functions.resolve-radius(list.nth($border-radius, 1));\n  $top-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 2)\n  );\n\n  .mdc-data-table__header-cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-left-radius, $top-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-right-radius,\n          if($rtl-reflexive, $top-left-radius, $top-right-radius)\n        );\n\n        border-top-left-radius: 0;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-right-radius, $top-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-left-radius,\n          if($rtl-reflexive, $top-right-radius, $top-left-radius)\n        );\n\n        border-top-right-radius: 0;\n      }\n    }\n  }\n}\n\n@mixin stroke-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $size;\n    border-style: solid;\n  }\n}\n\n@mixin stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    border-color: $color;\n  }\n}\n\n@mixin header-row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $height;\n    }\n  }\n}\n\n///\n/// Sets cell padding including cell, header cell, row checkbox cell and header\n/// row checkbox cell.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $trailing-padding [$cell-trailing-padding] Trailing padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $trailing-padding: $cell-trailing-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0 $trailing-padding 0 $leading-padding;\n    }\n  }\n\n  @include checkbox-cell-padding(\n    $leading-padding: $leading-padding,\n    $row-checkbox-density-scale: $row-checkbox-density-scale,\n    $query: $query\n  );\n}\n\n///\n/// Sets only row checkbox cell and header row checkbox cell leading padding.\n/// Use `cell-padding()` to set all cell's padding.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin checkbox-cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell--checkbox,\n  .mdc-data-table__cell--checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      // Distance from leading cell bound to checkbox's icon bound should be\n      // 16dp (`$leading-padding`). Calculate required padding excluding\n      // checkbox bounds.\n      $checkbox-icon-size: 24px;\n      $checkbox-touch-size: touch-target.$height;\n      @if $row-checkbox-density-scale and $row-checkbox-density-scale < 0 {\n        $checkbox-touch-size: checkbox-theme.get-ripple-size(\n          $row-checkbox-density-scale\n        );\n      }\n      $leading-padding: $leading-padding -\n        math.div($checkbox-touch-size - $checkbox-icon-size, 2);\n      @include rtl.reflexive-property(padding, $leading-padding, 0);\n    }\n  }\n}\n\n@mixin column-widths($width-list, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $i from 1 through list.length($width-list) {\n    .mdc-data-table__row > :nth-child(#{$i}) {\n      @include feature-targeting.targets($feat-structure) {\n        width: list.nth($width-list, $i);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for data table. Use corresponding density mixins of child components (such as Checkbox) to apply\n/// density scales which will be rendered inside data table.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to set density of row checkbox and also\n///     automatically adjust the alignment of row checkbox within a cell.\n///     See `checkbox.density()` mixin for supported density scales.\n///\n@mixin density(\n  $density-scale,\n  $row-checkbox-density-scale: null,\n  $pagination-select-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include row-height($height, $query: $query);\n  @include header-row-height(get-header-row-height($height), $query: $query);\n\n  @if $row-checkbox-density-scale {\n    @include checkbox-cell-padding(\n      $leading-padding: $cell-leading-padding,\n      $row-checkbox-density-scale: $row-checkbox-density-scale,\n      $query: $query\n    );\n\n    .mdc-data-table__header-row-checkbox,\n    .mdc-data-table__row-checkbox {\n      @include checkbox-theme.density($row-checkbox-density-scale);\n    }\n  }\n\n  @if $pagination-select-density-scale {\n    @include select-density($pagination-select-density-scale);\n  }\n}\n\n@mixin select-density($density-scale) {\n  @include select-theme.outlined-height(\n    select-theme.$height + density.$interval * $density-scale\n  );\n  .mdc-list-item {\n    @include list-theme.one-line-item-density(\n      $density-scale + 2,\n      $exclude-variants: true\n    );\n  }\n\n  margin: 0;\n}\n\n///\n/// Sets maximum height of data table. Use this to make table vertically\n/// scrollable.\n/// @param {Number} $height\n///\n@mixin max-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $height;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:list';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      border-width: $width;\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        @supports (top: max(0%)) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        @supports (top: max(0%)) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    // stylelint-disable-next-line no-descending-specificity\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust-absolute,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    // stylelint-disable-next-line no-descending-specificity\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    @include rtl.ignore-next-line();\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl.rtl {\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @if color.alpha(theme-color.prop-value($color)) > 0 {\n          @include theme.property(background-color, $color);\n        } @else {\n          // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n          // This avoids unnecessary transitions and overflow.\n          content: none;\n        }\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__cell {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: left;\n      text-overflow: ellipsis;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--checkbox {\n    @include adaptive-width($query: $query);\n  }\n}\n\n@mixin adaptive-width($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Set to lowest width to adapt to cell content. Cell width should adapt\n    // to row checkbox size when it is dense.\n    // NOTE: `min-width` does not seem to work on table cells.\n    width: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './data-table-theme';\n@use './data-table-cell';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__header-cell {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      outline: none;\n\n      @include rtl.ignore-next-line();\n      text-align: left;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell--checkbox {\n    @include data-table-cell.adaptive-width($query: $query);\n  }\n\n  .mdc-data-table__header-cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.density(\n      $density-scale: data-table-theme.$sort-icon-density-scale,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Apply dummy `transform` to avoid pixel shift on sort down animation.\n      transform: rotate(0.0001deg);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n    }\n\n    .mdc-data-table__header-cell--numeric & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 4px);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: functions.standard(transform, $duration: 150ms);\n    }\n\n    .mdc-data-table__header-cell--sorted-descending & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: rotate(-180deg);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    &:focus,\n    .mdc-data-table__header-cell:hover &,\n    .mdc-data-table__header-cell--sorted & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-data-table__header-cell--with-sort {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  .mdc-data-table__sort-status-label {\n    @include dom.visually-hidden($query: $query);\n  }\n}\n\n/// Sets header cell in sticky position on table content vertical scroll.\n@mixin header-cell-sticky($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: math.div($size - $icon-size, 2);\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with densities\n    // -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if $size >= 40px and $size <= 48px {\n      $component-size: 40px;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      width: $component-size;\n      height: $component-size;\n      padding: math.div($component-size - $icon-size, 2);\n    }\n\n    &.mdc-icon-button--touch {\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $width + $padding * 2;\n    height: $height + $padding * 2;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  // stylelint-disable-next-line selector-max-type\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color_($color, $query: $query);\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  @include theme.property(font-size, $size);\n\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: math.div(\n      $touch-target-width - $component-width,\n      2\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__progress-indicator {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: absolute;\n      width: 100%;\n    }\n\n    .mdc-data-table--in-progress & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n  }\n\n  .mdc-data-table__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('background-color', surface);\n\n      height: 100%;\n      // TODO(b/151453287): Set appropriate opacity value once we've a UX\n      // guidance.\n      opacity: 0.32;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n  }\n}\n","@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/icon-button/icon-button-theme';\n@use '@material/select/select-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/menu/mixins' as menu-theme;\n@use './data-table-theme';\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n/// Sets core styles for data table pagination.\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__pagination {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n\n      align-items: center;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-navigation {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: flex;\n    }\n  }\n\n  .mdc-data-table__pagination-button {\n    @include icon-button-theme.flip-icon-in-rtl($query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 4px);\n    }\n  }\n\n  .mdc-data-table__pagination-total {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(\n        margin,\n        $left-value: 14px,\n        $right-value: 36px\n      );\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 22px);\n\n      align-items: center;\n      display: inline-flex;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 12px);\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.variable-width($min-width: 80px, $query: $query);\n    @include menu-theme.min-width(80px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 8px 0;\n    }\n\n    // TODO(b/158196144): Set it to `-5` density scale using density mixin when\n    // select component supports it.\n    @include select-theme.outlined-height(\n      data-table-theme.$pagination-rows-per-page-select-height,\n      $query: $query\n    );\n    .mdc-list-item {\n      @include list-theme.one-line-item-height(\n        data-table-theme.$pagination-rows-per-page-select-height,\n        $query: $query\n      );\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/evolution-mixins' as list-evolution-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/rtl/rtl';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/gss';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n@use '@material/typography/mixins' as typography-mixins;\n@use './select-icon-theme';\n\n$ripple-target: '.mdc-select__ripple';\n\n@function get-outlined-label-position-y($select-anchor-height) {\n  @return math.div($select-anchor-height, 2) +\n    math.div(notched-outline-variables.$label-box-height, 2);\n}\n\n$arrow-padding: 52px !default;\n$label-padding: 16px !default;\n$height: 56px !default;\n$minimum-height-for-filled-label: 52px !default;\n$filled-baseline-top: 40px !default;\n$selected-text-height: 28px !default;\n$anchor-padding-left: 16px !default;\n$anchor-padding-left-with-leading-icon: 0 !default;\n$anchor-padding-right: 0 !default;\n$outlined-stroke-width: 2px !default;\n$default-width: 200px !default;\n$shape-radius: small !default;\n\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$ink-color: rgba(theme-variables.prop-value(on-surface), 0.87) !default;\n$dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.54\n) !default;\n$label-color: rgba(theme-variables.prop-value(on-surface), 0.6) !default;\n$focused-label-color: rgba(theme-variables.prop-value(primary), 0.87) !default;\n$bottom-line-idle-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.42\n) !default;\n$bottom-line-hover-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  4%\n) !default;\n\n// Disabled Styles\n$disabled-label-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-ink-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  2%\n) !default;\n$disabled-fill-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-bottom-line-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-outline-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n\n$outlined-idle-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$outlined-hover-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$label-position-y: 106% !default;\n$outline-label-offset: 16px !default;\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n\n$dropdown-transition-duration: 150ms !default;\n// Transition durartions to active state\n$icon-active-fade-out-duration: 0.33 * $dropdown-transition-duration !default;\n$icon-active-fade-in-duration: 0.67 * $dropdown-transition-duration !default;\n// Transition durartions to inactive state\n$icon-inactive-fade-out-duration: 0.5 * $dropdown-transition-duration !default;\n$icon-inactive-fade-in-duration: 0.5 * $dropdown-transition-duration !default;\n\n// Error colors\n$error-color: error !default;\n\n/// Sets the min-width of the select.\n/// @param {Number} $min-width - The desired min-width.\n/// @deprecated using this mixin is no longer required, and clients may set\n///             the attribute directly\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n/// Sets the select behavior to change width dynamically based on content.\n/// @param {Number} $min-width - The min-width of the select, which should be\n///     large enough to allow the label (if exists) to display in full.\n@mixin variable-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n      min-width: $min-width;\n    }\n  }\n}\n\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n  }\n\n  @include _if-disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin dropdown-icon-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _dropdown-icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _dropdown-icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _dropdown-icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _dropdown-icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-floating-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-floating-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-floating-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin bottom-line-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _bottom-line-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // bottom line inactive/active are on different elements, does not need\n    // to check for :not() focused\n    &:hover {\n      @include _bottom-line-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _focused-line-ripple-color(\n      state.get-focus-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _bottom-line-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    @include _if-focused {\n      @include _label-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _label-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _outline-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // stylelint-disable-next-line selector-combinator-space-after\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _hover-outline-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _focused-outline-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _outline-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified size.\n///\n@mixin dropdown-icon-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__dropdown-icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: $size;\n      height: $size;\n    }\n  }\n}\n\n@mixin filled-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-select: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  .mdc-select__anchor {\n    @include shape-mixins.radius(\n      $masked-radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    .mdc-select__anchor {\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    + .mdc-select-helper-text {\n      @include _apply-outline-shape-padding(\n        margin-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          margin-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          margin-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    // Unlike textfield, select does not need to re-apply leading icon padding.\n    // This is because select only has one potential leading class, not two\n    // extra classes like textfield (leading + trailing). Textfield's two extra\n    // classes can cause specificity conflicts, requiring everything to be\n    // re-applied.\n  }\n}\n\n///\n/// Sets density scale for filled select variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for filled select variant with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-with-leading-icon-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-with-leading-icon-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select (Excluding outlined select with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n@mixin _list-density($density-scale, $query) {\n  @include list-mixins.deprecated-single-line-density(\n    $density-scale,\n    $query: $query\n  );\n  .mdc-select__one-line-option {\n    @include list-evolution-mixins.one-line-item-density(\n      $density-scale,\n      $exclude-variants: true,\n      $query: $query\n    );\n  }\n  .mdc-select__two-line-option {\n    @include list-evolution-mixins.two-line-item-density(\n      $density-scale,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets height of default select variant.\n///\n/// @param {Number} $new-height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n\n    // Filled variant is aligned to baseline...\n    @include typography-mixins.baseline(\n      $top: $filled-baseline-top,\n      $display: flex,\n      $query: $query\n    );\n    // ...unless it is too small to display a label\n    @if $new-height < $minimum-height-for-filled-label {\n      @include center-aligned($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        .mdc-floating-label {\n          display: none;\n        }\n      }\n    }\n  }\n\n  // No-label variants are always centered\n  &.mdc-select--no-label .mdc-select__anchor {\n    @include center-aligned($query: $query);\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of filled select variant with leading icon.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-with-leading-icon-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include filled-height(\n    $new-height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $filled-baseline-top: $filled-baseline-top,\n    $query: $query\n  );\n\n  @if $new-height < $height {\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    .mdc-select__anchor {\n      @include leading-icon-floating-label-position(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select variant (Excluding outlined select with leading icon).\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-height(\n  $new-height,\n  $keyframe-suffix: select-outlined-#{$new-height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: get-outlined-label-position-y($new-height);\n\n  .mdc-select__anchor {\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      $positionY,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        $positionY,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select with leading icon variant.\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-with-leading-icon-height(\n  $new-height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @if $new-height < $height {\n      @include dropdown-icon-size(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$dense-icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    } @else {\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n// $add-label-padding is copied from textfield's mixin, even though select\n// always sets it to true. This is to try and keep things aligned between select\n// and textfield for when these styles are refactored into shared styles.\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > notched-outline-variables.$leading-width) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @include gss.annotate(\n        (\n          alternate: $padding-is-custom-prop,\n        )\n      );\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      @supports (top: max(0%)) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the\n        // calculated custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{$anchor-padding-left}, #{$value});\n      }\n    }\n  }\n}\n\n// Removes filled baseline alignment\n@mixin center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__selected-text {\n    @include typography-mixins.zero-width-prefix($query: $query);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons \"controlling\" the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the \"largest\"\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n    //\n    // IE11 does not respect this, and makes the leading icon (if present)\n    // the baseline.\n    .mdc-select__selected-text-container {\n      height: 100%;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    &::before {\n      display: none;\n    }\n  }\n}\n\n///\n/// Sets the position of the floating label for a select with leading icon.\n/// @param {number} $icon-size - The size of the leading icon.\n///\n@mixin leading-icon-floating-label-position(\n  $icon-size: select-icon-theme.$icon-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-total-width);\n    }\n  }\n}\n\n///\n/// Sets the floating label position and animations for a given height for an\n/// outlined select with leaing icon.\n/// @param {number} $icon-size - The size of the leading icon.\n/// @param {string} $keyframe-suffix - The suffix for the newly generated keyframes.\n///\n@mixin outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $icon-size,\n  $keyframe-suffix: select-outlined-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n  $resting-position-x: $icon-total-width -\n    select-icon-theme.$icon-horizontal-margin;\n  $float-position-y: get-outlined-label-position-y($height);\n  $float-position-x: $icon-size + select-icon-theme.$icon-horizontal-margin -\n    notched-outline-variables.$notch-gutter-size;\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $resting-position-x);\n    }\n  }\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $float-position-y,\n    $float-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $float-position-y,\n      $float-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $float-position-y,\n      -($float-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the floating label according to sizes of the\n/// leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-floating-label-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin *\n      2 +\n      $leading-icon-size;\n  } @else {\n    $truncation: $truncation + $outline-label-offset;\n  }\n\n  .mdc-floating-label {\n    @include floating-label-mixins.max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n\n  .mdc-floating-label--float-above {\n    $scale: floating-label-variables.$float-scale;\n    @include floating-label-mixins.max-width(\n      calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the notched outline according to the sizes of\n/// the leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-notched-outline-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size + notched-outline-variables.$leading-width;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin +\n      $leading-icon-size;\n  }\n  .mdc-select__anchor {\n    @include notched-outline-mixins.notch-max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n}\n\n/// Selector for focused state\n/// @access private\n@mixin _if-focused {\n  &.mdc-select--focused {\n    @content;\n  }\n}\n\n/// Selector for enabled state\n/// @access private\n@mixin _if-enabled {\n  &:not(.mdc-select--disabled) {\n    @content;\n  }\n}\n\n/// Selector for disabled state\n/// @access private\n@mixin _if-disabled {\n  &.mdc-select--disabled {\n    @content;\n  }\n}\n\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__selected-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__anchor {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(background-color, $color);\n      }\n    }\n  }\n}\n\n@mixin _bottom-line-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.inactive-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-line-ripple-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.active-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin _hover-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.stroke-width(\n        $outlined-stroke-width,\n        $query: $query\n      );\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-floating-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label--float-above {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified color.\n/// @access private\n///\n@mixin _dropdown-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      .mdc-select__dropdown-icon {\n        @include theme-mixins.property(fill, $color);\n      }\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use '@material/rtl/rtl';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define floating-label\n  .mdc-floating-label {\n    @include typography.typography(\n      subtitle1,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      @include rtl.ignore-next-line();\n      left: 0;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: left top;\n      @include rtl.ignore-next-line();\n      transform-origin: left top;\n      line-height: 1.15rem;\n      text-align: left;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: text;\n      overflow: hidden;\n\n      /* @alternate */\n      // Force the label into its own layer to prevent visible layer promotion adjustments\n      // when the ripple is activated behind it.\n      will-change: transform;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        right: 0;\n        @include rtl.ignore-next-line();\n        left: auto;\n        @include rtl.ignore-next-line();\n        -webkit-transform-origin: right top;\n        @include rtl.ignore-next-line();\n        transform-origin: right top;\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: transform variables.$transition-duration\n          animation-variables.$standard-curve-timing-function,\n        color variables.$transition-duration\n          animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: auto;\n    }\n  }\n\n  .mdc-floating-label--required {\n    &::after {\n      @include _required-content($query);\n    }\n\n    @include rtl.rtl {\n      &::after {\n        @include _required-content-rtl($query);\n      }\n    }\n  }\n\n  @at-root {\n    @include float-position(variables.$position-y, $query: $query);\n    @include shake-animation(standard, $query: $query);\n  }\n\n  @include shake-keyframes(standard, variables.$position-y, $query: $query);\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n// Used for textarea in case of scrolling\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shake-keyframes(\n  $modifier,\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {\n      0% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      33% {\n        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      66% {\n        animation-timing-function: cubic-bezier(\n          0.302435,\n          0.381352,\n          0.55,\n          0.956352\n        );\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(-4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      100% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n    }\n  }\n}\n\n@mixin float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      @if $positionX > 0 or $positionX < 0 {\n        @include rtl.ignore-next-line();\n        transform: translateY(-1 * $positionY)\n          translateX(-1 * $positionX)\n          scale($scale);\n\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          transform: translateY(-1 * $positionY) translateX($positionX)\n            scale($scale);\n        }\n      } @else {\n        transform: translateY(-1 * $positionY) scale($scale);\n      }\n    }\n  }\n}\n\n@mixin shake-animation($modifier, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-floating-label--shake {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    max-width: $max-width;\n  }\n}\n\n///\n/// Sets the CSS transition for the floating animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin float-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: color $duration-ms $timing-function,\n      transform $duration-ms $timing-function;\n  }\n}\n\n@mixin _required-content($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 1px;\n    @include rtl.ignore-next-line();\n    margin-right: 0px;\n    content: '*';\n  }\n}\n\n// Need to specify LTR/RTL manually since rtl mixins will add ::after[dir=rtl]\n// selector and that breaks some browsers\n@mixin _required-content-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 0;\n    @include rtl.ignore-next-line();\n    margin-right: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n\n$icon-size: 24px !default;\n$dense-icon-size: 20px !default;\n$icon-horizontal-margin: 12px !default;\n\n$icon-color: rgba(theme-variables.prop-value(on-surface), 0.54) !default;\n$disabled-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n\n///\n/// Customizes the size (both width and height) of the icon.\n/// @param {Number} $size - the intended icon size.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-select__icon {\n      width: $size;\n      height: $size;\n      font-size: $size;\n    }\n  }\n}\n\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(.mdc-select--disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  &.mdc-select--disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin icon-horizontal-margins($left, $right, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-select__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left, $right);\n    }\n  }\n}\n\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n","// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/theme/theme';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme-color';\n@use './evolution-variables' as variables;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode($query);\n\n  .mdc-list {\n    @include list-base($query: $query);\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n\n    @include _one-line-item-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n    @include _three-line-item-density(\n      variables.$three-line-item-density-scale,\n      $query: $query\n    );\n\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before, // lint-disable-focus-psuedo-selector\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    // lint-disable-focus-psuedo-selector\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _two-line-item-end-baseline($top: 28px, $query: $query);\n    @include _three-line-item-end-baseline($top: 28px, $query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-list-group__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $mdc-list-subheader-margin: calc(\n      (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) /\n        2\n    );\n\n    @include typography.typography(subtitle1, $query);\n    @include feature-targeting.targets($feat-structure) {\n      margin: $mdc-list-subheader-margin variables.$side-padding;\n    }\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      height: 1px;\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n\n  .mdc-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n\n    #{variables.$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include _item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        opacity: $opacity;\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin _item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n\n      @include feature-targeting.targets($feat-color) {\n        // Color ensures border is shown, but will be overridden by the browser.\n        @include theme.property(border-bottom-color, white);\n      }\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @if color.alpha(theme-color.prop-value($color)) > 0 {\n          @include theme.property(background-color, $color);\n        } @else {\n          // If a color with 0 alpha is specified, don't render the ripple pseudo-elements at all.\n          // This avoids unnecessary transitions and overflow.\n          content: none;\n        }\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      #{$ripple-target}::before {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    // stylelint-disable-next-line selector-max-type\n    #{$ripple-target}::before {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/shadow-dom';\n@use '@material/touch-target/touch-target';\n@use './checkbox-custom-properties';\n\n$baseline-theme-color: secondary !default;\n$mark-color: theme-color.prop-value(on-secondary) !default;\n$border-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$ripple-size: 40px !default;\n$icon-size: 18px !default;\n$mark-stroke-size: math.div(2, 15) * $icon-size !default;\n$border-width: 2px !default;\n$transition-duration: 90ms !default;\n$item-spacing: 4px !default;\n$focus-indicator-opacity: map.get(\n  ripple-theme.$dark-ink-opacities,\n  focus\n) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-checkbox__ripple';\n$custom-property-prefix: 'checkbox';\n\n// TODO(b/188417756): State layer (ripple) size token is missing including\n//     `state-layer-size`.\n// TODO(b/187852988): `selected-checkmark-color` does not exist in tokens.\n$light-theme: (\n  disabled-selected-icon-color: $disabled-color,\n  disabled-selected-icon-opacity: null,\n  disabled-unselected-icon-color: $disabled-color,\n  disabled-unselected-icon-opacity: null,\n  selected-checkmark-color: $mark-color,\n  selected-focus-icon-color: $baseline-theme-color,\n  selected-focus-state-layer-color: theme-color.$on-surface,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: $baseline-theme-color,\n  selected-hover-state-layer-color: $baseline-theme-color,\n  selected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  selected-icon-color: $baseline-theme-color,\n  selected-pressed-icon-color: $baseline-theme-color,\n  selected-pressed-state-layer-color: theme-color.$on-surface,\n  selected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: $baseline-theme-color,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, focus),\n  unselected-hover-icon-color: $baseline-theme-color,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  unselected-icon-color: $border-color,\n  unselected-pressed-icon-color: $border-color,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include disabled-container-colors(\n    $unmarked-stroke-color: map.get($theme, disabled-unselected-icon-color),\n    $marked-fill-color: map.get($theme, disabled-selected-icon-color)\n  );\n\n  @include ink-color(map.get($theme, selected-checkmark-color));\n  @include disabled-ink-color(map.get($theme, selected-checkmark-color));\n\n  @include _icon-color(\n    map.get($theme, unselected-icon-color),\n    map.get($theme, selected-icon-color)\n  );\n\n  &:hover {\n    @include _icon-color(\n      map.get($theme, unselected-hover-icon-color),\n      map.get($theme, selected-hover-icon-color)\n    );\n  }\n\n  @include ripple-theme.focus() {\n    @include _icon-color(\n      map.get($theme, unselected-focus-icon-color),\n      map.get($theme, selected-focus-icon-color)\n    );\n  }\n\n  @include ripple-theme.active() {\n    @include _icon-color(\n      map.get($theme, unselected-pressed-icon-color),\n      map.get($theme, selected-pressed-icon-color)\n    );\n  }\n\n  @include ripple-color(\n    $color: map.get($theme, unselected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, unselected-hover-state-layer-opacity),\n      focus: map.get($theme, unselected-focus-state-layer-opacity),\n      press: map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include focus-indicator-color(\n    $color: map.get($theme, selected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, selected-hover-state-layer-opacity),\n      focus: map.get($theme, selected-focus-state-layer-opacity),\n      press: map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target to ripple size.\n  @include touch-target(\n    map.get($theme, state-layer-size),\n    map.get($theme, state-layer-size)\n  );\n}\n\n$light-theme-deprecated: (\n  density-scale: 0,\n  checkmark-color: $mark-color,\n  container-checked-color: $baseline-theme-color,\n  container-checked-hover-color: null,\n  container-disabled-color: $disabled-color,\n  outline-color: $border-color,\n  outline-hover-color: null,\n  ripple-color: theme-color.$on-surface,\n  ripple-opacity: ripple-theme.$dark-ink-opacities,\n  ripple-checked-color: $baseline-theme-color,\n  ripple-checked-opacity: ripple-theme.$dark-ink-opacities,\n);\n\n/// Sets theme to checkbox based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use for theming checkbox.\n@mixin theme-deprecated($theme, $query: feature-targeting.all()) {\n  @include theme.validate-theme($light-theme-deprecated, $theme);\n\n  $ripple-color: map.get($theme, ripple-color);\n  $ripple-opacity: map.get($theme, ripple-opacity);\n  @if $ripple-opacity == null {\n    $ripple-opacity: ();\n  }\n  @if $ripple-color {\n    @include ripple-color(\n      $color: $ripple-color,\n      $opacity-map: $ripple-opacity,\n      $query: $query\n    );\n  }\n\n  $ripple-checked-color: map.get($theme, ripple-checked-color);\n  $ripple-checked-opacity: map.get($theme, ripple-checked-opacity);\n  @if $ripple-checked-opacity == null {\n    $ripple-checked-opacity: ();\n  }\n  @if $ripple-checked-color {\n    @include focus-indicator-color(\n      $color: $ripple-checked-color,\n      $opacity-map: $ripple-checked-opacity,\n      $query: $query\n    );\n  }\n\n  $density-scale: map.get($theme, density-scale);\n  @if $density-scale != null {\n    @include density($density-scale: $density-scale, $query: $query);\n  }\n\n  $outline-color: map.get($theme, outline-color);\n  $container-checked-color: map.get($theme, container-checked-color);\n  @if (\n    ($outline-color and not $container-checked-color) or\n      (not $outline-color and $container-checked-color)\n  ) {\n    @error 'Both `outline-color` and `container-checked-color` keys should be provided.';\n  }\n  @if ($outline-color and $container-checked-color) {\n    @include container-colors(\n      $unmarked-stroke-color: $outline-color,\n      $marked-stroke-color: $container-checked-color,\n      $marked-fill-color: $container-checked-color,\n      $query: $query\n    );\n  }\n\n  $outline-hover-color: map.get($theme, outline-hover-color);\n  $container-checked-hover-color: map.get(\n    $theme,\n    container-checked-hover-color\n  );\n  @if (\n    ($outline-hover-color and not $container-checked-hover-color) or\n      (not $outline-hover-color and $container-checked-hover-color)\n  ) {\n    @error 'Both `outline-hover-color` and `container-checked-hover-color` keys should be provided.';\n  }\n  @if ($outline-hover-color and $container-checked-hover-color) {\n    @include ripple-theme.states-selector() {\n      @include container-colors(\n        $unmarked-stroke-color: $outline-hover-color,\n        $marked-stroke-color: $container-checked-hover-color,\n        $marked-fill-color: $container-checked-hover-color,\n        $query: $query\n      );\n    }\n  }\n\n  $container-disabled-color: map.get($theme, container-disabled-color);\n  @if $container-disabled-color {\n    @include disabled-container-colors(\n      $unmarked-stroke-color: $container-disabled-color,\n      $marked-fill-color: $container-disabled-color,\n      $query: $query\n    );\n  }\n\n  $checkmark-color: map.get($theme, checkmark-color);\n  @if $checkmark-color {\n    @include ink-color($checkmark-color, $query: $query);\n    @include disabled-ink-color($checkmark-color, $query: $query);\n  }\n}\n\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values `-3`, `-2`, `-1`, `0`.\n/// @return Returns ripple size of checkbox for given density scale.\n///\n@function get-ripple-size($density-scale) {\n  @return density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size\n  );\n}\n\n///\n/// Sets density scale for checkbox.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: get-ripple-size($density-scale);\n\n  @include ripple-size($size, $query: $query);\n  @include touch-target($size, $ripple-size: $size, $query: $query);\n}\n\n/// Sets ripple size of checkbox and optionally set touch target size which can\n/// be more than the size of ripple.\n/// @param {Number} $ripple-size - Visual ripple size of checkbox.\n@mixin ripple-size($ripple-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $ripple-size and not custom-properties.is-custom-prop($ripple-size) {\n    $ripple-size: custom-properties.create(\n      checkbox-custom-properties.$ripple-size,\n      $ripple-size\n    );\n  }\n  $checkbox-padding: 'calc((_ripple-size - _icon-size) / 2)';\n  $replace: (\n    _ripple-size: $ripple-size,\n    _icon-size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(padding, $checkbox-padding, $replace: $replace);\n  }\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(top, $checkbox-padding, $replace: $replace);\n      @include theme.property(left, $checkbox-padding, $replace: $replace);\n    }\n  }\n}\n\n/// Sets the touch target size and appropriate margin to accommodate the\n/// touch target.\n/// @param {Number} $touch-target-size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`.\n@mixin touch-target(\n  $touch-target-size,\n  $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $touch-target-size {\n    @if not custom-properties.is-custom-prop($touch-target-size) {\n      $touch-target-size: custom-properties.create(\n        checkbox-custom-properties.$touch-target-size,\n        $touch-target-size\n      );\n    }\n\n    $margin: 'calc((_touch-target-size - _ripple-size) / 2)';\n    $replace: (\n      _touch-target-size: $touch-target-size,\n      _ripple-size: $ripple-size,\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(margin, $margin, $replace: $replace);\n    }\n\n    $offset: 'calc((_ripple-size - _touch-target-size) / 2)';\n\n    @include feature-targeting.targets($feat-structure) {\n      .mdc-checkbox__native-control {\n        @include theme.property(top, $offset, $replace: $replace);\n        @include theme.property(right, $offset, $replace: $replace);\n        @include theme.property(left, $offset, $replace: $replace);\n        @include theme.property(width, $touch-target-size);\n        @include theme.property(height, $touch-target-size);\n      }\n    }\n  }\n}\n\n@mixin _icon-color($unselected-color, $selected-color) {\n  @if $unselected-color and $selected-color {\n    @include container-colors(\n      $unmarked-stroke-color: $unselected-color,\n      $marked-stroke-color: $selected-color,\n      $marked-fill-color: $selected-color\n    );\n  } @else if $unselected-color or $selected-color {\n    @error 'Both unselected and selected icon colors should be provided.';\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of enabled checkbox.\n/// Set $generate-keyframes to false to prevent the mixin from generating @keyframes\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n/// @param {Boolean} $generate-keyframes [true] - Whether animation keyframes should be generated\n///\n@mixin container-colors(\n  $unmarked-stroke-color: $border-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: $baseline-theme-color,\n  $marked-fill-color: $baseline-theme-color,\n  $generate-keyframes: true,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Unchecked colors\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$unchecked-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-enabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  // Checked colors\n  @if (\n    $marked-stroke-color and not\n      custom-properties.is-custom-prop($marked-stroke-color)\n  ) {\n    $marked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-stroke-color)\n      )\n    );\n  }\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-fill-color)\n      )\n    );\n  }\n\n  @include if-marked-enabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if $generate-keyframes and\n    $unmarked-stroke-color and\n    $marked-stroke-color and\n    $unmarked-fill-color and\n    $marked-fill-color\n  {\n    $uid: theme-color.color-hash($unmarked-stroke-color) +\n      theme-color.color-hash($marked-stroke-color) +\n      theme-color.color-hash($unmarked-fill-color) +\n      theme-color.color-hash($marked-fill-color);\n\n    $anim-selector: if(&, '&.mdc-checkbox--anim', '.mdc-checkbox--anim');\n\n    @include feature-targeting.targets($feat-animation, $feat-color) {\n      @include container-keyframes_(\n        $from-stroke-color: $unmarked-stroke-color,\n        $to-stroke-color: $marked-stroke-color,\n        $from-fill-color: $unmarked-fill-color,\n        $to-fill-color: $marked-fill-color,\n        $uid: #{$uid}\n      );\n    }\n\n    // stylelint-disable max-nesting-depth\n\n    #{$anim-selector} {\n      &-unchecked-checked,\n      &-unchecked-indeterminate {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-in-background-#{$uid};\n          }\n        }\n      }\n\n      &-checked-unchecked,\n      &-indeterminate-unchecked {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-out-background-#{$uid};\n          }\n        }\n      }\n    }\n\n    // stylelint-enable max-nesting-depth\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of disabled checkbox.\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n///\n@mixin disabled-container-colors(\n  $unmarked-stroke-color: $disabled-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: transparent,\n  $marked-fill-color: $disabled-color,\n  $query: feature-targeting.all()\n) {\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-disabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($marked-fill-color)\n    );\n  }\n\n  @include if-marked-disabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for an enabled checkbox\n/// @param {Color} $color - The desired ink color in enabled state\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a disabled checkbox\n/// @param {Color} $color - The desired ink color in disabled state\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n/// Sets ripple color when checkbox is not in checked state.\n@mixin ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n/// Sets focus indicator color when checkbox is in checked state.\n@mixin focus-indicator-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-checkbox--selected {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n\n  &.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected {\n    @include ripple-theme.states-base-color(\n      $color: $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n//\n// Private\n//\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// enabled state.\n/// @access private\n///\n@mixin if-enabled_ {\n  .mdc-checkbox__native-control:enabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  .mdc-checkbox__native-control:disabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & enabled state.\n/// @access private\n///\n@mixin if-unmarked-enabled_ {\n  .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & disabled state.\n/// @access private\n///\n@mixin if-unmarked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & enabled state.\n/// @access private\n///\n@mixin if-marked-enabled_ {\n  .mdc-checkbox__native-control:enabled:checked,\n  .mdc-checkbox__native-control:enabled:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true']:enabled {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & disabled state.\n/// @access private\n///\n@mixin if-marked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:checked,\n  .mdc-checkbox__native-control[disabled]:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true'][disabled] {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the stroke & fill colors for the checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked-enabled_`.\n/// @access private\n///\n@mixin container-colors_(\n  $stroke-color,\n  $fill-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $stroke-color);\n      @include theme.property(background-color, $fill-color);\n    }\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(border-color, $color);\n      }\n    }\n  }\n}\n\n@mixin container-keyframes_(\n  $from-stroke-color,\n  $to-stroke-color,\n  $from-fill-color,\n  $to-fill-color,\n  $uid\n) {\n  @keyframes mdc-checkbox-fade-in-background-#{$uid} {\n    0% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n\n    50% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n  }\n\n  @keyframes mdc-checkbox-fade-out-background-#{$uid} {\n    0%,\n    80% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n\n    100% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n  }\n}\n","/* START :: TAILWIND CSS */\r\n\r\n@import '../../tailwind-output/widget.forms.file_input.scss';\r\n\r\n/* END :: TAILWIND CSS */","file-input>.form-input{--tw-border-opacity:1!important;border-color:rgba(156,163,175,var(--tw-border-opacity))!important;border-radius:.375rem!important;border-width:1px!important;min-height:.75rem!important;padding-bottom:.75rem!important;padding-left:.75rem!important;padding-top:.75rem!important;width:100%!important}"],"names":[],"sourceRoot":""}