{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/attendance/setup-form/edit-date.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/date/delete.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/date/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/date/post_multiple.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/date/put_multiple.ts","webpack://webpackNumbers/./src/addons/widgets/add_remove_widget/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/switch.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/edit/date/index.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/forms/date.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_AttendanceDeleteScheduleDate(meetingEventId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/date/' + meetingEventId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Date?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceScheduleDate<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/date'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_AttendanceAddScheduleDateMultiple(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/date/multiple',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-schedule-date\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Setup Date?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        // try {\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSES = networkCallRes.multipleResponse;\r\n        console.log({ _RESPONSES });\r\n        let errors: Array<{ error: string }> = [];\r\n        if (_RESPONSES !== null) {\r\n          _RESPONSES.forEach((_RESPONSE) => {\r\n            if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n              if (_RESPONSE.unknownError.length > 0) {\r\n                // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n                _RESPONSE.unknownError.forEach(e => {\r\n                  const _errors = e.errors;\r\n                  _errors.forEach(err => {\r\n                    errors.push({ error: err });\r\n                  });\r\n                });\r\n              }\r\n\r\n            }\r\n          });\r\n\r\n        }\r\n        if (errors.length > 0) {\r\n          const res = https_swal_error_format(errors);\r\n          return Swal.showValidationMessage(\r\n            `${res}`\r\n          );\r\n        }\r\n        return networkCallRes;\r\n        // } catch (error) {\r\n        //   console.error({ error });\r\n        //   let errorHttp = HTTP;\r\n        //   errorHttp['error'] = error;\r\n        //   const networkCallRes = new NetWorkCallResponses(\"post\", errorHttp, true, formContainer);\r\n        //   networkCallRes.postForm\r\n        //   return networkCallRes;\r\n        // }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: isSuccess? '#f97817': '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }): null;\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_AttendanceUpdateScheduleDateMultiple(meetingEventId: Number, ): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/date/multiple/' + meetingEventId,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-schedule-date\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Setup Date(s)?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        // try {\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSES = networkCallRes.multipleResponse;\r\n        console.log({ _RESPONSES });\r\n        let errors: Array<{ error: string }> = [];\r\n        if (_RESPONSES !== null) {\r\n          _RESPONSES.forEach((_RESPONSE) => {\r\n            if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n              if (_RESPONSE.unknownError.length > 0) {\r\n                // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n                _RESPONSE.unknownError.forEach(e => {\r\n                  const _errors = e.errors;\r\n                  _errors.forEach(err => {\r\n                    errors.push({ error: err });\r\n                  });\r\n                });\r\n              }\r\n\r\n            }\r\n          });\r\n\r\n        }\r\n        if (errors.length > 0) {\r\n          const res = https_swal_error_format(errors);\r\n          return Swal.showValidationMessage(\r\n            `${res}`\r\n          );\r\n        }\r\n        return networkCallRes;\r\n        // } catch (error) {\r\n        //   console.error({ error });\r\n        //   let errorHttp = HTTP;\r\n        //   errorHttp['error'] = error;\r\n        //   const networkCallRes = new NetWorkCallResponses(\"post\", errorHttp, true, formContainer);\r\n        //   networkCallRes.postForm\r\n        //   return networkCallRes;\r\n        // }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: isSuccess? '#f97817': '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }): null;\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { LitElement, html, nothing, TemplateResult, } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-list';\r\nimport '@material/mwc-dialog';\r\nimport '@material/mwc-textfield';\r\nimport { stringToHTML } from '@@addons/functions/stringToHTML';\r\n\r\n\r\n@customElement(\"multiple-widgets\")\r\nexport class MultipleWidgets extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public index?: number = 0;\r\n\r\n  // @property({ type: String })\r\n  // public widget?: string = '';\r\n\r\n  // @property({ type: Object })\r\n  // public widget?: TemplateResult<1> = html``;\r\n\r\n  private _widget: TemplateResult<1> = html``;\r\n\r\n  public set widget(value: TemplateResult<1>) {\r\n    this._widget = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get widget(): TemplateResult<1> {\r\n    return this._widget;\r\n  }\r\n\r\n  @property({ type: Boolean })\r\n  public no_delete?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public single?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public _single?: string = '[]';\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({ \"fetchTypes\": this.fetchTypes });\r\n    if (this.single) {\r\n      this._single = '';\r\n    } else {\r\n      this._single = '[]';\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"container\">\r\n        <header class=\"form-input-container\">\r\n          ${this.no_delete ? nothing : html`\r\n            <mwc-icon-button icon=\"delete_forever\" class=\"danger\"\r\n              @click=\"${this.deleteQuestion}\"></mwc-icon-button>`\r\n          }\r\n        </header>\r\n        <main>\r\n          ${this.widget}\r\n        </main>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private deleteQuestion(e: { preventDefault: () => void; }) {\r\n    e.preventDefault();\r\n\r\n    this.remove();\r\n  }\r\n\r\n  async firstUpdated() {}\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-switch';\r\n\r\n@customElement('switch-input')\r\nexport class SwitchInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public selected: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: Boolean })\r\n  public isSelected: boolean = this.selected;\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"w-full !py-4 px-2 !flex !justify-between border border-gray-400 rounded-md\">\r\n        <mwc-formfield class=\"w-full text-gray-400\" label=\"${this.label}\" alignEnd spaceBetween>\r\n          ${this.switch}\r\n          <input type=\"hidden\" name=\"${this.name}\" id=\"${this.name}\" value=\"${this.selected? 'on': 'off'}\" />\r\n        </mwc-formfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get switch() {\r\n    if (this.selected) {\r\n      return html`\r\n        <mwc-switch selected name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-switch name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private switchAction(switchActionEvent: { target: { selected: boolean; value: string; }; }) {\r\n    // console.log({switchActionEvent});\r\n    this.isSelected = switchActionEvent.target.selected;\r\n    // console.log({\"this.isSelected\": this.isSelected});\r\n    this.querySelectorAll('[name=\"' + this.name + '\"]').forEach((input: HTMLInputElement) => {\r\n      input.value = this.isSelected? \"on\": \"off\";\r\n    })\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport { ACTIVE_PAGE__ } from \"@@addons/functions/active_page\";\r\nimport { tokenLogin } from \"@@addons/functions/login/main\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '../../forms/date';\r\nimport '../links';\r\n\r\n@customElement(\"attendance-setup-form-edit-date\")\r\nexport class AttendanceSetupFormEditDate extends LitElement {\r\n  constructor() {\r\n    super();\r\n    ACTIVE_PAGE__();\r\n  }\r\n\r\n  //  @query(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  //  @queryAll(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  @property({ type: String })\r\n  public email?: string;\r\n\r\n  @property({ type: Number })\r\n  public mId?: number;\r\n\r\n  @property({ type: Number })\r\n  public clientId?: number;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    await tokenLogin(this.email, this.mId, \"client_tokenLogin\");\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    return html`\r\n      <attendance-setup-form-edit-links></attendance-setup-form-edit-links>\r\n      <attendance-setup-form-date CLIENT_ID=\"${this.clientId}\"></attendance-setup-form-date>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n","import '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textarea';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/add_remove_widget';\r\n// import '@material/mwc-dialog';\r\nimport { MDCDataTable } from '@material/data-table';\r\nimport { GET_AttendanceScheduleDate } from '@@addons/network/attendance/setup/date';\r\nimport { GET_AttendanceSchedule } from '@@addons/network/attendance/setup/schedule';\r\nimport { urlQueryParams, urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { MeetingEventSchedule_I } from '@@addons/interfaces/attendance/meeting_event/schedules';\r\nimport { MeetingEventScheduleDate_I } from '@@addons/interfaces/attendance/meeting_event/dates';\r\nimport { NetworkCallPaginResponse_I, NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { POST_AttendanceAddScheduleDateMultiple } from '@@addons/network/attendance/setup/date/post_multiple';\r\nimport { PUT_AttendanceUpdateScheduleDateMultiple } from '@@addons/network/attendance/setup/date/put_multiple';\r\nimport { DELETE_AttendanceDeleteScheduleDate } from '@@addons/network/attendance/setup/date/delete';\r\n\r\n\r\n@customElement(\"attendance-setup-form-date\")\r\nexport class AttendanceSetupFormDate extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  //  @query(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  //  @queryAll(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  @property({ type: Number })\r\n  public CLIENT_ID: number = 0;\r\n\r\n  private __schedule: NetworkCallResponse_I<MeetingEventSchedule_I> = null;\r\n\r\n  public set _schedule(value: NetworkCallResponse_I<MeetingEventSchedule_I>) {\r\n    this.__schedule = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _schedule(): NetworkCallResponse_I<MeetingEventSchedule_I> {\r\n    return this.__schedule;\r\n  }\r\n\r\n  // @property({ type: Object })\r\n  // private _schedule: NetworkCallResponse_I<MeetingEventSchedule_I> = null;\r\n\r\n  private __scheduleDates: NetworkCallPaginResponse_I<MeetingEventScheduleDate_I> = null;\r\n\r\n  public set _scheduleDates(value: NetworkCallPaginResponse_I<MeetingEventScheduleDate_I>) {\r\n    this.__scheduleDates = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _scheduleDates(): NetworkCallPaginResponse_I<MeetingEventScheduleDate_I> {\r\n    return this.__scheduleDates;\r\n  }\r\n\r\n  // @property({ type: Object })\r\n  // private _scheduleDates: NetworkCallPaginResponse_I<MeetingEventScheduleDate_I> = null;\r\n\r\n  @property({ type: Array })\r\n  public _data?: Array<string> = [];\r\n\r\n  @property({ type: Object })\r\n  private urlQueryParams?: { [k: string]: string; } = undefined;\r\n\r\n  @property({ type: Number })\r\n  private meetingEventId?: number = 0;\r\n\r\n  @query('[show-dateField=\"all\"]')\r\n  private showDateFieldAllSelector: Element;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    this.urlQueryParams = urlQueryParams();\r\n    this.getMeetingEventId();\r\n\r\n    await this.getAttendanceSchedule();\r\n    await this.getAttendanceScheduleDate();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`${this.schedule}`;\r\n  }\r\n\r\n  private get schedule() {\r\n    // console.log({ \"this._schedule\": this._schedule });\r\n    if (this._schedule === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else if (this._schedule === undefined) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Meeting/Event</span>: undefined error</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else if (this._schedule.success === true) {\r\n      return html`${this.scheduleDate}`;\r\n    } else {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h2 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Meeting/Event</span>: ${this._schedule.message}</h2>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get scheduleDate() {\r\n    // console.log({ \"this._scheduleDates\": this._scheduleDates });\r\n\r\n    if (this._scheduleDates === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else if (this._scheduleDates === undefined) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Meeting/Event Date</span>: undefined error</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.form}<hr/>${this.display}\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get display() {\r\n    return html`${this.table}`;\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    if (this._scheduleDates.results.length > 0) {\r\n      return html`\r\n        <div class=\"mdc-data-table w-full\" mdc-data-table=\"data-table\">\r\n          <div class=\"mdc-data-table__table-container\">\r\n            <table class=\"mdc-data-table__table\" aria-label=\"New Meeting/ Event Date\">\r\n              <thead>\r\n                <tr class=\"mdc-data-table__header-row\">\r\n                  <th class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        Meeting/ Event Date\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                  <th class=\"mdc-data-table__header-cell !text-right\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <mwc-icon>tune</mwc-icon>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"mdc-data-table__content\">\r\n                ${this.getMeetingAttendanceDates}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <div class=\"flex justify-center\">\r\n          <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get getMeetingAttendanceDates() {\r\n    // this.dialog(item)\r\n    return html`\r\n      ${this._scheduleDates.results.map((item) => {\r\n        return html`\r\n          <tr class=\"mdc-data-table__row\">\r\n            <th class=\"mdc-data-table__cell whitespace-pre-line\" scope=\"row\">\r\n              ${item.date}\r\n            </th>\r\n            <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n              <mwc-icon-button class=\"ml-1 danger\" icon=\"delete_forever\" delete-this-item=\"${item.id}\" @click=\"${this.deleteQuestionnaireMeetingAttendanceDate}\"></mwc-icon-button>\r\n            </td>\r\n          </tr>\r\n        `;\r\n      })}\r\n    `;\r\n  }\r\n\r\n  // private dialog(item: any) {\r\n  //   return html`\r\n  //     <mwc-icon-button open-dialog-btn=\"${item.id}\" class=\"warning\" icon=\"edit\" @click=\"${this.showDialog}\"></mwc-icon-button>\r\n  //     <mwc-dialog open-this-dialog=\"${item.id}\" >\r\n  //       <!-- <p>This dialog can validate user input before closing.</p> -->\r\n  //       <div class=\"form-container\">\r\n  //         <header class=\"header warning\">\r\n  //           <label for=\"\" class=\"label\">\r\n  //             <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n  //             <h1 class=\"h1\">Edit Meeting/ Event Date</h1>\r\n  //             <h3 class=\"h3\">Make Changes to Meeting/ Event Date!</h3>\r\n  //           </label>\r\n  //         </header>\r\n  //         <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"edit-questionnaire-age-bracket-${item.id}\">\r\n  //           <div class=\"form-input-container\">\r\n  //             <mwc-textfield text-area-dialog=\"${item.id}\" name=\"name\" label=\"New Meeting/ Event Date\" value=\"${item.name}\" outlined type=\"text\" required>\r\n  //             </mwc-textfield>\r\n  //           </div>\r\n  //           <div class=\"form-input-container\">\r\n  //             <mwc-button\r\n  //               confirm-this-dialog=\"${item.id}\"\r\n  //               slot=\"primaryAction\">\r\n  //               Update Meeting/ Event Date\r\n  //             </mwc-button>\r\n  //           </div>\r\n  //         </form>\r\n  //       </div>\r\n  //       <mwc-button\r\n  //         slot=\"secondaryAction\"\r\n  //         dialogAction=\"close\">\r\n  //         Cancel\r\n  //       </mwc-button>\r\n  //     </mwc-dialog>\r\n  //   `;\r\n  // }\r\n\r\n  // private showDialog(event: { preventDefault: () => void; currentTarget: { getAttribute: (arg0: string) => number; }; }) {\r\n  //   event.preventDefault();\r\n\r\n  //   const dialogId: number = (event.currentTarget.getAttribute('open-dialog-btn'));\r\n  //   const dialog = this.querySelector('[open-this-dialog=\"' + dialogId + '\"]');\r\n  //   dialog.setAttribute('open', \"true\");\r\n\r\n  //   const textField = this.querySelector('[text-area-dialog=\"' + dialogId + '\"]');\r\n  //   const primaryButton = this.querySelector('[confirm-this-dialog=\"' + dialogId + '\"]');\r\n\r\n  //   primaryButton.addEventListener('click', async (e:PointerEvent) => {\r\n  //     // validate, possible asynchronous such as a server response\r\n  //     // console.log({e});\r\n      \r\n  //     // @ts-ignore\r\n  //     const isValid = textField.checkValidity();\r\n  //     if (isValid) {\r\n  //       // await this.submitEditForm(e)\r\n  //       // dialog.removeAttribute('open');\r\n  //       return;\r\n  //     }\r\n  //     // @ts-ignore\r\n  //     textField.reportValidity();\r\n  //   });\r\n  // }\r\n\r\n  private get form() {\r\n    return html`\r\n      <div class=\"form-container\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">New Meeting/ Event Scheduled Date</h1>\r\n                  <h3 class=\"h3\">Create New Meeting/ Event Scheduled Date!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"add-schedule-date\">\r\n                <div class=\"container\">\r\n                  <div class=\"row justify-content-center\" show-dateField=\"all\">\r\n                    ${this.dateFieldDefault(1)}\r\n                  </div>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${this.CLIENT_ID}\"/>\r\n                    <input type=\"hidden\" name=\"meetingEventId\" id=\"meetingEventId\" value=\"${this.meetingEventId}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-icon-button icon=\"library_add\" class=\"success -mt-1 mr-2\" @click=\"${this.addDateField}\">\r\n                      </mwc-icon-button>\r\n                      <mwc-button label=\"Set Date\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get dateField() {\r\n    return html`\r\n      <h4 class=\"font-semibold my-2\">Select Date</h4> \r\n      <mwc-textfield name=\"date[]\" multiple type=\"date\" class=\"w-full\" id=\"date\"\r\n        label=\"Select Date\" outlined required>\r\n      </mwc-textfield>\r\n    `;\r\n  }\r\n\r\n  private dateFieldDefault(number: number) {\r\n    return html`\r\n      <multiple-widgets class=\"col-md-6 col-lg-4 mb-3\" .widget=${this.dateField}\r\n        dateField-id=\"${number}\"></multiple-widgets>\r\n    `;\r\n  }\r\n\r\n  private addDateField() {\r\n    const count = this.showDateFieldAllSelector.children.length,\r\n      // @ts-ignore\r\n      lastIndex = count === 0 ? -1 : Number(this.showDateFieldAllSelector.children[count - 1].index),\r\n      newIndex = lastIndex + 1,\r\n      question = document.createElement('multiple-widgets');\r\n      question.setAttribute('class', \"col-md-6 col-lg-4 mb-3\");\r\n      question.setAttribute('dateField-id', String(newIndex));\r\n      this.showDateFieldAllSelector.append(question);\r\n      const elements = this.showDateFieldAllSelector.querySelectorAll('multiple-widgets[dateField-id=\"'+newIndex+'\"]')\r\n      console.log({ elements })\r\n      const newElem = this.dateField.strings.join('');\r\n      console.log({ newElem })\r\n      setTimeout(() => {\r\n        elements.forEach(element => {\r\n          console.log({ element })\r\n          const mainElements = element.querySelectorAll('main');\r\n          // console.log({ mainElements })\r\n          mainElements.forEach(main => {\r\n            // console.log({ main, newIndex })\r\n            main.innerHTML = newElem;\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.querySelectorAll('[mdc-data-table=\"data-table\"]').forEach((selector) => {\r\n      const dataTable = new MDCDataTable(selector);\r\n\r\n      console.log({ dataTable: dataTable })\r\n    });\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    if (this._scheduleDates.count > 0) {\r\n      await PUT_AttendanceUpdateScheduleDateMultiple(this.meetingEventId);\r\n    } else {\r\n      await POST_AttendanceAddScheduleDateMultiple();\r\n    }\r\n  }\r\n\r\n  async deleteQuestionnaireMeetingAttendanceDate(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    \r\n    // @ts-ignore\r\n    const meetingEventId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n    \r\n    await DELETE_AttendanceDeleteScheduleDate(meetingEventId);\r\n  }\r\n\r\n  private getMeetingEventId() {\r\n    let meetingEventId = urlQueryParamsGet('meeting-event-id');\r\n    let _meetingEventId = meetingEventId !== null ? Number(meetingEventId) : null;\r\n    this.meetingEventId = Number.isNaN(_meetingEventId) ? null : _meetingEventId;\r\n    // console.log({ \"this.urlQueryParams\": this.urlQueryParams, \"this.meetingEventId\": this.meetingEventId });\r\n  }\r\n\r\n  private async getAttendanceSchedule() {\r\n    const _networkResponse = await GET_AttendanceSchedule<MeetingEventSchedule_I>(this.meetingEventId);\r\n    if (_networkResponse === null) {\r\n      this._schedule = undefined;\r\n    } else {\r\n      this._schedule = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  private async getAttendanceScheduleDate() {\r\n    const _networkResponse = await GET_AttendanceScheduleDate<MeetingEventScheduleDate_I>(\r\n      null, \"?meetingEventId=\" + this.meetingEventId + \"&length=1000\"\r\n    );\r\n    console.log({ _networkResponse });\r\n    if (_networkResponse === null) {\r\n      this._scheduleDates = undefined;\r\n    } else {\r\n      this._scheduleDates = _networkResponse.paginResponse;\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","DELETE_AttendanceDeleteScheduleDate","meetingEventId","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","e","err","push","res","console","errorHttp","postForm","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","GET_AttendanceScheduleDate","ID","url_params","POST_AttendanceAddScheduleDateMultiple","formContainer","document","querySelector","FormData","_RESPONSES","multipleResponse","log","PUT_AttendanceUpdateScheduleDateMultiple","MultipleWidgets","LitElement","constructor","super","index","_widget","html","no_delete","single","_single","widget","this","requestUpdate","connectedCallback","disconnectedCallback","render","nothing","deleteQuestion","preventDefault","remove","firstUpdated","createRenderRoot","property","type","Number","Boolean","customElement","SwitchInput","name","label","selected","isSelected","switch","switchAction","switchActionEvent","target","querySelectorAll","input","styles","css","AttendanceSetupFormEditDate","ACTIVE_PAGE__","tokenLogin","email","mId","clientId","AttendanceSetupFormDate","CLIENT_ID","__schedule","__scheduleDates","_data","urlQueryParams","undefined","_schedule","_scheduleDates","getMeetingEventId","getAttendanceSchedule","getAttendanceScheduleDate","schedule","scheduleDate","form","display","table","results","getMeetingAttendanceDates","map","item","date","id","deleteQuestionnaireMeetingAttendanceDate","dateFieldDefault","addDateField","submitForm","dateField","number","count","showDateFieldAllSelector","children","newIndex","question","createElement","setAttribute","append","elements","newElem","strings","join","element","main","innerHTML","selector","dataTable","MDCDataTable","currentTarget","getAttribute","urlQueryParamsGet","_meetingEventId","isNaN","_networkResponse","GET_AttendanceSchedule","paginResponse","query","Element"],"sourceRoot":""}