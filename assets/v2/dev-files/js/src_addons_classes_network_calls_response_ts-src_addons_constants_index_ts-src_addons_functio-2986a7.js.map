{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/src_addons_classes_network_calls_response_ts-src_addons_constants_index_ts-src_addons_functio-2986a7.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/classes/network_calls/response.ts","webpack://webpackNumbers/./src/addons/constants/index.ts","webpack://webpackNumbers/./src/addons/constants/service_worker/messenger_types.ts","webpack://webpackNumbers/./src/addons/constants/settings.ts","webpack://webpackNumbers/./src/addons/constants/urls.ts","webpack://webpackNumbers/./src/addons/functions/cookies/index.ts","webpack://webpackNumbers/./src/addons/functions/form_data_to_object/index.ts","webpack://webpackNumbers/./src/addons/functions/https/http.ts","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/https/time_out.ts"],"sourcesContent":["import { set_cookies_minutes } from '@@addons/functions/cookies';\r\nimport { formDataToJson } from '@@addons/functions/form_data_to_object';\r\nimport { NetworkCallHttp_I } from '@@addons/interfaces/network_calls/http';\r\nimport {\r\n  NetworkCallDatatableResponse_I, NetworkCallError_I,\r\n  NetworkCallPaginResponse_I, NetworkCallPostResponse_I,\r\n  NetworkCallResponseMethod_I, NetworkCallResponse_I,\r\n} from '@@addons/interfaces/network_calls/response';\r\n\r\nexport class NetWorkCallResponses<Type> {\r\n  constructor(method: NetworkCallResponseMethod_I, httpResponse: NetworkCallHttp_I, error: boolean = false, postForm: HTMLFormElement = null) {\r\n    const response = httpResponse.jsonData,\r\n      rawResponse = httpResponse.response;\r\n    this.postForm = postForm;\r\n\r\n    if (httpResponse.response.ok) {\r\n      // @ts-ignore\r\n      const cookieName = String(window.supersecret.unknowable.ops.cookieName);\r\n      set_cookies_minutes(`${cookieName}_date`, new Date().toUTCString(), 10);\r\n    }\r\n    if (error) {\r\n      this.error(httpResponse.error);\r\n    } else {\r\n      if (method === \"get\") {\r\n        this.get(response, rawResponse);\r\n      } else if (method === \"post\") {\r\n        this.post(response, rawResponse);\r\n      } else if (method === \"post-file\") {\r\n        this.postFile(response, rawResponse);\r\n      } else if (method === \"put\") {\r\n        this.put(response, rawResponse);\r\n      } else if (method === \"patch\") {\r\n        this.patch(response, rawResponse);\r\n      } else if (method === \"delete\") {\r\n        this.delete(response, rawResponse);\r\n      }\r\n    }\r\n  }\r\n\r\n  public response: NetworkCallResponse_I<Type> | NetworkCallPostResponse_I = null;\r\n\r\n  public multipleResponse: Array<NetworkCallPostResponse_I> = null;\r\n\r\n  public paginResponse: NetworkCallPaginResponse_I<Type> = null;\r\n\r\n  public databaseResponse: NetworkCallDatatableResponse_I<Type> = null;\r\n\r\n  public postForm: HTMLFormElement = null;\r\n\r\n  private error(response: any | object) {\r\n    this.response = response;\r\n  }\r\n\r\n  private outputResponse(success: boolean, message: string | Array<any>,\r\n    data: Array<Type> | Type): NetworkCallResponse_I<Type> {\r\n    return { success: success, message: message, data: data };\r\n  }\r\n\r\n  private outputResponsePagin(output: any): NetworkCallPaginResponse_I<Type> {\r\n    return {\r\n      count: output.count, next: output.next, previous: output.previous,\r\n      results: output.results,\r\n    };\r\n  }\r\n\r\n  private outputResponseDatatable(output: any): NetworkCallDatatableResponse_I<Type> {\r\n    return {\r\n      data: output.data, datatable_plugin: output.datatable_plugin,\r\n      draw: output.draw, recordsFiltered: output.recordsFiltered,\r\n      recordsTotal: output.recordsTotal,\r\n    };\r\n  }\r\n\r\n  private outputErrorResponse(success: boolean, message: string | Array<NetworkCallError_I>,\r\n    nameError: Array<NetworkCallError_I>, unknownError: Array<NetworkCallError_I>, data: Array<any>): NetworkCallPostResponse_I {\r\n    return {\r\n      success: success, message: message, nameError: nameError,\r\n      unknownError: unknownError, data: data\r\n    };\r\n  }\r\n\r\n  private get(response: any | object, rawResponse: Response) {\r\n    let newResponse: NetworkCallResponse_I<Type>;\r\n    if (response.hasOwnProperty('success') && response.hasOwnProperty('message')\r\n      && response.hasOwnProperty('data')) {\r\n      newResponse = response;\r\n    } else if (response.hasOwnProperty('count') && response.hasOwnProperty('next')\r\n      && response.hasOwnProperty('previous') && response.hasOwnProperty('results')) {\r\n      this.paginResponse = this.outputResponsePagin(response);\r\n      return this.paginResponse;\r\n    } else if (response.hasOwnProperty('draw') && response.hasOwnProperty('recordsTotal')\r\n      && response.hasOwnProperty('recordsFiltered') && response.hasOwnProperty('data')) {\r\n      this.databaseResponse = this.outputResponseDatatable(response);\r\n      return this.databaseResponse;\r\n    } else if (response.hasOwnProperty('detail') && (rawResponse.status === 404)) {\r\n      newResponse = { data: [], message: response['detail'], success: false };\r\n    }\r\n\r\n    // console.log({ newResponse });\r\n\r\n\r\n    this.response = this.outputResponse(newResponse.success, newResponse.message, newResponse.data);\r\n  }\r\n  \r\n  postFile(response: any, rawResponse: Response) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  private post(response: any | object, rawResponse: Response) {\r\n\r\n    let newResponse: NetworkCallPostResponse_I;\r\n    if (response.hasOwnProperty('success') && response.hasOwnProperty('message')\r\n      && response.hasOwnProperty('data')) {\r\n      newResponse = response;\r\n    } else if (Array.isArray(response)) {\r\n      if (rawResponse.ok) {\r\n        const SUCCESS_RESPONSE_MESSAGE = response[0]['SUCCESS_RESPONSE_MESSAGE'];\r\n        response.map((_response) => {\r\n          delete _response['SUCCESS_RESPONSE_MESSAGE'];\r\n          return _response;\r\n        });\r\n\r\n        this.response = this.outputResponse(true, SUCCESS_RESPONSE_MESSAGE, response);\r\n      } else {\r\n        let newResponses: NetworkCallPostResponse_I[] = [];\r\n        response.forEach((_response) => {\r\n          newResponse = this.postError(_response);\r\n          const _newResponse = this.outputErrorResponse(\r\n            newResponse.success, newResponse.message, newResponse.nameError,\r\n            newResponse.unknownError, newResponse.data\r\n          );\r\n          if (!newResponses.includes(_newResponse)) {\r\n            newResponses.push(_newResponse);\r\n          }\r\n        });\r\n        this.multipleResponse = newResponses;\r\n      }\r\n    } else {\r\n      // console.log({\"rawResponse.ok\": rawResponse.ok});\r\n      if (rawResponse.ok) {\r\n        const SUCCESS_RESPONSE_MESSAGE = response['SUCCESS_RESPONSE_MESSAGE'];\r\n        delete response['SUCCESS_RESPONSE_MESSAGE'];\r\n\r\n        this.response = this.outputResponse(true, SUCCESS_RESPONSE_MESSAGE, response);\r\n      } else {\r\n        newResponse = this.postError(response);\r\n        this.response = this.outputErrorResponse(\r\n          newResponse.success, newResponse.message, newResponse.nameError,\r\n          newResponse.unknownError, newResponse.data\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private postError(response: any | object): NetworkCallPostResponse_I {\r\n    const errorFields = this.postErrorFields(response),\r\n      nameErrorFields = this.postNamedErrorFields(errorFields),\r\n      nonNameErrorFields = this.postNonNamedErrorFields(errorFields);\r\n\r\n    const postErrorInputs = this.postErrorInputs(nameErrorFields, nonNameErrorFields);\r\n    return {\r\n      success: false, message: errorFields, nameError: postErrorInputs.nameErrorFields,\r\n      unknownError: postErrorInputs.nonNameErrorFields, data: response\r\n    }\r\n  }\r\n\r\n  private postErrorFields(response: any | object) {\r\n    // console.log({response});\r\n\r\n    let errors: Array<NetworkCallError_I> = [];\r\n    for (const key in response) {\r\n      if (Object.prototype.hasOwnProperty.call(response, key)) {\r\n        const RES = response[key];\r\n        const error: NetworkCallError_I = {\r\n          id: key, errors: RES\r\n        };\r\n\r\n        if (!errors.includes(error)) {\r\n          errors.push(error);\r\n        }\r\n      }\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  private postNamedErrorFields(errorFields: NetworkCallError_I[]) {\r\n    let errors: Array<NetworkCallError_I> = [];\r\n\r\n    errorFields.forEach((error) => {\r\n      if (error.id !== \"non_field_errors\") {\r\n        if (!errors.includes(error)) {\r\n          errors.push(error);\r\n        }\r\n      }\r\n    });\r\n    return errors;\r\n  }\r\n\r\n  private postNonNamedErrorFields(errorFields: NetworkCallError_I[]) {\r\n    let errors: Array<NetworkCallError_I> = [];\r\n\r\n    errorFields.forEach((error) => {\r\n      if (error.id === \"non_field_errors\") {\r\n        if (!errors.includes(error)) {\r\n          errors.push(error);\r\n        }\r\n      }\r\n    });\r\n    return errors;\r\n  }\r\n\r\n  private validateInput(input: Element) {\r\n    // console.log({ input, });\r\n    // console.log({ \"input.hasOwnProperty('mdcFoundation')\": input.hasOwnProperty('mdcFoundation') });\r\n\r\n    if (input.hasOwnProperty('mdcFoundation')) {\r\n      // @ts-ignore\r\n      input.setCustomValidity(\"\");\r\n      // @ts-ignore\r\n      input.isUiValid = true;\r\n      // @ts-ignore\r\n      input.validityTransform = (newValue, nativeValidity) => {\r\n        // console.log({ newValue, nativeValidity, });\r\n        if (nativeValidity.valid) {\r\n          return {};\r\n        } else {\r\n          return {\r\n            valid: false,\r\n            customError: true,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private postErrorInputs(nameErrorFields: NetworkCallError_I[], nonNameErrorFields: NetworkCallError_I[]) {\r\n    // console.log({ \"this.postForm\": this.postForm });\r\n    // console.log({ \"this.postForm.elements\": this.postForm.elements });\r\n\r\n    const _formDataToJson = JSON.parse(formDataToJson(new FormData(this.postForm)));\r\n    // console.log({ _formDataToJson });\r\n    for (const key in _formDataToJson) {\r\n      let input: Element;\r\n      try {\r\n        input = document.querySelector('[name=' + key + ']');\r\n      } catch (error) {\r\n        input = document.querySelector('[id=' + key.replace('[]', '') + ']');\r\n      }\r\n      this.validateInput(input);\r\n      input.addEventListener('change', (event) => {\r\n        this.validateInput(input);\r\n      });\r\n    }\r\n\r\n\r\n    nameErrorFields.forEach((error) => {\r\n      const inputs = document.querySelectorAll('[id=\"' + error.id + '\"]');\r\n      // console.log({ error, inputs });\r\n\r\n      inputs.forEach((input) => {\r\n        if (input.hasOwnProperty('mdcFoundation')) {\r\n          try {\r\n            // console.log({ input, \"error.errors\": error.errors, });\r\n            // console.log({\"_____typeof error.errors_____\": Array.isArray(error.errors) });\r\n            const errorErrors = error.errors;\r\n            if (Array.isArray(errorErrors)) {\r\n              // @ts-ignore\r\n              input.setCustomValidity(errorErrors.join('\\n'));\r\n            } else {\r\n              let _errorErrors: Array<string> = [];\r\n              // @ts-ignore\r\n              for (const key in errorErrors) {\r\n                if (Object.prototype.hasOwnProperty.call(errorErrors, key)) {\r\n                  const element: Array<string> = errorErrors[key];\r\n                  // console.log({ element })\r\n                  element.forEach(elem => {\r\n                    _errorErrors.push(`Item ${key}: ${elem}`)\r\n                  });\r\n                }\r\n              }\r\n              // @ts-ignore\r\n              input.setCustomValidity(_errorErrors.join('\\n'));\r\n            }\r\n            // @ts-ignore\r\n            input.reportValidity();\r\n            // @ts-ignore\r\n            input.isUiValid = false;\r\n          } catch (error) {\r\n            \r\n          }\r\n          // if (input.hasOwnProperty('setCustomValidity')) {\r\n          //   console.log({ input, });\r\n          //   // @ts-ignore\r\n          //   input.setCustomValidity(error.errors.join('\\n'));\r\n          //   // @ts-ignore\r\n          //   input.reportValidity();\r\n          //   // @ts-ignore\r\n          //   input.isUiValid = false;\r\n          // }\r\n        } else {\r\n          if (!nonNameErrorFields.includes(error)) {\r\n            nonNameErrorFields.push(error);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    return { nameErrorFields, nonNameErrorFields }\r\n  }\r\n\r\n  private put(response: any | object, rawResponse: Response) {\r\n    this.response = response;\r\n  }\r\n\r\n  private patch(response: any | object, rawResponse: Response) {\r\n    this.response = response;\r\n  }\r\n\r\n  private delete(response: any | object, rawResponse: Response) {\r\n\r\n    let newResponse: NetworkCallResponse_I<string>;\r\n    if (response.hasOwnProperty('success') && response.hasOwnProperty('message')\r\n      && response.hasOwnProperty('data')) {\r\n      newResponse = response;\r\n    } else {\r\n      // console.log({\"rawResponse.ok\": rawResponse.ok});\r\n      if (rawResponse.ok) {\r\n        const SUCCESS_RESPONSE_MESSAGE = \"Deleted\";\r\n\r\n        this.response = this.outputResponse(true, SUCCESS_RESPONSE_MESSAGE, response);\r\n      } else if (response.hasOwnProperty('detail') && (rawResponse.status === 404)) {\r\n        newResponse = { data: [], message: response['detail'], success: false, };\r\n        this.response = this.outputResponse(newResponse.success, newResponse.message, []);\r\n      }\r\n    }\r\n  }\r\n}","import { SERVICE_WORKER_TYPES } from \"./service_worker/messenger_types\";\r\nimport { APP_SETTINGS } from \"./settings\";\r\nimport { URLS } from \"./urls\";\r\n\r\nexport const CONSTANTS = {\r\n  URLS,\r\n  APP_SETTINGS,\r\n  SERVICE_WORKER_TYPES,\r\n}\r\n// console.log({ CONSTANTS });\r\n// @ts-ignore\r\nwindow['CONSTANTS'] = CONSTANTS;\r\n","export const SERVICE_WORKER_TYPES = {\r\n  postAction: \"POST_ACTION\",\r\n  networkStatus: \"NETWORK_STATUS\",\r\n\r\n}\r\n","// console.log({ \"window.location.href\": window.location.href });\r\n\r\nconst PRODUCTION = false;\r\n// const PRODUCTION = true;\r\nlet _HOME_PAGE_BASE_URL: string;\r\n\r\nlet _isClientApp: boolean;\r\nif (window.location.href.includes(_HOME_PAGE_BASE_URL)) {\r\n  _isClientApp = true;\r\n} else {\r\n  _isClientApp = false;\r\n}\r\n\r\n// console.log({ _isClientApp });\r\n\r\nexport const APP_SETTINGS = {\r\n  production: PRODUCTION,\r\n  isClientApp: _isClientApp,\r\n}\r\n","import { APP_SETTINGS } from \"./settings\";\r\n\r\nlet _BASE_URL: string, _API_BASE_URL: string,\r\n  _AKWAABA_API_BASE_URL: string, _FILE_BUCKET_BASE_URL: string,\r\n  _HOME_PAGE_BASE_URL: string, _LOGIN_PAGE_BASE_URL: string,\r\n  _PUBLIC_BASE_URL: string, _PUBLIC_PAGE_BASE_URL: string,\r\n  _PUBLIC_LOGIN_PAGE_BASE_URL: string,\r\n  __clientIdentifier: string, _pdb_client: string;\r\n\r\nif (APP_SETTINGS.production) {\r\n  const BaseUrl = \"akwaabaapp.com/\";\r\n  _API_BASE_URL = \"https://api.akwaabaapp.com/\";\r\n  _AKWAABA_API_BASE_URL = \"https://api.\" + BaseUrl;\r\n\r\n  __clientIdentifier = \"akwaabaclients.\" + BaseUrl;\r\n  _BASE_URL = \"https://\" + __clientIdentifier;\r\n  _PUBLIC_BASE_URL = \"https://akwaabaapp.\" + BaseUrl;\r\n  _FILE_BUCKET_BASE_URL = \"https://file-bucket.plusdatabase.com/\";\r\n  _HOME_PAGE_BASE_URL = _BASE_URL + \"\";\r\n  _PUBLIC_PAGE_BASE_URL = _PUBLIC_BASE_URL + \"\";\r\n  _pdb_client = \"https://database.akwaabaapp.com/\";\r\n} else {\r\n  __clientIdentifier = \"akwaaba-forms/\";\r\n  // const IP_ADDRESS = '192.168.43.161';\r\n  const IP_ADDRESS = '192.168.173.1';\r\n  _BASE_URL = \"http://127.0.0.1:9001/\";\r\n  _API_BASE_URL = \"http://\" + IP_ADDRESS + \"/AMG/plus_db/api/\";\r\n  _AKWAABA_API_BASE_URL = _BASE_URL + \"api/\";\r\n  _pdb_client = \"http://\" + IP_ADDRESS + \"/AMG/plus_db/client_dashboard/\";\r\n\r\n  _FILE_BUCKET_BASE_URL = \"http://\" + IP_ADDRESS + \"/AMG/plus_db/file_bucket/\";\r\n  _HOME_PAGE_BASE_URL = _BASE_URL + __clientIdentifier;\r\n  _PUBLIC_PAGE_BASE_URL = _BASE_URL + \"akwaaba-forms-public/\";\r\n}\r\n\r\nexport const URLS = {\r\n  BASE_URL: _BASE_URL,\r\n  API_BASE_URL: _API_BASE_URL,\r\n  PDB_CLIENT: _pdb_client,\r\n  AKWAABA_API_BASE_URL: _AKWAABA_API_BASE_URL,\r\n  FILE_BUCKET_BASE_URL: _FILE_BUCKET_BASE_URL,\r\n  HOME_PAGE_BASE_URL: _HOME_PAGE_BASE_URL,\r\n  PUBLIC_PAGE_BASE_URL: _PUBLIC_PAGE_BASE_URL,\r\n  LOGIN_PAGE_BASE_URL: _LOGIN_PAGE_BASE_URL,\r\n  PUBLIC_LOGIN_PAGE_BASE_URL: _PUBLIC_LOGIN_PAGE_BASE_URL,\r\n  PUBLIC_BASE_URL: \"https://akwaabaapp.com/\",\r\n  CLICK_COM_BASE_URL: \"https://clickcomgh.com/\",\r\n  // SERVICE_WORKER: SERVICE_WORKER\r\n}\r\n","export function set_cookies($name: string, $value: string, $time = 1) {\r\n    let d = new Date();\r\n    d.setHours(d.getHours() + (3 * 1 * 1 * 1 * $time));\r\n    let expires = \"expires=\" + d.toUTCString();\r\n    // console.log(get_cookie($name))\r\n    if (get_cookie($name) != $value) {\r\n        document.cookie = $name + '=' + $value + \"; expires=\" + \"expires=\" + expires;\r\n    }\r\n}\r\n\r\nexport function set_cookies_minutes($name: string, $value: string, $time = 1) {\r\n    let d = new Date();\r\n    d.setMinutes(d.getMinutes() + ($time));\r\n    let expires = \"expires=\" + d.toUTCString();\r\n    // console.log(get_cookie($name))\r\n    if (get_cookie($name) != $value) {\r\n        document.cookie = $name + '=' + $value + \"; expires=\" + \"expires=\" + expires;\r\n    }\r\n}\r\n\r\nexport function get_cookie($name: string | any[]) {\r\n    $name = $name + \"=\";\r\n    let decode = decodeURIComponent(document.cookie);\r\n    let ca = decode.split(\";\");\r\n    // console.log({ \"decode\": decode, \"ca\": ca });\r\n    for (let i = 0; i < ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf($name) == 0) {\r\n            return c.substring($name.length, c.length);\r\n        }\r\n    }\r\n    return \"\";\r\n}","export const formDataToJson = (formData: FormData) => {\r\n  let object: object = {};\r\n  formData.forEach((value, key) => {\r\n    // Reflect.has in favor of: object.hasOwnProperty(key)\r\n    if (!Reflect.has(object, key)) {\r\n      // @ts-ignore\r\n      object[key] = value;\r\n      return;\r\n    }\r\n    // @ts-ignore\r\n    if (!Array.isArray(object[key])) {\r\n      // @ts-ignore\r\n      object[key] = [object[key]];\r\n    }\r\n    // @ts-ignore\r\n    object[key].push(value);\r\n  });\r\n  return JSON.stringify(object);\r\n}","import fetch from './time_out';\r\nimport { NetworkCallHttp_I } from '@@addons/interfaces/network_calls/http';\r\n\r\nexport async function http(input: RequestInfo, init?: RequestInit, jsonData: boolean = true) {\r\n  let rawResponse = null;\r\n  const status = (response: any) => {\r\n    rawResponse = response;\r\n    if (response.status >= 200 && response.status < 300) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.resolve(response);\r\n      // return Promise.reject(new Error(response))\r\n    }\r\n  }\r\n\r\n  const json = async (response: Response): Promise<NetworkCallHttp_I> => {\r\n    const _JSON = response.status === 204 ? {} : await response.json();\r\n    return { jsonData: _JSON, response, error: \"\" };\r\n  }\r\n  // console.log({init});\r\n\r\n  var _init: RequestInit = { method: \"GET\" };\r\n\r\n  init = (init === null) || (init === undefined) ? _init : init;\r\n\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Access-Control-Allow-Origin\", \"*/*\");\r\n  myHeaders.append(\"Accept\", \"application/json, text/plain, */*\");\r\n  // myHeaders.append(\"Authorization\", CONSTANTS.AUTHORIZATION.pdbApi);\r\n  // console.log({\"jsonData\": jsonData})\r\n  if (jsonData) {\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n  }\r\n\r\n  if (init.headers === undefined) {\r\n    init.headers = myHeaders;\r\n  } else {\r\n    for (const iterator of myHeaders.keys()) {\r\n      // @ts-ignore\r\n      init.headers[iterator] = myHeaders.get(iterator);\r\n    }\r\n    // for (const header in myHeaders) {\r\n    //   // @ts-ignore\r\n    //   init.headers[header] = myHeaders[header];\r\n    // }\r\n  }\r\n  init.mode = \"cors\";\r\n  init.redirect = 'follow';\r\n  // console.log({ init });\r\n\r\n  return await fetch(input, init, 300000)\r\n    .then(status)\r\n    .then(json)\r\n    .then(async (data) => {\r\n      // console.log({ data });\r\n      return data;\r\n    }).catch(function (error) {\r\n      console.error('Request failed', error);\r\n      throw error;\r\n    });\r\n}","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export default async function http(input: RequestInfo, init?: RequestInit, timeOut: number = 7000) {\r\n  return Promise.race([\r\n    fetch(input, init),\r\n    new Promise((_, reject) => {\r\n      setTimeout(() => reject(new Error('Connection timeout, check network for internet access')), timeOut)\r\n    })\r\n  ])\r\n}"],"names":["NetWorkCallResponses","constructor","method","httpResponse","error","postForm","response","multipleResponse","paginResponse","databaseResponse","jsonData","rawResponse","this","ok","cookieName","String","window","supersecret","unknowable","ops","set_cookies_minutes","Date","toUTCString","get","post","postFile","put","patch","delete","outputResponse","success","message","data","outputResponsePagin","output","count","next","previous","results","outputResponseDatatable","datatable_plugin","draw","recordsFiltered","recordsTotal","outputErrorResponse","nameError","unknownError","newResponse","hasOwnProperty","status","Error","Array","isArray","SUCCESS_RESPONSE_MESSAGE","map","_response","newResponses","forEach","postError","_newResponse","includes","push","errorFields","postErrorFields","nameErrorFields","postNamedErrorFields","nonNameErrorFields","postNonNamedErrorFields","postErrorInputs","errors","key","Object","prototype","call","id","validateInput","input","setCustomValidity","isUiValid","validityTransform","newValue","nativeValidity","valid","customError","_formDataToJson","JSON","parse","formDataToJson","FormData","document","querySelector","replace","addEventListener","event","querySelectorAll","errorErrors","join","_errorErrors","elem","reportValidity","CONSTANTS","URLS","APP_SETTINGS","SERVICE_WORKER_TYPES","postAction","networkStatus","_isClientApp","location","href","_HOME_PAGE_BASE_URL","production","isClientApp","_BASE_URL","_API_BASE_URL","_AKWAABA_API_BASE_URL","_FILE_BUCKET_BASE_URL","_PUBLIC_BASE_URL","_PUBLIC_PAGE_BASE_URL","__clientIdentifier","_pdb_client","BaseUrl","IP_ADDRESS","BASE_URL","API_BASE_URL","PDB_CLIENT","AKWAABA_API_BASE_URL","FILE_BUCKET_BASE_URL","HOME_PAGE_BASE_URL","PUBLIC_PAGE_BASE_URL","LOGIN_PAGE_BASE_URL","_LOGIN_PAGE_BASE_URL","PUBLIC_LOGIN_PAGE_BASE_URL","_PUBLIC_LOGIN_PAGE_BASE_URL","PUBLIC_BASE_URL","CLICK_COM_BASE_URL","set_cookies","$name","$value","$time","d","setHours","getHours","expires","get_cookie","cookie","setMinutes","getMinutes","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","formData","object","value","Reflect","has","stringify","http","init","myHeaders","Headers","append","undefined","headers","iterator","keys","mode","redirect","then","Promise","resolve","json","catch","console","__swalStyle","https_swal_error_format","addStyle","errorMsg","timeOut","race","fetch","_","reject","setTimeout"],"sourceRoot":""}