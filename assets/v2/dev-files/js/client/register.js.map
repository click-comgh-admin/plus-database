{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/client/register.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/network_status.ts","webpack://webpackNumbers/./src/addons/functions/toggle_pswd_visibility/index.ts","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/subscription/membership_size/index.ts","webpack://webpackNumbers/./src/addons/interfaces/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/interfaces/location/constituency_model/index.ts","webpack://webpackNumbers/./src/addons/interfaces/location/district_model/index.ts","webpack://webpackNumbers/./src/addons/interfaces/location/region_model/index.ts","webpack://webpackNumbers/./src/addons/network/clients/account_category/index.ts","webpack://webpackNumbers/./src/addons/network/clients/register/index.ts","webpack://webpackNumbers/./src/addons/network/clients/subscription/membership_size/index.ts","webpack://webpackNumbers/./src/addons/network/generic/gender/index.ts","webpack://webpackNumbers/./src/addons/network/location/constituency/filter.ts","webpack://webpackNumbers/./src/addons/network/location/country/index.ts","webpack://webpackNumbers/./src/addons/network/location/district/filter.ts","webpack://webpackNumbers/./src/addons/network/location/region/index.ts","webpack://webpackNumbers/./src/view/admin/client/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const GetNetworkStatus = (\r\n  online: (status: string) => void,\r\n  offline: (status: string) => void) => {\r\n  if (navigator.onLine === true) {\r\n    return online(\"online\");\r\n  } else {\r\n    return offline(\"offline\");\r\n  }\r\n}\r\n\r\nexport const GetNetworkStatusEvent = (self: { dispatchEvent: (arg0: CustomEvent<{ onlineStatus: boolean; }>) => void; }) => {\r\n  let newMessage = new CustomEvent('get-online-status', {\r\n    cancelable: true,\r\n    detail: { onlineStatus: navigator.onLine }\r\n  });\r\n\r\n  // dispatchEvent(newMessage);\r\n  self.dispatchEvent(newMessage);\r\n}","import '@material/mwc-icon-button';\r\nimport { TextField } from '@material/mwc-textfield';\r\n\r\nlet showingCheckBoxes: { id: string, showing: boolean, elem: HTMLInputElement | TextField, span: HTMLSpanElement }[] = [];\r\nconst labelTextShow = \"Show Password\", labelTextHide = \"Hide Password\";\r\n\r\nexport const togglePswdVisibility = (type: \"mwc-textfield\" | \"input\" = \"input\") => {\r\n  const PSWDs = document.querySelectorAll(type + '[type=\"password\"]');\r\n  // console.log({ PSWDs });\r\n\r\n  PSWDs.forEach((PSWD: HTMLInputElement | TextField, i) => {\r\n    // console.log({ PSWD });\r\n    const parentElement = PSWD.parentElement;\r\n    parentElement.setAttribute('style', parentElement.getAttribute('style') + \"; flex-direction: column !important;\")\r\n    const label = document.createElement('label');\r\n    label.setAttribute('style', label.getAttribute('style') + \"; display: inline-flex;\" +\r\n      \"width: 100%; cursor: pointer; align-items: center; margin-top: 10px; margin-bottom: 0;\"\r\n    );\r\n\r\n    const span = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n    span.innerText = labelTextShow;\r\n\r\n    const spanDummy = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n\r\n    const checkbox = document.createElement('input');\r\n    checkbox.type = \"checkbox\";\r\n    checkbox.id = \"pswd-visibility-btn--\" + i;\r\n    checkbox.setAttribute('style', checkbox.getAttribute('style') + \"; -moz-appearance: auto !important;\" +\r\n      \"-webkit-appearance: auto !important; -ms-appearance: auto !important; appearance: auto !important;\" +\r\n      \"opacity: 1; margin-right: 0; z-index: 10;\"\r\n    );\r\n\r\n    label.appendChild(spanDummy);\r\n    label.appendChild(checkbox);\r\n    label.appendChild(span);\r\n\r\n    PSWD.after(label);\r\n\r\n    const showingCheckBox = { id: checkbox.id, showing: false, elem: PSWD, span: span };\r\n    if (!showingCheckBoxes.includes(showingCheckBox)) {\r\n      showingCheckBoxes.push(showingCheckBox);\r\n    }\r\n    checkbox.addEventListener('change', __toggleVisibility)\r\n  });\r\n}\r\n\r\nconst __toggleVisibility = (e: { preventDefault: () => void; currentTarget: any; }) => {\r\n  e.preventDefault();\r\n  const checkbox: HTMLInputElement = e.currentTarget;\r\n  // console.log({ checkbox, e })\r\n  checkbox.checked\r\n  showingCheckBoxes.forEach(showingCheckBox => {\r\n    if (checkbox.id === showingCheckBox.id) {\r\n      if (showingCheckBox.showing === false) {\r\n        showingCheckBox.elem.type = \"text\";\r\n        showingCheckBox.span.innerText = labelTextHide;\r\n        showingCheckBox.showing = true;\r\n      } else {\r\n        showingCheckBox.elem.type = \"password\";\r\n        showingCheckBox.span.innerText = labelTextShow;\r\n        showingCheckBox.showing = false;\r\n      }\r\n      // console.log({ showingCheckBox, button });\r\n    }\r\n  });\r\n}","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","// To parse this data:\n//\n//   import { Convert, ClientSubscriptionMembershipSizeModel } from \"./file\";\n//\n//   const clientSubscriptionMembershipSizeModel = Convert.toClientSubscriptionMembershipSizeModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface ClientSubscriptionMembershipSizeModel {\n    id?:          number;\n    info?:        string;\n    cost?:        string;\n    type?:        number;\n    client?:      number;\n    accountType?: number;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toClientSubscriptionMembershipSizeModel(json: string): ClientSubscriptionMembershipSizeModel {\n        return cast(JSON.parse(json), r(\"ClientSubscriptionMembershipSizeModel\"));\n    }\n\n    public static clientSubscriptionMembershipSizeModelToJson(value: ClientSubscriptionMembershipSizeModel): string {\n        return JSON.stringify(uncast(value, r(\"ClientSubscriptionMembershipSizeModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"ClientSubscriptionMembershipSizeModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"info\", js: \"info\", typ: u(null, \"\") },\n        { json: \"cost\", js: \"cost\", typ: u(null, \"\") },\n        { json: \"type\", js: \"type\", typ: u(null, 0) },\n        { json: \"client\", js: \"client\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n    ], false),\n};\n","export interface GenericGenderInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericGenderInfo_S(data: any): GenericGenderInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericGenderInfo_S: GenericGenderInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericGenderInfo_S;\r\n}","// To parse this data:\n//\n//   import { Convert, LocationConstituencyModel } from \"./file\";\n//\n//   const locationConstituencyModel = Convert.toLocationConstituencyModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nimport { LocationDistrictModel, typeMap as ldmTypeMap } from \"../district_model\";\nimport { LocationRegionModel, typeMap as lrmTypeMap } from \"../region_model\";\n\nexport interface LocationConstituencyModel {\n  id: number;\n  regionId: LocationRegionModel;\n  districtId?: LocationDistrictModel;\n  location: string;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n  public static toLocationConstituencyModel(json: string): LocationConstituencyModel {\n    return cast(JSON.parse(json), r(\"LocationConstituencyModel\"));\n  }\n\n  public static locationConstituencyModelToJson(value: LocationConstituencyModel): string {\n    return JSON.stringify(uncast(value, r(\"LocationConstituencyModel\")), null, 2);\n  }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n  if (key) {\n    console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n  }\n  console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`,);\n}\n\nfunction jsonToJSProps(typ: any): any {\n  if (typ.jsonToJS === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n    typ.jsonToJS = map;\n  }\n  return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n  if (typ.jsToJSON === undefined) {\n    const map: any = {};\n    typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n    typ.jsToJSON = map;\n  }\n  return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n  function transformPrimitive(typ: string, val: any): any {\n    if (typeof typ === typeof val) return val;\n    return invalidValue(typ, val, key);\n  }\n\n  function transformUnion(typs: any[], val: any): any {\n    // val must validate against one typ in typs\n    const l = typs.length;\n    for (let i = 0; i < l; i++) {\n      const typ = typs[i];\n      try {\n        return transform(val, typ, getProps);\n      } catch (_) { }\n    }\n    return invalidValue(typs, val);\n  }\n\n  function transformEnum(cases: string[], val: any): any {\n    if (cases.indexOf(val) !== -1) return val;\n    return invalidValue(cases, val);\n  }\n\n  function transformArray(typ: any, val: any): any {\n    // val must be an array with no invalid elements\n    if (!Array.isArray(val)) return invalidValue(\"array\", val);\n    return val.map(el => transform(el, typ, getProps));\n  }\n\n  function transformDate(val: any): any {\n    if (val === null) {\n      return null;\n    }\n    const d = new Date(val);\n    if (isNaN(d.valueOf())) {\n      return invalidValue(\"Date\", val);\n    }\n    return d;\n  }\n\n  function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n    if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n      return invalidValue(\"object\", val);\n    }\n    const result: any = {};\n    Object.getOwnPropertyNames(props).forEach(key => {\n      const prop = props[key];\n      const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n      result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n    });\n    Object.getOwnPropertyNames(val).forEach(key => {\n      if (!Object.prototype.hasOwnProperty.call(props, key)) {\n        result[key] = transform(val[key], additional, getProps, key);\n      }\n    });\n    return result;\n  }\n\n  if (typ === \"any\") return val;\n  if (typ === null) {\n    if (val === null) return val;\n  }\n  if (typ === false) return;\n  while (typeof typ === \"object\" && typ.ref !== undefined) {\n    typ = typeMap[typ.ref];\n  }\n  if (Array.isArray(typ)) return transformEnum(typ, val);\n  if (typeof typ === \"object\") {\n    return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n      : typ.hasOwnProperty(\"arrayItems\") ? transformArray(typ.arrayItems, val)\n        : typ.hasOwnProperty(\"props\") ? transformObject(getProps(typ), typ.additional, val)\n          : invalidValue(typ, val);\n  }\n  // Numbers can be parsed by Date but shouldn't be.\n  if (typ === Date && typeof val !== \"number\") return transformDate(val);\n  return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n  return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n  return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n  return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n  return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n  return { props, additional };\n}\n\nfunction m(additional: any) {\n  // @ts-ignore\n  return { props: [], additional };\n}\n\nfunction r(name: string) {\n  return { ref: name };\n}\n\nexport const typeMap: any = {\n  \"LocationConstituencyModel\": o([\n    { json: \"id\", js: \"id\", typ: 0 },\n    { json: \"regionId\", js: \"regionId\", typ: r(\"LocationRegionModel\") },\n    { json: \"districtId\", js: \"districtId\", typ: r(\"LocationDistrictModel\") },\n    { json: \"location\", js: \"location\", typ: \"\" },\n  ], false),\n  \"LocationDistrictModel\": ldmTypeMap['LocationDistrictModel'],\n  \"LocationRegionModel\": lrmTypeMap['LocationRegionModel'],\n};\n","// To parse this data:\n//\n//   import { Convert, LocationDistrictModel } from \"./file\";\n//\n//   const locationDistrictModel = Convert.toLocationDistrictModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nimport { LocationRegionModel, typeMap as lrmTypeMap } from \"../region_model\";\n\nexport interface LocationDistrictModel {\n    id:       number;\n    regionId: LocationRegionModel;\n    location: string;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toLocationDistrictModel(json: string): LocationDistrictModel {\n        return cast(JSON.parse(json), r(\"LocationDistrictModel\"));\n    }\n\n    public static locationDistrictModelToJson(value: LocationDistrictModel): string {\n        return JSON.stringify(uncast(value, r(\"LocationDistrictModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"LocationDistrictModel\": o([\n        { json: \"id\", js: \"id\", typ: 0 },\n        { json: \"regionId\", js: \"regionId\", typ: r(\"LocationRegionModel\") },\n        { json: \"location\", js: \"location\", typ: \"\" },\n    ], false),\n    \"LocationRegionModel\": lrmTypeMap['LocationRegionModel'],\n};\n","// To parse this data:\n//\n//   import { Convert, LocationRegionModel } from \"./file\";\n//\n//   const locationRegionModel = Convert.toLocationRegionModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface LocationRegionModel {\n    id:       number;\n    location: string;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toLocationRegionModel(json: string): LocationRegionModel {\n        return cast(JSON.parse(json), r(\"LocationRegionModel\"));\n    }\n\n    public static locationRegionModelToJson(value: LocationRegionModel): string {\n        return JSON.stringify(uncast(value, r(\"LocationRegionModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"LocationRegionModel\": o([\n        { json: \"id\", js: \"id\", typ: 0 },\n        { json: \"location\", js: \"location\", typ: \"\" },\n    ], false),\n};\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientAccountCategory<Type>(ID: Number = null,\r\n  url_params: string = \"\", anonymousAuth: boolean = false,) {\r\n  // anonymousAuth is for when user isn't logged in\r\n  const _get_cookie = anonymousAuth ? null : getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/account-category'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: anonymousAuth ? {} : {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { GetNetworkStatus } from \"@@addons/functions/https/network_status\";\r\nimport { setUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { userLoginInfo_S } from \"@@addons/interfaces/network_calls/login\";\r\nimport { removeActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport async function POST_ClientRegister(): Promise<any> {\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/register',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-register\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  GetNetworkStatus(online => {\r\n    // console.log({ \"networkStatus\": online });\r\n    // console.log({ \"networkStatus\": \"we are online\" });\r\n    return Swal.fire({\r\n      title: 'Create Client Account?',\r\n      // text: \"You won't be able to revert this!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'Cancel',\r\n      confirmButtonColor: '#f97817',\r\n      cancelButtonColor: '#ddd',\r\n      reverseButtons: true,\r\n      showLoaderOnConfirm: true,\r\n      backdrop: true,\r\n      preConfirm: async (register) => {\r\n        return await http(url, {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }, false).then((HTTP) => {\r\n\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n          const _RESPONSE = networkCallRes.response;\r\n          console.log({\"_RESPONSE\": _RESPONSE});\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n\r\n                  errors.push(errormsg);\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        }).catch(error => {\r\n          Swal.showValidationMessage(\r\n            `${String(error)}`\r\n          );\r\n        });\r\n      },\r\n      allowOutsideClick: () => !Swal.isLoading()\r\n    }).then((result) => {\r\n      console.log({result})\r\n      if (result.isConfirmed) {\r\n        let successMsg = \"Success\",\r\n          isSuccess = false,\r\n          data: any;\r\n        const _VALUE = result.value;\r\n        if (_VALUE instanceof Object) {\r\n          const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n          successMsg = \"Registration Successful\";\r\n\r\n          data = VALUE.data;\r\n          isSuccess = _VALUE.response.success;\r\n        }\r\n        isSuccess ? Swal.fire({\r\n          title: successMsg,\r\n          icon: isSuccess ? 'success' : 'error',\r\n          iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n          confirmButtonColor: '#f97817',\r\n        }) : null;\r\n        isSuccess ? setTimeout(() => {\r\n          const userLoginInfo = userLoginInfo_S(data);\r\n          setUserLoginInfoCookie(userLoginInfo);\r\n          removeActiveBranchIdCookie();\r\n          window.location.href = CONSTANTS.URLS.LOGIN_PAGE_BASE_URL;\r\n        }, 500) : null;\r\n      }\r\n    });\r\n  }, offline => {\r\n    // console.log({ \"networkStatus\": \"we are offline\" });\r\n    Swal.fire({\r\n      title: \"Looks like you're offline\",\r\n      text: \"Try again later!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      confirmButtonColor: '#f97817',\r\n    });\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_ClientSubsciptionMembershipSize<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/subscription/membership-size'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericGender<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/gender'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_LocationConstituencyFilter<Type>(region: Number, district: Number) {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'locations/constituency/filter/ ' + region + ' /' + district,\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    }, true, true);\r\n  // console.log({\"HTTP\": HTTP})\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_LocationCountry<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'locations/country'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    }, true, true);\r\n  // console.log({\"HTTP\": HTTP})\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_LocationDistrictFilter<Type>(region: Number,) {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'locations/district/filter/ ' + region,\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    }, true, true);\r\n  // console.log({\"HTTP\": HTTP})\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_LocationRegion<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'locations/region'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {}\r\n    }, true, true);\r\n  // console.log({\"HTTP\": HTTP})\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { togglePswdVisibility } from '@@addons/functions/toggle_pswd_visibility';\r\nimport { POST_ClientRegister } from '@@addons/network/clients/register';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from \"@@addons/interfaces/generic/gender\";\r\nimport { GET_GenericGender } from \"@@addons/network/generic/gender\";\r\nimport { GET_ClientSubsciptionMembershipSize } from \"@@addons/network/clients/subscription/membership_size\";\r\nimport { ClientSubscriptionMembershipSizeModel, Convert as csmsmConvert } from \"@@addons/interfaces/clients/subscription/membership_size\";\r\nimport { LocationCountryModel, Convert as lcmConvert } from \"@@addons/interfaces/location/country_model\";\r\nimport { LocationRegionModel, Convert as lrmConvert } from \"@@addons/interfaces/location/region_model\";\r\nimport { LocationConstituencyModel, Convert as lcymConvert } from \"@@addons/interfaces/location/constituency_model\";\r\nimport { LocationDistrictModel, Convert as ldmConvert } from \"@@addons/interfaces/location/district_model\";\r\nimport { GET_LocationCountry } from \"@@addons/network/location/country\";\r\nimport { GET_LocationRegion } from \"@@addons/network/location/region\";\r\nimport { GET_LocationDistrictFilter } from \"@@addons/network/location/district/filter\";\r\nimport { GET_LocationConstituencyFilter } from \"@@addons/network/location/constituency/filter\";\r\nimport { ClientAccountCategoryModel, Convert as cacmConvert } from \"@@addons/interfaces/clients/account_category\";\r\nimport { GET_ClientAccountCategory } from \"@@addons/network/clients/account_category\";\r\n\r\n@customElement('pdb-register-form')\r\nexport class PdbRegisterForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  private showLeadersForm: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private regionCalled: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private selectedRegion: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedDistrict: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _countries: LocationCountryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _accountCategories: ClientAccountCategoryModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _regions: LocationRegionModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _districts: LocationDistrictModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _constituencies: LocationConstituencyModel[] = [];\r\n\r\n  @property({ type: Object })\r\n  private _constituenciesMemo: {[identity: string]: LocationConstituencyModel[]} = {};\r\n\r\n  @property({ type: Object })\r\n  private _districtsMemo:{[identity: string]: LocationDistrictModel[]} = {};\r\n\r\n\r\n  @property({ type: Array })\r\n  private _membershipSizes: ClientSubscriptionMembershipSizeModel[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    await this.getGenders();\r\n    await this.getLocationCountry();\r\n    await this.getClientAccountCategory();\r\n    await this.getClientSubscriptionMembershipSize();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n    :host { display: block; }\r\n    input[type=\"text\"], input[type=\"password\"], \r\n    input[type=\"email\"], input[type=\"phone\"], \r\n    select, span.select2.select2-container, \r\n    span.select2-selection.select2-selection--single.form-control.p-0, \r\n    textarea {\r\n      background: none!important;\r\n      padding: unset!important;\r\n    }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const countries: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._countries.map((country) => {\r\n      return {\r\n        id: country.id, name: country.name,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const regions: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._regions.map((region) => {\r\n      return {\r\n        id: region.id, name: region.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n    const districts: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._districts.map((district) => {\r\n      return {\r\n        id: district.id, name: district.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    const constituencies: {\r\n      id: number; name: string; isSelected: \"true\" | \"false\";\r\n      selected: boolean;\r\n    }[] = this._constituencies.map((constituency) => {\r\n      return {\r\n        id: constituency.id, name: constituency.location,\r\n        isSelected: \"false\", selected: false,\r\n      }\r\n    });\r\n\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">New Client Account</h1>\r\n                  <h3 class=\"h3\">Create New Client Account!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-register\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Organization Name</h4>\r\n                    <mwc-textfield name=\"name\" type=\"text\" class=\"w-full\" id=\"name\" value=\"\" label=\"Enter Organization Name\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Account Category</h4>\r\n                    <mwc-select name=\"accountCategory\" id=\"accountCategory\" label=\"Select Account Category\" outlined required>\r\n                      ${this._accountCategories.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.category}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_other_account_category>\r\n                    <h4 class=\"font-semibold my-2\">Enter Other Account Category</h4>\r\n                    <mwc-textfield name=\"accountCategoryOther\" type=\"text\" class=\"w-full\" id=\"accountCategoryOther\" value=\"\" label=\"Enter Other Account Category\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Membership Size</h4>\r\n                    <mwc-select name=\"membership_size\" id=\"membership_size\" label=\"Select Membership Size\" outlined required>\r\n                      ${this._membershipSizes.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.info}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Add Organization Logo <span class=\"text-yellow-600\">(optional)</span></h4>\r\n                    <file-input id=\"logo\" name=\"logo\" label=\"Add Organization Logo\" ></file-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Organization Website <span class=\"text-yellow-600\">(Optional)</span></h4>\r\n                    <mwc-textfield name=\"website\" type=\"url\" class=\"w-full\" id=\"website\" value=\"\" label=\"Enter Organization Website (Optional)\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Country</h4>\r\n                    <!--<mwc-select name=\"country\" id=\"country\" label=\"Select Country\" outlined required>\r\n                      ${this._countries.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select> -->\r\n                    <select-input name=\"country\" id=\"country\" label=\"Select Country\" .options=\"${countries}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_state_province>\r\n                    <h4 class=\"font-semibold my-2\">Enter State/ Province</h4>\r\n                    <mwc-textfield name=\"stateProvince\" type=\"text\" class=\"w-full\" id=\"stateProvince\" value=\"\" label=\"Enter State/ Province\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Region</h4>\r\n                    <select-input name=\"region\" id=\"region\" label=\"Select Region\" .options=\"${regions}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select District</h4>\r\n                    <select-input name=\"district\" id=\"district\" label=\"Select District\" .options=\"${districts}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Select Constituency</h4>\r\n                    <select-input name=\"constituency\" id=\"constituency\" label=\"Select Constituency\" .options=\"${constituencies}\"\r\n                      outlined required>\r\n                    </select-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6 hidden\" show_ghana_locations>\r\n                    <h4 class=\"font-semibold my-2\">Enter Community</h4>\r\n                    <mwc-textfield name=\"community\" type=\"text\" class=\"w-full\" id=\"community\" value=\"\" label=\"Enter Community\" outlined>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Applicant Info\")}\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Applicant Firstname</h4>\r\n                    <mwc-textfield name=\"firstname\" type=\"text\" class=\"w-full\" id=\"firstname\" value=\"\" label=\"Enter Applicant Firstname\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Applicant Surname</h4>\r\n                    <mwc-textfield name=\"surname\" type=\"text\" class=\"w-full\" id=\"surname\" value=\"\" label=\"Enter Applicant Surname\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Gender</h4>\r\n                    <mwc-select name=\"gender\" id=\"gender\" label=\"Select Gender\" outlined required>\r\n                      ${this._genders.map((item) => {\r\n                        // console.log({item});\r\n                        return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter E-mail Address</h4>\r\n                    <mwc-textfield name=\"email\" type=\"email\" class=\"w-full\" id=\"email\" value=\"\" label=\"Enter E-mail Address\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Phone Number</h4>\r\n                    <mwc-textfield name=\"phone\" type=\"tel\" class=\"w-full\" id=\"phone\" value=\"\" label=\"Enter Phone Number\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Leaders\")}\r\n                    <h4 class=\"font-semibold my-2\">Add Leaders?</h4> \r\n                    <switch-input name=\"addLeaders\" class=\"w-full\" id=\"addLeaders\" ?isSelected=\"${this.showLeadersForm}\" label=\"Add Leaders?\" outlined>\r\n                    </switch-input>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_1_name\" id=\"leader_1_name\" label=\"Leader 1 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 Contact</h4>\r\n                    <mwc-textfield name=\"leader_1_contact\" id=\"leader_1_contact\" label=\"Leader 1 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 1 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_1_email\" id=\"leader_1_email\" label=\"Leader 1 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_2_name\" id=\"leader_2_name\" label=\"Leader 2 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 Contact</h4>\r\n                    <mwc-textfield name=\"leader_2_contact\" id=\"leader_2_contact\" label=\"Leader 2 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 2 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_2_email\" id=\"leader_2_email\" label=\"Leader 2 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                    <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 Full Name</h4>\r\n                    <mwc-textfield name=\"leader_3_name\" id=\"leader_3_name\" label=\"Leader 3 Name\" outlined type=\"text\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 Contact</h4>\r\n                    <mwc-textfield name=\"leader_3_contact\" id=\"leader_3_contact\" label=\"Leader 3 Contact\" outlined type=\"tel\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-4 hidden\" show_leaders>\r\n                    <h4 class=\"font-semibold my-2\">Leader 3 E-mail</h4>\r\n                    <mwc-textfield name=\"leader_3_email\" id=\"leader_3_email\" label=\"Leader 3 E-mail\" outlined type=\"email\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n                    ${this.sectionSeparater(\"Set Password\")}\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Password</h4>\r\n                    <mwc-textfield name=\"password\" id=\"password\" label=\"Enter Password\" icon=\"lock\" outlined type=\"password\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Confirm Password</h4>\r\n                    <mwc-textfield name=\"confirm_password\" id=\"confirm_password\" label=\"Confirm Password\" icon=\"lock\" outlined type=\"password\" required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                </div>\r\n      \r\n                <div class=\"form-input-container\">\r\n                  <mwc-button label=\"Register\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                  </mwc-button>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    Lets go digital...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private sectionSeparater(text: string) {\r\n    return html`\r\n      <div class=\"col-md-12 col-lg-12 mt-6 mb-0\">\r\n        <div class=\"flex form-input-container items-center text-center\">\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md my-0\">\r\n          <label class=\"block font-bold text-sm text-gray-600 w-full my-0\">\r\n            ${text}\r\n          </label>\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md my-0\">\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private addLeadersAction() {\r\n    const _this = this; \r\n    document.querySelectorAll('[name=\"addLeaders\"]').forEach((_switch) => {\r\n      _switch.addEventListener(\"click\", (evt) => {\r\n        // @ts-ignore \r\n        _this.showLeadersForm = _switch.isSelected;\r\n        const show_leaders = this.querySelectorAll('[show_leaders]'),\r\n          show_hide_class = \"hidden\";\r\n        if (_this.showLeadersForm) {\r\n          show_leaders.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        } else {\r\n          show_leaders.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  firstUpdated() {\r\n    togglePswdVisibility();\r\n    togglePswdVisibility(\"mwc-textfield\");\r\n    document.onreadystatechange = (event)=> {\r\n      // console.log({ \"document.readyState\": document.readyState })\r\n      if (document.readyState == \"complete\") this.countryChanged(event);\r\n      if (document.readyState == \"complete\") this.regionChanged(event);\r\n      if (document.readyState == \"complete\") this.districtChanged(event);\r\n      if (document.readyState == \"complete\") this.constituencyChanged(event);\r\n      if (document.readyState == \"complete\") this.accountCategoryChanged(event);\r\n    }  \r\n    this.addLeadersAction();  \r\n  }\r\n\r\n  private accountCategoryChanged(e: any) {\r\n    // console.log(e)\r\n    const accountCategoryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('mwc-select[name=\"accountCategory\"]');\r\n    // console.log({ \"accountCategoryNodes\": accountCategoryNodes })\r\n    accountCategoryNodes.forEach(accountCategoryNode => {\r\n      // console.log({ \"accountCategoryNode\": accountCategoryNode })\r\n      // console.log({ \"accountCategoryNodes.currentValue\": accountCategoryNodes.getAttribute(\"currentValue\") })\r\n      accountCategoryNode.onchange = async (event) => {\r\n        // console.log({ event, })\r\n        const show_other_account_category = this.querySelectorAll('[show_other_account_category]'),\r\n          show_hide_class = \"hidden\";\r\n        if (accountCategoryNode.value === \"-1000\") {\r\n          show_other_account_category.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        } else {\r\n          show_other_account_category.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private countryChanged(e: any) {\r\n    // console.log(e)\r\n    const countryNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"country\"]');\r\n    countryNodes.forEach(countryNode => {\r\n      // console.log({ \"countryNode\": countryNode })\r\n      // console.log({ \"countryNode.currentValue\": countryNode.getAttribute(\"currentValue\") })\r\n      countryNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": countryNode, \"counrtyValue.value\": countryNode.value, })\r\n        const show_ghana_locations = this.querySelectorAll('[show_ghana_locations]'),\r\n          show_state_province = this.querySelectorAll('[show_state_province]'),\r\n          show_hide_class = \"hidden\";\r\n        if (countryNode.value === \"76\") {\r\n          if (this.regionCalled === false) await this.getLocationRegion();\r\n          this.regionCalled = true;\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n        } else {\r\n          show_ghana_locations.forEach(node => {\r\n            node.classList.add(show_hide_class);\r\n          });\r\n          show_state_province.forEach(node => {\r\n            node.classList.remove(show_hide_class);\r\n          });\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  private async regionChanged(e: Event) {\r\n    const regionNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"region\"]');\r\n    regionNodes.forEach(regionNode => {\r\n      // console.log({ \"regionNode\": regionNode })\r\n      // console.log({ \"regionNode.currentValue\": regionNode.getAttribute(\"currentValue\") })\r\n      regionNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": regionNode, \"counrtyValue.value\": regionNode.value, })\r\n        const regionID = regionNode.value;\r\n        this.selectedRegion = Number.isNaN(regionID) ? 0 : Number(regionID);\r\n        // console.log({regionID, \"this.selectedRegion\": this.selectedRegion})\r\n        this.getLocationDistrict(this.selectedRegion);\r\n      };\r\n    });\r\n  }\r\n\r\n  private districtChanged(e: Event) {\r\n    const districtNodes: NodeListOf<HTMLSelectElement> = document.querySelectorAll('select[name=\"district\"]');\r\n    districtNodes.forEach(districtNode => {\r\n      // console.log({ \"districtNode\": districtNode })\r\n      // console.log({ \"districtNode.currentValue\": districtNode.getAttribute(\"currentValue\") })\r\n      districtNode.onchange = async (event) => {\r\n        // console.log({ event, \"counrtyValue\": districtNode, \"counrtyValue.value\": districtNode.value, })\r\n        const districtID = districtNode.value;\r\n        this.selectedDistrict = Number.isNaN(districtID)? 0: Number(districtID);\r\n        this.getLocationConstituency(this.selectedRegion, this.selectedDistrict);\r\n      };\r\n    });\r\n  }\r\n\r\n  private constituencyChanged(e: Event) {\r\n    // this.selectedRegion, this.selectedDistrict\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n    this._genders = [...this._genders, ...__genders];\r\n  }\r\n\r\n  private async getClientSubscriptionMembershipSize() {\r\n    const _networkResponse = await GET_ClientSubsciptionMembershipSize<ClientSubscriptionMembershipSizeModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __membershipSizes: ClientSubscriptionMembershipSizeModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __membershipSizes.push({ id: 0, info: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientSubscriptionMembershipSizeModel[] = data.map(value => {\r\n          return csmsmConvert.toClientSubscriptionMembershipSizeModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __membershipSizes = DATA;\r\n      }\r\n    }\r\n    this._membershipSizes = [...this._membershipSizes, ...__membershipSizes];\r\n  }\r\n\r\n  private async getLocationCountry() {\r\n    const _networkResponse = await GET_LocationCountry<LocationCountryModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __countries: LocationCountryModel[] = [\r\n      {code: \"-000\", id: 0, name: \"Select Country\", short: \"S-C\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __countries.push({ id: 0, name: \"**NOT FOUND**\", code: \"??\", short: \"N/A\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationCountryModel[] = data.map(value => {\r\n          return lcmConvert.toCountryModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __countries = [...__countries, ...DATA];\r\n      }\r\n    }\r\n    this._countries = [...this._countries, ...__countries];\r\n  }\r\n\r\n  private async getClientAccountCategory() {\r\n    const _networkResponse = await GET_ClientAccountCategory<ClientAccountCategoryModel>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __accountCategories: ClientAccountCategoryModel[] = [\r\n      {category: \"Select Account Type\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __accountCategories.push({ id: 0, category: \"**NOT FOUND**\",});\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientAccountCategoryModel[] = data.map(value => {\r\n          return cacmConvert.toClientAccountCategoryModel(JSON.stringify(value))\r\n        });\r\n        DATA.push({ category: \"Other\", id: -1000 });\r\n        // console.log({DATA});\r\n        __accountCategories = [...__accountCategories, ...DATA];\r\n      }\r\n    }\r\n    this._accountCategories = [...this._accountCategories, ...__accountCategories];\r\n  }\r\n  \r\n  private async getLocationRegion() {\r\n    const _networkResponse = await GET_LocationRegion<LocationRegionModel>(null, \"?client=0\");\r\n    // console.log({_networkResponse});\r\n    \r\n    let __regions: LocationRegionModel[] = [\r\n      {id: 0, location: \"Select Region\"}\r\n    ];\r\n\r\n    if (_networkResponse === null) {\r\n      __regions.push({ id: 0, location: \"**NOT FOUND**\", });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: LocationRegionModel[] = data.map(value => {\r\n          return lrmConvert.toLocationRegionModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __regions = [...__regions, ...DATA];\r\n      }\r\n    }\r\n    this._regions = [...this._regions, ...__regions];\r\n  }\r\n\r\n  private async getLocationDistrict(regionID: number) {\r\n    this._districts = [];\r\n    const identity = String(regionID),\r\n      _districtsMemo = this._districtsMemo;\r\n    // console.log({identity, _districtsMemo,})\r\n    if (identity in _districtsMemo) { // implementing memoization\r\n      // console.log({ \"_districtsMemo[identity]\": _districtsMemo[identity] })\r\n      \r\n      setTimeout(() => { // allow empty field to be set\r\n        this._districts = [...this._districts, ..._districtsMemo[identity]];\r\n      }, 100);\r\n    } else {\r\n      const _networkResponse = await GET_LocationDistrictFilter<LocationDistrictModel>(regionID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __districts: LocationDistrictModel[] = [\r\n        {id: 0, location: \"Select District\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __districts.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationDistrictModel[] = data.map(value => {\r\n            return ldmConvert.toLocationDistrictModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __districts = [...__districts, ...DATA];\r\n          this._districtsMemo[identity] = __districts;\r\n        }\r\n      }\r\n      this._districts = [...this._districts, ...__districts];\r\n    }\r\n  }\r\n\r\n  private async getLocationConstituency(regionID: number, districtID: number) {\r\n    this._constituencies = [];\r\n    const identity = `${regionID}_${districtID}`,\r\n      _constituenciesMemo = this._constituenciesMemo;\r\n    if (identity in _constituenciesMemo) { // implementing memoization      \r\n      setTimeout(() => { // allow empty field to be set\r\n        this._constituencies = [...this._constituencies, ..._constituenciesMemo[identity]];\r\n      }, 100);\r\n    } else {\r\n\r\n      const _networkResponse = await GET_LocationConstituencyFilter<LocationConstituencyModel>(regionID, districtID);\r\n      // console.log({_networkResponse});\r\n      \r\n      let __constituencies: LocationConstituencyModel[] = [\r\n        {id: 0, location: \"Select Constituency\", regionId: null}\r\n      ];\r\n  \r\n      if (_networkResponse === null) {\r\n        __constituencies.push({ id: 0, location: \"**NOT FOUND**\", regionId: null });\r\n      } else {\r\n        if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n          const data: any[] = _networkResponse.response.data;\r\n  \r\n          const DATA: LocationConstituencyModel[] = data.map(value => {\r\n            return lcymConvert.toLocationConstituencyModel(JSON.stringify(value))\r\n          });\r\n          // console.log({DATA});\r\n          __constituencies = [...__constituencies, ...DATA];\r\n          this._constituenciesMemo[identity] = __constituencies;\r\n        }\r\n      }\r\n      this._constituencies = [...this._constituencies, ...__constituencies];\r\n    }\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_ClientRegister();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","GetNetworkStatus","online","offline","navigator","onLine","GetNetworkStatusEvent","newMessage","CustomEvent","cancelable","detail","onlineStatus","dispatchEvent","showingCheckBoxes","labelTextShow","togglePswdVisibility","type","document","querySelectorAll","forEach","PSWD","i","parentElement","setAttribute","getAttribute","label","createElement","span","innerText","spanDummy","checkbox","id","appendChild","after","showingCheckBox","showing","elem","includes","push","addEventListener","__toggleVisibility","e","preventDefault","currentTarget","checked","userLoginInfo","setActiveBranchIdCookie","data","stringData","JSON","stringify","set_cookies","base64Encode","removeActiveBranchIdCookie","getActiveBranchIdCookie","get_cookie","_cookie","base64Decode","cookie","parse","clientBranchInfo_S","ClientBranch_S","Number","name","String","accountId","createdBy","creationDate","Date","updatedBy","updateDate","Convert","static","json","transform","r","jsonToJSProps","value","jsToJSONProps","invalidValue","typ","val","key","console","error","undefined","jsonToJS","map","props","p","js","jsToJSON","getProps","ref","typeMap","Array","isArray","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","d","isNaN","valueOf","transformDate","transformPrimitive","u","GenericGenderInfo_S","GET_ClientAccountCategory","ID","url_params","anonymousAuth","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","errorHttp","POST_ClientRegister","formContainer","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","register","body","then","networkCallRes","_RESPONSE","response","log","unknownError","errors","err","errormsg","res","https_swal_error_format","catch","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","success","setTimeout","userLoginInfo_S","setUserLoginInfoCookie","window","location","href","text","GET_ClientSubsciptionMembershipSize","GET_GenericGender","GET_LocationConstituencyFilter","region","district","GET_LocationCountry","GET_LocationDistrictFilter","GET_LocationRegion","PdbRegisterForm","LitElement","constructor","super","showLeadersForm","regionCalled","selectedRegion","selectedDistrict","_genders","_countries","_accountCategories","_regions","_districts","_constituencies","_constituenciesMemo","_districtsMemo","_membershipSizes","connectedCallback","this","getGenders","getLocationCountry","getClientAccountCategory","getClientSubscriptionMembershipSize","disconnectedCallback","render","countries","country","isSelected","selected","regions","districts","constituencies","constituency","html","item","category","info","sectionSeparater","submitForm","addLeadersAction","_this","_switch","evt","show_leaders","show_hide_class","node","classList","remove","add","firstUpdated","onreadystatechange","event","readyState","countryChanged","regionChanged","districtChanged","constituencyChanged","accountCategoryChanged","accountCategoryNode","onchange","show_other_account_category","countryNode","show_ghana_locations","show_state_province","getLocationRegion","regionNode","regionID","getLocationDistrict","districtNode","districtID","getLocationConstituency","_networkResponse","__genders","__membershipSizes","__countries","code","short","DATA","__accountCategories","__regions","identity","__districts","regionId","__constituencies","createRenderRoot","styles","css","property","Boolean","customElement"],"sourceRoot":""}