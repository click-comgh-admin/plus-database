{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/src_view_attendance_clocking_clocker_table_parts_first_ts-src_view_attendance_clocking_clocke-d561af.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/schedules/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index.ts","webpack://webpackNumbers/./src/addons/interfaces/boolean/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/index.ts","webpack://webpackNumbers/./src/addons/interfaces/datetime/date.ts","webpack://webpackNumbers/./src/addons/interfaces/datetime/time.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/cancel-clocking.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-in.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-out.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/end-break.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/start-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/second.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/third.ts"],"sourcesContent":["export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","import { Boolean_I } from \"@@addons/interfaces/boolean\"\r\nimport { ClientInfo_I, ClientInfo_S } from \"@@addons/interfaces/clients\"\r\nimport { ClientBranches_I, ClientBranch_S } from \"@@addons/interfaces/clients/branches\"\r\nimport { Time_I } from \"@@addons/interfaces/datetime/time\"\r\nimport { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"@@addons/interfaces/members/groupings/member_categories\"\r\n\r\nexport interface MeetingEventSchedule_I {\r\n  id?: number,\r\n  type?: number,\r\n  memberType?: number,\r\n  name?: string,\r\n  clientId?: ClientInfo_I,\r\n  branchId?: ClientBranches_I,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  meetingSpan?: number,\r\n  startTime?: Date,\r\n  closeTime?: Date,\r\n  latenessTime?: Date,\r\n  isRecuring?: boolean,\r\n  hasBreakTime?: boolean,\r\n  hasDuty?: boolean,\r\n  hasOvertime?: boolean,\r\n  agenda?: string,\r\n  agendaFile?: string,\r\n  virtualMeetingLink?: string,\r\n  virtualMeetingType?: number\r\n  meetingLocation?: number\r\n  expectedMonthlyAttendance?: number\r\n  activeMonthlyAttendance?: number\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\n\r\nexport function MeetingEventSchedule_S(data: any): MeetingEventSchedule_I {\r\n  // console.log({data});\r\n  \r\n  const meetingEventSchedule_S: MeetingEventSchedule_I = {\r\n    id: Number(data['id']),\r\n    type: Number(data['type']),\r\n    memberType: Number(data['memberType']),\r\n    name: String(data['name']),\r\n    clientId: ClientInfo_S(data['clientId']),\r\n    branchId: ClientBranch_S(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    meetingSpan: Number(data['meetingSpan']),\r\n    startTime: Time_I(data['startTime']),\r\n    closeTime: Time_I(data['closeTime']),\r\n    latenessTime: Time_I(data['latenessTime']),\r\n    isRecuring: Boolean_I(data['isRecuring']),\r\n    hasBreakTime: Boolean_I(data['hasBreakTime']),\r\n    hasDuty: Boolean_I(data['hasDuty']),\r\n    hasOvertime: Boolean_I(data['hasOvertime']),\r\n    agenda: String(data['agenda']),\r\n    agendaFile: String(data['agendaFile']),\r\n    virtualMeetingLink: String(data['virtualMeetingLink']),\r\n    virtualMeetingType: Number(data['virtualMeetingType']),\r\n    meetingLocation: Number(data['meetingLocation']),\r\n    expectedMonthlyAttendance: Number(data['expectedMonthlyAttendance']),\r\n    activeMonthlyAttendance: Number(data['activeMonthlyAttendance']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return meetingEventSchedule_S;\r\n}\r\n","import { Boolean_I } from \"@@addons/interfaces/boolean\";\r\nimport { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { Time_I } from \"@@addons/interfaces/datetime/time\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MeetingEventSchedule_I, MeetingEventSchedule_S } from \"../meeting_event/schedules\";\r\n\r\nexport interface MemberClockingInfo_I {\r\n  id?: number,\r\n  meetingEventId?: MeetingEventSchedule_I,\r\n  memberId?: MembershipUser_I,\r\n  accountType?: number,\r\n  inOrOut?: boolean,\r\n  inTime?: Date,\r\n  outTime?: Date,\r\n  startBreak?: Date,\r\n  endBreak?: Date,\r\n  clockedBy?: number,\r\n  clockingMethod?: number,\r\n  clockingMethodName?: string,\r\n  date?: Date\r\n}\r\n\r\nexport function MemberClockingInfo_S(data: any): MemberClockingInfo_I {\r\n  // console.log({data});\r\n  \r\n  const memberClockingInfo_S: MemberClockingInfo_I = {\r\n    id: Number(data['id']),\r\n    meetingEventId: MeetingEventSchedule_S(data['meetingEventId']),\r\n    memberId: MembershipUser_S(data['memberId']),\r\n    accountType: Number(data['accountType']),\r\n    inOrOut: Boolean_I(data['inOrOut']),\r\n    // inTime: Time_I(data['inTime']),\r\n    // outTime: Time_I(data['outTime']),\r\n    // startBreak: Time_I(data['startBreak']),\r\n    // endBreak: Time_I(data['endBreak']),\r\n    inTime: Date_I(data['inTime']),\r\n    outTime: Date_I(data['outTime']),\r\n    startBreak: Date_I(data['startBreak']),\r\n    endBreak: Date_I(data['endBreak']),\r\n    clockedBy: Number(data['clockedBy']),\r\n    clockingMethod: Number(data['clockingMethod']),\r\n    clockingMethodName: String(data['clockingMethodName']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return memberClockingInfo_S;\r\n}","export const Boolean_I = (bool: any) => {\r\n  const _bool = String(bool).toLowerCase();\r\n  // console.info({_bool});\r\n  \r\n  if (_bool === \"1\") {\r\n    return true;\r\n  } else if (_bool === \"true\") {\r\n    return true;\r\n  } else if (bool === true) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}","import { Constituency_I, Constituency_S, _Constituency_D } from \"../location/constituency\";\r\nimport { Country_I, Country_S, _Country_D } from \"../location/country\";\r\nimport { District_I, District_S, _District_D } from \"../location/district\";\r\nimport { Region_I, Region_S, _Region_D } from \"../location/region\";\r\n\r\nexport interface ClientInfo_I {\r\n  id?: number,\r\n  name?: string,\r\n  accountType?: number,\r\n  country?: string,\r\n  stateProvince?: string,\r\n  applicantFirstname?: string,\r\n  applicantSurname?: string,\r\n  applicantGender?: number,\r\n  applicantPhone?: string,\r\n  applicantEmail?: string,\r\n  applicantDesignationRole?: number,\r\n  region?: number,\r\n  district?: number,\r\n  constituency?: number,\r\n  community?: string,\r\n  subscriptionDuration?: number,\r\n  subscriptionDate?: Date,\r\n  subscriptionFee?: string,\r\n  logo?: string,\r\n  status?: number,\r\n  archive?: number,\r\n  accountCategory?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  countryInfo?: Country_I,\r\n  regionInfo?: Region_I,\r\n  districtInfo?: District_I,\r\n  constituencyInfo?: Constituency_I,\r\n};\r\n\r\n\r\nexport function ClientInfo_S(data: any): ClientInfo_I {\r\n  // console.log({data});\r\n  \r\n  const clientInfo_S: ClientInfo_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountType: Number(data['accountType']),\r\n    country: String(data['country']),\r\n    stateProvince: String(data['stateProvince']),\r\n    applicantFirstname: String(data['applicantFirstname']),\r\n    applicantSurname: String(data['applicantSurname']),\r\n    applicantGender: Number(data['applicantGender']),\r\n    applicantPhone: String(data['applicantPhone']),\r\n    applicantEmail: String(data['applicantEmail']),\r\n    applicantDesignationRole: Number(data['applicantDesignationRole']),\r\n    region: Number(data['region']),\r\n    district: Number(data['district']),\r\n    constituency: Number(data['constituency']),\r\n    community: String(data['community']),\r\n    subscriptionDuration: Number(data['subscriptionDuration']),\r\n    subscriptionDate: new Date(data['updateDate']),\r\n    subscriptionFee: String(data['subscriptionFee']),\r\n    logo: String(data['logo']),\r\n    status: Number(data['status']),\r\n    archive: Number(data['archive']),\r\n    accountCategory: Number(data['accountCategory']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n    countryInfo: ('countryInfo' in data) ? Country_S(data['countryInfo']) : _Country_D(),\r\n    regionInfo: ('regionInfo' in data) ? Region_S(data['regionInfo']) : _Region_D(),\r\n    districtInfo: ('districtInfo' in data) ? District_S(data['districtInfo']) : _District_D(),\r\n    constituencyInfo: ('constituencyInfo' in data) ? Constituency_S(data['constituencyInfo']) : _Constituency_D(),\r\n  };\r\n\r\n  return clientInfo_S;\r\n}\r\n","export function Date_I(dateTime: string): Date {\r\n\r\n  if (dateTime === 'null' || dateTime === null) {\r\n    return null;\r\n  }\r\n\r\n  let date = new Date(dateTime);\r\n  \r\n  // console.log({ date })\r\n  return date;\r\n}","export function Time_I(dateTime: string): Date {\r\n  const __dT: string = \"00:00:00\",\r\n    _dT_ = String(dateTime).toLocaleLowerCase().split(\"T\");\r\n  let _dT: string = __dT;\r\n  if (_dT_.length > 1) {\r\n    _dT = _dT_[1];\r\n    // _dT = _dT_[1].split('.')[0];\r\n  } else if (_dT_.length === 1) {\r\n    _dT = _dT_[0];\r\n  }\r\n\r\n  if (_dT === 'null') {\r\n    return null;\r\n  }\r\n\r\n  let today = new Date();\r\n  const newTime = _dT.split(':');\r\n  // console.log({ today, newTime })\r\n  if (newTime[0] !== undefined) {\r\n    today.setHours(Number(newTime[0]));\r\n  }\r\n  if (newTime[1] !== undefined) {\r\n    today.setMinutes(Number(newTime[1]));\r\n  }\r\n  if (newTime[2] !== undefined) {\r\n    today.setSeconds(Number(newTime[2]));\r\n  }\r\n  // console.log({ today })\r\n  return today;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceCancelClocking(clockId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/cancel-clocking/' + clockId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Cancel Clocking?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockIn(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-in/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock In?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockOut(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-out/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock Out?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingEndBreak(clockId: Number, time: string = null): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/end-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'End Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingStartBreak(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/start-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Start Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first\")\r\nexport class ClockerTablePartsFirst extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfo_I = null;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const clockingInfo = this.clockingInfo;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    const MEMBER_ID = base64Encode(String(clockingInfo.memberId.id), true);\r\n    return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n      <div class=\"d-block m-1\">\r\n        <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n          ${clockingInfo.clockingMethodName}\r\n        </span>\r\n      </div>\r\n      <div class=\"flex m-1 justify-evenly\">\r\n        <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\" click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n          url=\"${clockingInfo.memberId.profilePicture}\" size=\"32\"></user-profile-photo>\r\n      </div>\r\n      <div class=\"block m-1\">\r\n        <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n          <b>Name</b>: ${clockingInfo.memberId.firstname} ${clockingInfo.memberId.middlename} ${clockingInfo.memberId.surname}\r\n        </span>\r\n      </div>\r\n    </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { PATCH_AttendanceClockingClockIn } from '@@addons/network/attendance/clocking/clock-in';\r\nimport { PATCH_AttendanceClockingStartBreak } from '@@addons/network/attendance/clocking/start-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\n\r\n/*this is to change automatically update clocking times since datatabel is not allowing it */\r\nexport const setClockingTimeInfo = (clockingTime: boolean, clockingTimeValue: string) => {\r\n  // @ts-ignore\r\n  window['clocker'] = {\r\n    'clockingTimeInfo': {\r\n      \"clockingTime\": clockingTime, \"clockingTimeValue\": clockingTimeValue,\r\n    }\r\n  };\r\n}\r\nexport const getClockingTimeInfo = () => {\r\n  if (\"clocker\" in window) {\r\n    // @ts-ignore\r\n    const CTI = window['clocker']['clockingTimeInfo'];\r\n    return {\r\n      \"clockingTime\": CTI.clockingTime, \"clockingTimeValue\": CTI.clockingTimeValue,\r\n    }\r\n\r\n  } return null;\r\n}\r\n\r\n@customElement(\"clocker-table-parts-second\")\r\nexport class ClockerTablePartsSecond extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  private clockingInfo: MemberClockingInfo_I = null;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const clockingInfo = this.clockingInfo;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n\r\n    const atDate = getDateTime(clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n    const inTime = clockingInfo.inTime;\r\n    // const atInTime = inTime !== null ? getLocalTime(inTime, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const atInTime = inTime !== null ? getDateTime(inTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    // console.log({atInTime, \"_clockingInfo.inTime\": _clockingInfo.inTime})\r\n    const CLOCK_ID = clockingInfo.id;\r\n    const CLOCKED = clockingInfo.inOrOut;\r\n    const startBreak = clockingInfo.startBreak;\r\n    // const atBreakTime = startBreak !== null ? getLocalTime(startBreak, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const atBreakTime = startBreak !== null ? getDateTime(startBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const TODAY = new Date();\r\n    const HAS_BREAKTIME = clockingInfo.meetingEventId.hasBreakTime;\r\n    // console.log({ HAS_BREAKTIME, _clockingInfo });\r\n    const IS_TODAY = clockingInfo.date.toDateString() === TODAY.toDateString();\r\n    return html`\r\n      <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n        <div class=\"flex justify-between\">\r\n          ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-in=\"${CLOCK_ID}\" name=\"member_check_in_${CLOCK_ID}\" id=\"member_check_in_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n          `: nothing}\r\n          <label for=\"member_check_in_${CLOCK_ID}\">@ ${atDate}</label>\r\n        </div>\r\n      </div>\r\n      ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0\" clock-id=\"${CLOCK_ID}\" clock-user=\"in\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n      `: nothing}\r\n      <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n        <span class=\"badge badge-success mx-1\">${IS_TODAY ? html`Today` : html`Post Clocking`}</span>\r\n        ${CLOCKED ? html`\r\n        <span class=\"badge badge-success bg-grow-early mx-1\">Present</span>`: html`\r\n        <span class=\"badge badge-danger mx-1\">Not Clocked</span>\r\n        `}\r\n      </div>\r\n      ${CLOCKED && (inTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock in Time</b>: ${atInTime}\r\n          </span>\r\n        </div>`: ''\r\n      }\r\n      ${this.clocking ? html`\r\n        ${HAS_BREAKTIME ? html`\r\n          <hr class=\"whitespace-nowrap\">\r\n          <div class=\"text-center whitespace-nowrap\">\r\n            <mwc-button raised class=\"shadow-sm success button\" label=\"Start Break\" clock-id=\"${CLOCK_ID}\" user-break=\"start\"\r\n              icon=\"check\">\r\n            </mwc-button>\r\n          </div>\r\n          `: ''\r\n        }\r\n      `: nothing}\r\n      ${(startBreak !== null) ? html`\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <span class=\"badge badge-light shadow p-2 m-1\">\r\n          <b>Break Start Time</b>: ${atBreakTime}\r\n        </span>\r\n      </div>`: ''\r\n      }\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"in\") {\r\n        // console.log({ \"clock in\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockInUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async clockInUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingClockIn(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingClockIn(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"start\") {\r\n        // console.log({ \"start break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.startUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async startUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e,element,CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingStartBreak(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingStartBreak(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { PATCH_AttendanceCancelClocking } from '@@addons/network/attendance/clocking/cancel-clocking';\r\nimport { PATCH_AttendanceClockingClockOut } from '@@addons/network/attendance/clocking/clock-out';\r\nimport { PATCH_AttendanceClockingEndBreak } from '@@addons/network/attendance/clocking/end-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport { getClockingTimeInfo } from './second';\r\n\r\n\r\n@customElement(\"clocker-table-parts-third\")\r\nexport class ClockerTablePartsThird extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfo_I = null;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private excuseBaseUrl: string = \"/attendance/v2/clocking/excuse?clocking-id=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const clockingInfo = this.clockingInfo;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n\r\n    const atDate = getDateTime(clockingInfo.date, {dateStyle: \"medium\", timeStyle: \"short\"}); // Sun, 07:39 AM\r\n    const outTime = clockingInfo.outTime;\r\n    // const atOutTime = outTime !== null ? getLocalTime(outTime, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n    const atOutTime = outTime !== null ? getDateTime(outTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    // console.log({atOutTime, \"clockingInfo.outTime\": clockingInfo.outTime})\r\n    const CLOCK_ID = clockingInfo.id;\r\n    const CLOCKED = clockingInfo.inOrOut;\r\n    const endBreak = clockingInfo.endBreak;\r\n    // const atBreakTime = endBreak !== null ? getLocalTime(endBreak, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n    const atBreakTime = endBreak !== null ? getDateTime(endBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const HAS_BREAKTIME = clockingInfo.meetingEventId.hasBreakTime;\r\n    const CLOCK_ID_ENC = base64Encode(String(CLOCK_ID), true);\r\n    // console.log({ HAS_BREAKTIME, clockingInfo });\r\n    return html`\r\n      <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n        <div class=\"flex justify-between\">\r\n          ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-out=\"${CLOCK_ID}\" name=\"member_check_out_${CLOCK_ID}\" id=\"member_check_out_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n          `: nothing}\r\n          <label for=\"member_check_out_${CLOCK_ID}\">@ ${atDate}</label>\r\n        </div>\t\r\n      </div>\r\n      ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\" clock-user=\"out\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\" cancel-user-clock=\"true\">\r\n            <span class=\"pe-7s-close-circle bg-love-kiss fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n      `: nothing}\r\n      <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n        <span class=\"badge badge-warning\">'X' to Cancel Attendance</span>\r\n      </div>\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <a href=\"${this.excuseBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-info btn-sm\" target=\"_blank\" type=\"button\">Enter/ View Excuse</a>\r\n      </div>\r\n      ${CLOCKED && (outTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock out Time</b>: ${atOutTime}\r\n          </span>\r\n        </div>`: ''\r\n      }\r\n      ${this.clocking ? html`\r\n        ${HAS_BREAKTIME ? html`\r\n          <hr class=\"whitespace-nowrap\">\r\n          <div class=\"text-center whitespace-nowrap\">\r\n            <mwc-button raised class=\"shadow-sm info button\" label=\"End Break\" clock-id=\"${CLOCK_ID}\"\r\n              user-break=\"end\" icon=\"close\">\r\n            </mwc-button>\r\n          </div>\r\n          `: ''\r\n        }\r\n      `: nothing}\r\n      ${(endBreak !== null) ? html`\r\n        <div class=\"text-center\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break End Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n      }\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n    this.cancelClocking();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      this.clockingTime = CTI.clockingTime;\r\n      this.clockingTimeValue = CTI.clockingTimeValue;\r\n    });\r\n  }\r\n\r\n  private cancelClocking() {\r\n    const selectorString = 'cancel-user-clock=\"true\"';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(cancelClock => {\r\n      cancelClock.addEventListener('click', async (e) => {\r\n        e.preventDefault();\r\n        const CLOCK_ID = Number(cancelClock.getAttribute('clock-id'));\r\n        await PATCH_AttendanceCancelClocking(CLOCK_ID);\r\n      });\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"out\") {\r\n        // console.log({ \"clock out\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockOutUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async clockOutUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingClockOut(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingClockOut(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"end\") {\r\n        // console.log({ \"end break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.endUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async endUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingEndBreak(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingEndBreak(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["dateTime","date","now","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minutes","getMinutes","seconds","getSeconds","getTime","__string__","__code__","getDateTime","options","toLocaleString","__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","MeetingEventSchedule_S","id","Number","type","memberType","name","String","clientId","ClientInfo_S","branchId","ClientBranch_S","memberCategoryId","GroupingsMemberCategories_S","meetingSpan","startTime","Time_I","closeTime","latenessTime","isRecuring","Boolean_I","hasBreakTime","hasDuty","hasOvertime","agenda","agendaFile","virtualMeetingLink","virtualMeetingType","meetingLocation","expectedMonthlyAttendance","activeMonthlyAttendance","updatedBy","updateDate","MemberClockingInfo_S","meetingEventId","memberId","MembershipUser_S","accountType","inOrOut","inTime","Date_I","outTime","startBreak","endBreak","clockedBy","clockingMethod","clockingMethodName","bool","_bool","toLowerCase","country","stateProvince","applicantFirstname","applicantSurname","applicantGender","applicantPhone","applicantEmail","applicantDesignationRole","region","district","constituency","community","subscriptionDuration","subscriptionDate","subscriptionFee","logo","status","archive","accountCategory","creationDate","countryInfo","Country_S","_Country_D","regionInfo","Region_S","_Region_D","districtInfo","District_S","_District_D","constituencyInfo","Constituency_S","_Constituency_D","_dT_","toLocaleLowerCase","split","_dT","length","today","newTime","undefined","setHours","setMinutes","setSeconds","PATCH_AttendanceCancelClocking","clockId","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","errors","e","err","errormsg","push","res","catch","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","value","Object","VALUE","message","setTimeout","window","location","reload","PATCH_AttendanceClockingClockIn","time","PATCH_AttendanceClockingClockOut","PATCH_AttendanceClockingEndBreak","PATCH_AttendanceClockingStartBreak","ClockerTablePartsFirst","LitElement","constructor","super","_data","_type","clockingInfo","clocking_info","memberProfileBaseUrl","this","requestUpdate","connectedCallback","_clockingInfo","parse","disconnectedCallback","render","MEMBER_ID","base64Encode","html","profilePicture","firstname","middlename","surname","firstUpdated","createRenderRoot","styles","css","property","customElement","setClockingTimeInfo","clockingTime","clockingTimeValue","getClockingTimeInfo","CTI","ClockerTablePartsSecond","clocking","atDate","dateStyle","timeStyle","atInTime","CLOCK_ID","CLOCKED","atBreakTime","TODAY","HAS_BREAKTIME","IS_TODAY","toDateString","nothing","clockUser","userBreak","setInterval","document","querySelectorAll","getAttribute","addEventListener","clockInUser","element","preventDefault","console","log","startUserBreak","Boolean","ClockerTablePartsThird","excuseBaseUrl","atOutTime","CLOCK_ID_ENC","cancelClocking","cancelClock","clockOutUser","endUserBreak"],"sourceRoot":""}