{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/membership/connections/connection.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/view/membership/connections/connections.ts","webpack://webpackNumbers/./src/view/membership/connections/members_and_connections/view_connections.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport './members_and_connections/view_connections';\r\n\r\n\r\n@customElement(\"pdb-connections-connections\")\r\nexport class PdbConnectionsConnections extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    return html`\r\n      <div class=\"flex flex-col\">\r\n        <pdb-connections-connections-view class=\"my-1\"></pdb-connections-connections-view>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, } from 'lit/decorators.js';\r\nimport \"@material/mwc-icon\";\r\nimport \"@material/mwc-icon-button\";\r\nimport \"../../../../assets/styles/views/home/dashboard.scss\";\r\nimport { DELETE_UserConnectionAccount } from '@@addons/network/members/connections/accounts/delete';\r\nimport { UserConnectionAccount_I } from '@@addons/interfaces/members/connections/accounts';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsGet, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { Button } from '@material/mwc-button';\r\nimport { QueryOptions } from 'select2';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport \"@material/mwc-select\";\r\nimport '@@addons/widgets/form/new/select';\r\nimport { MembershipUser_I, MembershipUser_S } from '@@addons/interfaces/members/user';\r\nimport { GET_MembershipUsers } from '@@addons/network/members/membership/users';\r\nimport { show_selection_member_id_filter } from './view_members';\r\n\r\n@customElement(\"pdb-connections-connections-view\")\r\nexport class PdbConnectionsConnectionsView extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: Array })\r\n  private _connection_accounts: UserConnectionAccount_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage1: number = 0;\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"members/user-connection-account/connection/\";\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }, isOpen: true,\r\n    });\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this._connection_accounts === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._connection_accounts === undefined) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Schedule </span>: undefined error</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n          filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1 overflow-x-scroll\">\r\n        <hr class=\"my-2\" />\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }, unmutableInputNames: [], isOpen: true,\r\n    });\r\n    \r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_connectionId = \"connectionId\";\r\n\r\n    let filterNameId_filter_connectionIdVal: number = 0;\r\n\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = Number(_urlQueryParams[key]);\r\n      value = Number.isNaN(value) ? 0 : value;\r\n      if (key === filterNameId_filter_connectionId) {\r\n        filterNameId_filter_connectionIdVal = value;\r\n      }\r\n    }\r\n\r\n    const memberField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <h4 class=\"font-semibold my-2\">Select Connection</h4>\r\n          ${show_selection_member_id_filter(filterNameId_filter_connectionIdVal)}\r\n          <select-input class=\"w-100\" id=\"${filterNameId_filter_connectionId}\" name=\"${filterNameId_filter_connectionId}\" label=\"Select Connection\"\r\n            .ajaxFetchProcessResponse=\"${this.processClientUserSearch1}\" startSearchPage=\"${this.startSearchPage1}\"\r\n            .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams1}\"\r\n            ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search\"></select-input>\r\n      </div>`;\r\n\r\n    returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          ${memberField}\r\n          <div class=\"col-xl-12 col-md-10\">\r\n            <div class=\"form-input-container mt-1\">\r\n              <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n              <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private processClientUserSearch1(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"connectionId\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const member: MembershipUser_I = MembershipUser_S(item);\r\n        \r\n        const id = member.id;\r\n        const fullName = `${member.firstname} ${member.middlename} ${member.surname}`;\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n\r\n\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private get ajaxFetchUrlParams1(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"\", value: \"\" }\r\n    ]\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get getConnectionId() {\r\n    const filterNameId_filter_connectionId = \"connectionId\";\r\n    let _connectionId = urlQueryParamsGet(filterNameId_filter_connectionId);\r\n    const connectionId = Number.isNaN(_connectionId) ? 0 : Number(_connectionId);\r\n    return connectionId;\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + this.getConnectionId + \"?datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n\r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private renderMemberInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    // console.log({connectionInfo});\r\n    const memberId = connectionInfo.memberId;\r\n    const connectionId = connectionInfo.connectionId;\r\n    return `\r\n      <div class=\"flex flex-col\">\r\n        <div class=\"flex flex-col lg:flex-row m-1 justify-start\">\r\n          <div class=\"flex\">\r\n            <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Name</h6>\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${connectionId.firstname} ${connectionId.middlename}\r\n              ${connectionId.surname}</p>\r\n          </div>\r\n          <div class=\"m-1\"><mwc-icon>directions<mwc-icon/></div>\r\n          <div class=\"flex\">\r\n            <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Member Name</h6>\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${memberId.firstname} ${memberId.middlename} ${memberId.surname}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderClockInInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    // console.log({connectionInfo});\r\n    const connectionType = connectionInfo.type;    \r\n    return `\r\n      <div class=\"justify-center content-center\">\r\n        <mwc-icon-button class=\"ml-1 danger\" icon=\"delete_forever\" \r\n          delete-this-item=\"${connectionInfo.id}\" >\r\n        </mwc-icon-button>\r\n        <div class=\"flex flex-col\">\r\n          <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Type:</h6>\r\n          <div class=\"flex flex-col\">\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${connectionType.type}</p>\r\n            <p class=\"text-xs ml-1 whitespace-pre-wrap\">${connectionType.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_connectionId = \"connectionId\";\r\n\r\n    let newObject: any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_connectionId)) {\r\n        // console.log({value, });\r\n\r\n        newObject[key] = value;\r\n      }\r\n    }\r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"__this\": __this, url });\r\n\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderMemberInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'inTime',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderClockInInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.deleteConnectionAction();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private deleteConnectionAction() {\r\n    document.querySelectorAll('[delete-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.deleteConnection(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  async deleteConnection(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userConnectionId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n\r\n    await DELETE_UserConnectionAccount(userConnectionId);\r\n  }\r\n\r\n  public async getMember(ID: number) {\r\n    const _networkResponse = await GET_MembershipUsers<MembershipUser_I>(ID);\r\n    if (_networkResponse === null) {\r\n      return \"???\";\r\n    } else {\r\n      // console.log({\"_networkResponse.response\": _networkResponse.response});\r\n      \r\n      if (_networkResponse.response.success && 'dateOfBirth' in _networkResponse.response.data) {\r\n        // console.log({ \"_networkResponse.response\": _networkResponse.response })\r\n        \r\n        const member: MembershipUser_I = MembershipUser_S(_networkResponse.response.data);\r\n        return `${member.firstname} ${member.middlename} ${member.surname}`;\r\n      } else {\r\n        return _networkResponse.response.message;\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","PdbConnectionsConnections","LitElement","constructor","super","connectedCallback","disconnectedCallback","render","html","firstUpdated","createRenderRoot","this","styles","css","customElement","PdbConnectionsConnectionsView","_connection_accounts","startSearchPage1","datatablePathUrl","filterBox","FilterFieldBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","isOpen","undefined","toggleFilterFields","filterForm","table","unmutableInputNames","returnHtml","_urlQueryParams","urlQueryParams","filterNameId_filter_connectionId","filterNameId_filter_connectionIdVal","ajaxHeader","_get_cookie","getUserLoginInfoCookie","Authorization","token","key","value","Number","isNaN","memberField","show_selection_member_id_filter","processClientUserSearch1","ajaxFetchUrlParams1","CONSTANTS","clear_filter","submit","data","params","page","TOTAL","count","RESULTS","results","SELECTOR","document","querySelector","processedData","_data","i","length","item","member","MembershipUser_S","_new","id","text","firstname","middlename","surname","includes","push","total","totalShowing","param","__tableHeaders","title","__tableBody","__tableFoot","getConnectionId","_connectionId","urlQueryParamsGet","URL","urlQueryString","__dataTable","renderMemberInfo","type","connectionInfo","memberId","connectionId","renderClockInInfo","connectionType","description","newObject","String","_urlQueryParamsJoin","urlQueryParamsJoin","url","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","e","aoData","deleteConnectionAction","buttons","select","querySelectorAll","forEach","btn","addEventListener","deleteConnection","preventDefault","userConnectionId","currentTarget","getAttribute","DELETE_UserConnectionAccount","getMember","ID","_networkResponse","GET_MembershipUsers","response","success","message","query","Button","Element","HTMLFormElement","property","Array"],"sourceRoot":""}