{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/membership/registration/excel.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/active_page/index.ts","webpack://webpackNumbers/./src/addons/functions/login/main.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/network/members/membership/registration/excel/post.ts","webpack://webpackNumbers/./src/addons/widgets/add_remove_widget/index.ts","webpack://webpackNumbers/./src/view/membership/registration/excel/form/create.ts","webpack://webpackNumbers/./src/view/membership/registration/excel/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const ACTIVE_PAGE__ = () => {\r\n    const $menus = document.querySelectorAll('[mm-active]');\r\n    const $page = document.URL.substring(document.URL.lastIndexOf('/')).split('/')[1].split('?')[0];\r\n    // console.log({ $menus });\r\n\r\n    $menus.forEach(($menu) => {\r\n        // console.log({ $menu });\r\n        var thisPage = $menu.getAttribute(\"mm-active\");\r\n        var urls = thisPage.split('|');\r\n\r\n        for (let u = 0; u < urls.length; u++) {\r\n            const url = urls[u];\r\n            // console.log({ \"url\": url });\r\n            if ($page === url) {\r\n                $menu.setAttribute('class', 'mm-active');\r\n            }\r\n        }\r\n    });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { get_cookie, set_cookies, set_cookies_minutes } from \"@@addons/functions/cookies\";\r\nimport { LoginTokenType_I, } from '@@addons/interfaces/network_calls/login/login_token';\r\n\r\nconst get_differences = (date: Date) => {\r\n  const now = new Date();\r\n  const msBetweenDates = Math.abs(date.getTime() - now.getTime());\r\n  const hoursBetweenDated = msBetweenDates / (60 * 60 * 1000);\r\n  // console.log({ msBetweenDates, hoursBetweenDated, });\r\n  if (hoursBetweenDated < 24) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport const verifyToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/verify-token',\r\n    cookieName = type,\r\n    token = get_cookie(cookieName),\r\n    userInfo = JSON.stringify({ \"token\": base64Decode(token) }),\r\n    formData = userInfo;\r\n  const cookieDate = new Date(get_cookie(cookieName + \"_date\"));\r\n  // console.log({ \"force_check, now\": get_differences(cookieDate) });\r\n  const force_check = get_differences(cookieDate);\r\n\r\n  if (!force_check) {\r\n    await http(url, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }, true).then(async (response) => {\r\n      // console.log({ response: response });\r\n      if (response.jsonData.token & response.jsonData.user & response.jsonData.expiry) {\r\n        // console.log({\"valid token\": true, \"response.jsonData.token\": response.jsonData.token})\r\n        const token = base64Encode(String(response.jsonData.token));\r\n        set_cookies(cookieName, token, 10);\r\n        set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n        // console.log({ \"response.token\": response.token });\r\n      } else {\r\n        // console.log({\"valid token\": false, \"response.jsonData.token\": response.jsonData.token})\r\n        await generateNewToken(email, _id_, type);\r\n      }\r\n    });\r\n  } else {\r\n    return token;\r\n  }\r\n}\r\n\r\nconst generateNewToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/login-id',\r\n    cookieName = type,\r\n    userInfo = JSON.stringify({ \"email\": email, \"id\": _id_ }),\r\n    formData = userInfo;\r\n\r\n  await http(url, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  }, true).then((response) => {\r\n    // console.log({ response: response });\r\n    if (response.jsonData.token) {\r\n      const token = base64Encode(String(response.jsonData.token));\r\n      set_cookies(cookieName, token, 10);\r\n      set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n      // console.log({ \"response.token\": response.token });\r\n    }\r\n\r\n  });\r\n}\r\nexport const tokenLogin = async (email: string, id: Number, type: LoginTokenType_I) => {\r\n  const _id_ = base64Encode(String(id)),\r\n    cookieName = type;\r\n  // console.log({\"_id__id__id_\": _id_});\r\n  // console.log({ email, id });\r\n  // @ts-ignore\r\n  window['supersecret'] = { unknowable: { ops: { email: email, id: _id_, cookieName: cookieName } } };\r\n  const _get_cookie = get_cookie(cookieName);\r\n  // console.log({ _get_cookie });\r\n\r\n  if (_get_cookie == '') {\r\n    await generateNewToken(email, _id_, type);\r\n  } else {\r\n    await verifyToken(email, _id_, type);\r\n  }\r\n};","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_MembershipRegisterExcel(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user/excel',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"register-excel\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Proceed with excel registration?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              // console.log({ \"_errors-1\": _errors });\r\n              if (Array.isArray(_errors)) {\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n  \r\n                  errors.push(errormsg);\r\n                });\r\n              } else if (typeof _errors === \"string\") {\r\n                // console.log({ \"_errors-3\": _errors });\r\n                errors.push(_errors);\r\n                // console.log({ \"errors-3\": errors });\r\n              } else {\r\n                const __errors: any = _errors;\r\n                // console.log({ \"_errors-2\": _errors });\r\n                for (const key in __errors) {\r\n                  if (Object.prototype.hasOwnProperty.call(__errors, key)) {\r\n                    const error = __errors[key];\r\n                    let errormsg = { error: key + \": \" + error };\r\n                    errors.push(errormsg);\r\n                  }\r\n                }\r\n              }\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { LitElement, html, nothing, TemplateResult, } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-list';\r\nimport '@material/mwc-dialog';\r\nimport '@material/mwc-textfield';\r\nimport { stringToHTML } from '@@addons/functions/stringToHTML';\r\n\r\n\r\n@customElement(\"multiple-widgets\")\r\nexport class MultipleWidgets extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public index?: number = 0;\r\n\r\n  // @property({ type: String })\r\n  // public widget?: string = '';\r\n\r\n  // @property({ type: Object })\r\n  // public widget?: TemplateResult<1> = html``;\r\n\r\n  private _widget: TemplateResult<1> = html``;\r\n\r\n  public set widget(value: TemplateResult<1>) {\r\n    this._widget = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get widget(): TemplateResult<1> {\r\n    return this._widget;\r\n  }\r\n\r\n  @property({ type: Boolean })\r\n  public no_delete?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public single?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public _single?: string = '[]';\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({ \"fetchTypes\": this.fetchTypes });\r\n    if (this.single) {\r\n      this._single = '';\r\n    } else {\r\n      this._single = '[]';\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"container\">\r\n        <header class=\"form-input-container\">\r\n          ${this.no_delete ? nothing : html`\r\n            <mwc-icon-button icon=\"delete_forever\" class=\"danger\"\r\n              @click=\"${this.deleteQuestion}\"></mwc-icon-button>`\r\n          }\r\n        </header>\r\n        <main>\r\n          ${this.widget}\r\n        </main>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private deleteQuestion(e: { preventDefault: () => void; }) {\r\n    e.preventDefault();\r\n\r\n    this.remove();\r\n  }\r\n\r\n  async firstUpdated() {}\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-circular-progress';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport '@@addons/widgets/add_remove_widget';\r\nimport '@@addons/widgets/form/new/file-select';\r\nimport { urlQueryParams, urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { POST_MembershipRegisterExcel } from '@@addons/network/members/membership/registration/excel/post';\r\n\r\n@customElement(\"membership-registration-excel-create\")\r\nexport class MembershipRegistrationExcelCreate extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  //  @query(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  //  @queryAll(identifier)\r\n  //  private _identifier?: any;\r\n\r\n  @property({ type: Number })\r\n  public CLIENT_ID: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public _data?: Array<string> = [];\r\n\r\n  @property({ type: Object })\r\n  private urlQueryParams?: { [k: string]: string; } = undefined;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    this.urlQueryParams = urlQueryParams();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`${this.form}`;\r\n  }\r\n\r\n  private get form() {\r\n    return html`\r\n      <div class=\"form-container\">\r\n        <div class=\" !px-0\">\r\n          <div class=\"-row !px-0\">\r\n            <div class=\"-col-md-12\">\r\n              <header class=\"header warning -col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Member Registration</h1>\r\n                  <h3 class=\"h3\">Excel Member Registration</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"register-excel\" enctype=\"multipart/form-data\">\r\n                <div class=\"p-0 m-0\" show-attachmentField=\"all\">\r\n                  ${this.attachmentField}\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${this.CLIENT_ID}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      <mwc-button label=\"Register\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                      </mwc-button>\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get attachmentField() {\r\n    return html`\r\n      <div class=\"container my-4\">\r\n        <div class=\"row justify-center\">\r\n          <div class=\"col-md-6 col-lg-6\">\r\n            <h4 class=\"font-semibold my-2\">Select Attachment</h4>\r\n            <file-input id=\"excel\" name=\"excel\" hasLabel label=\"Add Attachment\" required>\r\n            </file-input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    \r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    await POST_MembershipRegisterExcel();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport { ACTIVE_PAGE__ } from \"@@addons/functions/active_page\";\r\nimport { tokenLogin } from \"@@addons/functions/login/main\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport './form/create';\r\nimport { CONSTANTS } from '@@addons/constants';\r\n\r\n\r\n@customElement(\"membership-registration-excel\")\r\nexport class MembershipRegistrationExcel extends LitElement {\r\n  constructor() {\r\n    super();\r\n    ACTIVE_PAGE__();\r\n  }\r\n\r\n  @property({ type: String })\r\n  public email?: string;\r\n\r\n  @property({ type: Number })\r\n  public mId?: number;\r\n\r\n  @property({ type: Number })\r\n  public clientId?: number;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    await tokenLogin(this.email, this.mId, \"client_tokenLogin\");\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    return html`\r\n      <a href=\"${CONSTANTS.URLS.PDB_CLIENT}assets/v2/samples/new%20Excel%20Registration.xlsx\">\r\n        <mwc-button icon=\"download\" label=\"Download Template\" class=\"success\" raised></mwc-button>\r\n      </a>\r\n      <membership-registration-excel-create CLIENT_ID=\"${this.clientId}\"></membership-registration-excel-create>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n"],"names":["root","factory","exports","module","define","amd","self","ACTIVE_PAGE__","$menus","document","querySelectorAll","$page","URL","substring","lastIndexOf","split","forEach","$menu","urls","getAttribute","u","length","url","setAttribute","verifyToken","email","_id_","type","CONSTANTS","cookieName","token","get_cookie","formData","JSON","stringify","base64Decode","date","now","Date","Math","abs","getTime","get_differences","http","method","body","then","response","jsonData","user","expiry","base64Encode","String","set_cookies","set_cookies_minutes","toUTCString","generateNewToken","tokenLogin","id","window","unknowable","ops","urlQueryParams","urlSearchParams","URLSearchParams","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsJoin","object","urlStr","index","POST_MembershipRegisterExcel","_get_cookie","getUserLoginInfoCookie","formContainer","querySelector","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","headers","Authorization","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","unknownError","errors","e","_errors","Array","isArray","err","errormsg","error","push","__errors","prototype","hasOwnProperty","call","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","reload","MultipleWidgets","LitElement","constructor","super","_widget","html","no_delete","single","_single","widget","this","requestUpdate","connectedCallback","disconnectedCallback","render","nothing","deleteQuestion","preventDefault","remove","firstUpdated","createRenderRoot","property","Number","Boolean","customElement","MembershipRegistrationExcelCreate","CLIENT_ID","_data","undefined","form","attachmentField","submitForm","styles","css","MembershipRegistrationExcel","mId","clientId"],"sourceRoot":""}