{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/membership/groupings/group_subgroup/groups/edit.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/member_categories/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/group/patch.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/view/membership/groupings/group_subgroup/groups/edit.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","import { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"../member_categories\";\r\n\r\nexport interface GroupingsGroup_I {\r\n  id: number,\r\n  clientId?: number,\r\n  group?: string,\r\n  branchId?: number,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  createdBy?: number,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\nexport function GroupingsGroup_S(data: any): GroupingsGroup_I {\r\n  // console.log({data});\r\n  \r\n  const groupingsGroup_S: GroupingsGroup_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    group: String(data['group']),\r\n    branchId: Number(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsGroup_S;\r\n}","export interface GroupingsMemberCategories_I {\r\n  id: number,\r\n  category: string,\r\n  clientId?: number,\r\n  createdBy?: number,\r\n  date?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\nexport function GroupingsMemberCategories_S(data: any): GroupingsMemberCategories_I {\r\n  // console.log({data});\r\n\r\n  const groupingsMemberCategories_S: GroupingsMemberCategories_I = {\r\n    id: typeof data == \"number\" ? data: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    category: String(data['category']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsMemberCategories_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_GroupingsGroup(ID: Number, ): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-groupings-group\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Group?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '../../../members/select-member-type';\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { GroupingsMemberCategories_I } from \"@@addons/interfaces/members/groupings/member_categories\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { GET_MemberGroupingsMemberCategories } from \"@@addons/network/members/groupings/member_categories\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { urlQueryParamsGet } from \"@@addons/functions/url_query_params\";\r\nimport { GroupingsGroup_I, GroupingsGroup_S } from \"@@addons/interfaces/members/groupings/group\";\r\nimport { GET_MemberGroupingsGroups } from \"@@addons/network/members/groupings/group\";\r\nimport { PATCH_GroupingsGroup } from \"@@addons/network/members/groupings/group/group/patch\";\r\n\r\n\r\n@customElement(\"membership-groupings-group_subgroup-group-edit\")\r\nexport class MembershipGroupingsGroupSubgroupGroupEdit extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private groupId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  private groupIdEnc?: string = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupingsGroup_I[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n        \r\n      }\r\n    }\r\n\r\n    this.getGroupId();\r\n    this.getGroup(this.groupId);\r\n    await this.getBranches();\r\n    await this.getClientMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this._groups.length < 1) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._groups === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Group </span>: Not Found</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const GROUP = this._groups[0];\r\n    console.log({GROUP});\r\n    \r\n    \r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Change Group</h1>\r\n                  <h3 class=\"h3\">Update Group!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"members-groupings-group\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                    <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n                      name=\"_branchId_\" id=\"_branchId_\"  outlined required>\r\n                      <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                      ${this._branches.map((value) => {\r\n                        if (value.id === GROUP.branchId) {\r\n                          return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                        }\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n                    <pdb-membership-select-member-type defaultValue=\"${String(GROUP.memberCategoryId.id)}\" \r\n                      name=\"_memberCategoryId_\" id=\"_memberCategoryId_\"\r\n                      label=\"Select Member Category\" outlined required>\r\n                    </pdb-membership-select-member-type>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Group</h4>\r\n                    <mwc-textfield name=\"group\" id=\"group\" label=\"Enter Group\"\r\n                      outlined required value=\"${GROUP.group}\">\r\n                    </mwc-textfield>\r\n                  </div>\r\n                </div>\r\n      \r\n                <div class=\"form-input-container\">\r\n                  <mwc-button label=\"Update\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                  </mwc-button>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    ...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getGroupId() {\r\n    let groupId = urlQueryParamsGet('view-group');\r\n    console.log({ groupId });\r\n    let _groupId = groupId !== null ? base64Decode(groupId) : null;\r\n    this.groupId = Number.isNaN(_groupId) ? null : Number(_groupId);\r\n    console.log({ \"this.groupId\": this.groupId });\r\n    this.groupIdEnc = base64Encode(String(this.groupId), true);\r\n  }\r\n\r\n  private async getGroup(ID: number) {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(ID);\r\n    if (_networkResponse !== null) {\r\n      if (_networkResponse.response.success && 'group' in _networkResponse.response.data) {\r\n        this._groups = [GroupingsGroup_S(_networkResponse.response.data)];\r\n        return;\r\n      }\r\n    }\r\n    this._groups = null;\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    this._branches = [...this._branches, ...__branches];\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    this._memberCategories = [...this._memberCategories, ...__memberCategories];\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await PATCH_GroupingsGroup(this.groupId);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","urlQueryParams","urlSearchParams","URLSearchParams","window","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsJoin","object","urlStr","index","userLoginInfo","setActiveBranchIdCookie","stringData","JSON","stringify","set_cookies","base64Encode","removeActiveBranchIdCookie","getActiveBranchIdCookie","get_cookie","_cookie","base64Decode","cookie","parse","clientBranchInfo_S","ClientBranch_S","id","Number","name","String","accountId","createdBy","creationDate","Date","updatedBy","updateDate","GroupingsGroup_S","clientId","group","branchId","memberCategoryId","GroupingsMemberCategories_S","date","category","GET_ClientBranches","type","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","console","errorHttp","PATCH_GroupingsGroup","ID","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","e","err","errormsg","push","res","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","reload","GET_MemberGroupingsGroups","url_params","MembershipGroupingsGroupSubgroupGroupEdit","LitElement","constructor","super","startSearchPage","accountType","selectedBranch","groupId","groupIdEnc","_userLoginInfo","_activeBranchId","_memberCategories","_branches","_groups","connectedCallback","activeBranchId","this","user","getGroupId","getGroup","getBranches","getClientMemberCategories","disconnectedCallback","render","html","GROUP","log","map","submitForm","firstUpdated","_groupId","isNaN","_networkResponse","__branches","GET_MemberGroupingsMemberCategories","__memberCategories","preventDefault","createRenderRoot","styles","css","property","customElement"],"sourceRoot":""}