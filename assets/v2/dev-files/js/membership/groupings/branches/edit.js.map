{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/membership/groupings/branches/edit.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/put.ts","webpack://webpackNumbers/./src/view/membership/groupings/branches/edit.ts","webpack://webpackNumbers/./src/view/membership/groupings/branches/forms/edit.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { get_cookie } from \"@@addons/functions/cookies\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { base64Decode } from \"@@addons/functions/base64\";\r\nimport { LoginTokenType_I } from \"@@addons/interfaces/login_token\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { verifyToken } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null, loginTokenType: LoginTokenType_I = \"client_tokenLogin\") {\r\n  \r\n  // @ts-ignore\r\n  const WsUoI = String(window.supersecret.unknowable.ops.id);\r\n  // @ts-ignore\r\n  const WsUoE = String(window.supersecret.unknowable.ops.email);\r\n\r\n  await verifyToken(WsUoE, WsUoI, loginTokenType);\r\n  const _get_cookie = base64Decode(get_cookie(loginTokenType));\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { get_cookie } from \"@@addons/functions/cookies\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { base64Decode } from \"@@addons/functions/base64\";\r\nimport { LoginTokenType_I } from \"@@addons/interfaces/login_token\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { verifyToken } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_ClientBranch(ID: Number, loginTokenType: LoginTokenType_I = \"client_tokenLogin\"): Promise<any> {\r\n\r\n  // @ts-ignore\r\n  const WsUoI = String(window.supersecret.unknowable.ops.id);\r\n  // @ts-ignore\r\n  const WsUoE = String(window.supersecret.unknowable.ops.email);\r\n\r\n  await verifyToken(WsUoE, WsUoI, loginTokenType);\r\n  const _get_cookie = base64Decode(get_cookie(loginTokenType));\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-branch\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Branch?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport { ACTIVE_PAGE__ } from \"@@addons/functions/active_page\";\r\nimport { tokenLogin } from \"@@addons/functions/login\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport './forms/edit';\r\n\r\n\r\n@customElement(\"membership-groupings-branches-edit\")\r\nexport class MembershipGroupingsBranchesEdit extends LitElement {\r\n  constructor() {\r\n    super();\r\n    ACTIVE_PAGE__();\r\n  }\r\n\r\n  @property({ type: String })\r\n  public email?: string;\r\n\r\n  @property({ type: Number })\r\n  public mId?: number;\r\n\r\n  @property({ type: Number })\r\n  public clientId?: number;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    await tokenLogin(this.email, this.mId, \"client_tokenLogin\");\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    return html`\r\n      <membership-groupings-branches-edit-branch CLIENT_ID=\"${this.clientId}\"></membership-groupings-branches-edit-branch>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n","import '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { urlQueryParams, urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { ClientBranches_I } from '@@addons/interfaces/clients/branches';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { PUT_ClientBranch } from '@@addons/network/clients/branches/put';\r\n\r\n\r\n@customElement(\"membership-groupings-branches-edit-branch\")\r\nexport class MembershipGroupingsBranchesEditBranch extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public CLIENT_ID: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public _data?: Array<string> = [];\r\n\r\n  @property({ type: Object })\r\n  private urlQueryParams?: { [k: string]: string; } = undefined;\r\n\r\n  private __branch: NetworkCallResponse_I<ClientBranches_I> = null;\r\n\r\n  public set _branch(value: NetworkCallResponse_I<ClientBranches_I>) {\r\n    this.__branch = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _branch(): NetworkCallResponse_I<ClientBranches_I> {\r\n    return this.__branch;\r\n  }\r\n\r\n  @property({ type: Number })\r\n  private branchId?: number = 0;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    this.urlQueryParams = urlQueryParams();\r\n    this.getBranchId();\r\n    \r\n    await this.getClientBranch();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._branch === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else if (this._branch === undefined) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Branch</span>: undefined error</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.form}\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get form(): TemplateResult {\r\n    return html`\r\n      <div class=\"form-container\">\r\n        <div class=\" !px-0\">\r\n          <div class=\"-row !px-0\">\r\n            <div class=\"-col-md-12\">\r\n              <header class=\"header warning -col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Groupings: Branch</h1>\r\n                  <h3 class=\"h3\">Edit Branch</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"client-branch\">\r\n                <div class=\"p-0 m-0\" show-attachmentField=\"all\">\r\n                  ${this.branchField}\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-12 col-lg-12\">\r\n                    <input type=\"hidden\" name=\"clientId\" id=\"clientId\" value=\"${this.CLIENT_ID}\"/>\r\n                    <div class=\"form-input-container\">\r\n                      ${this.branchId === 1 ? html`` : html`\r\n                        <mwc-button label=\"Update\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                        </mwc-button>\r\n                      `}\r\n                    </div>\r\n\r\n                    <div class=\"flex form-input-container items-center text-center\">\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                      <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                        Lets go digital...\r\n                      </label>\r\n                      <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get branchField() {\r\n    let branch: ClientBranches_I = null;\r\n    // console.log({\"this._branch\": this._branch})\r\n    if (this._branch !== null) {\r\n      if (this._branch.data !== undefined) {\r\n        if (Array.isArray(this._branch.data)) {\r\n          branch = this._branch.data.length > 0 ? this._branch.data[0] : {id: undefined, name: \"\"};\r\n        } else {\r\n          branch = this._branch.data;\r\n        }\r\n      } else {\r\n        branch = {id: undefined, name: \"\"};\r\n      }\r\n    } else {\r\n      branch = {id: undefined, name: \"\"};\r\n    }\r\n    return html`\r\n      <div class=\"container my-4\">\r\n        <div class=\"row justify-center\">\r\n          <div class=\"col-md-6 col-lg-6\">\r\n            <h4 class=\"font-semibold my-2\">Enter Branch</h4>\r\n            <mwc-textfield name=\"name\" type=\"text\" class=\"w-full\" id=\"name\" value=\"${branch.id === undefined ? \"\": branch.name}\" label=\"Enter branch Name\" outlined required>\r\n            </mwc-textfield>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    \r\n  }\r\n\r\n  private getBranchId() {\r\n    let branchId = urlQueryParamsGet('branch-id');\r\n    let _branchId = branchId !== null ? Number(branchId) : null;\r\n    this.branchId = Number.isNaN(_branchId) ? null : _branchId;\r\n    // console.log({ \"this.urlQueryParams\": this.urlQueryParams, \"this.branchId\": this.branchId });\r\n  }\r\n\r\n  private async getClientBranch() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>(this.branchId);\r\n\r\n    if (_networkResponse === null) {\r\n      this._branch = undefined;\r\n    } else {\r\n      this._branch = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    await PUT_ClientBranch(this.branchId);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","urlQueryParams","urlSearchParams","URLSearchParams","window","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsJoin","object","urlStr","index","GET_ClientBranches","type","loginTokenType","WsUoI","String","supersecret","unknowable","ops","id","WsUoE","email","verifyToken","_get_cookie","base64Decode","get_cookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","NetWorkCallResponses","error","console","errorHttp","PUT_ClientBranch","ID","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","e","err","errormsg","push","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","reload","MembershipGroupingsBranchesEdit","LitElement","constructor","super","ACTIVE_PAGE__","connectedCallback","tokenLogin","this","mId","disconnectedCallback","render","html","clientId","firstUpdated","createRenderRoot","property","Number","customElement","MembershipGroupingsBranchesEditBranch","CLIENT_ID","_data","undefined","__branch","branchId","_branch","requestUpdate","getBranchId","getClientBranch","form","branchField","submitForm","branch","data","Array","isArray","name","_branchId","isNaN","_networkResponse","preventDefault","styles","css"],"sourceRoot":""}