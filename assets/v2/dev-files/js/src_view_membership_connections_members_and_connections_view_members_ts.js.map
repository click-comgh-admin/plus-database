{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/src_view_membership_connections_members_and_connections_view_members_ts.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/interfaces/location/constituency.ts","webpack://webpackNumbers/./src/addons/interfaces/location/country.ts","webpack://webpackNumbers/./src/addons/interfaces/location/district.ts","webpack://webpackNumbers/./src/addons/interfaces/location/electoral_area.ts","webpack://webpackNumbers/./src/addons/interfaces/location/region.ts","webpack://webpackNumbers/./src/addons/interfaces/members/user/index.ts","webpack://webpackNumbers/./src/addons/network/members/connections/accounts/delete.ts","webpack://webpackNumbers/./src/addons/network/members/membership/users/index.ts","webpack://webpackNumbers/./src/view/membership/connections/members_and_connections/view_members.ts"],"sourcesContent":["export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","import { District_I, District_S, _District_D } from \"./district\";\r\nimport { Region_I, Region_S, _Region_D } from \"./region\";\r\n\r\nexport interface Constituency_I {\r\n  id?: number,\r\n  regionId?: Region_I,\r\n  districtId?: District_I,\r\n  location?: string,\r\n}\r\nexport function Constituency_S(data: any): Constituency_I {\r\n  // console.log({data});\r\n  const constituency_S: Constituency_I = {\r\n    id: Number(data['id']),\r\n    regionId: ('regionId' in data) ? Region_S(data['regionId']) : _Region_D(),\r\n    districtId: ('districtId' in data) ? District_S(data['districtId']) : _District_D(),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return constituency_S;\r\n}\r\nexport function _Constituency_D(): Constituency_I {\r\n  // console.log({data});\r\n  const constituency_S: Constituency_I = {\r\n    id: 0,\r\n    regionId: _Region_D(),\r\n    districtId: _District_D(),\r\n    location: \"-\",\r\n  };\r\n\r\n  return constituency_S;\r\n}","export interface Country_I {\r\n  id?: number,\r\n  name?: string,\r\n  short?: string,\r\n  code?: string,\r\n}\r\nexport function Country_S(data: any): Country_I {\r\n  // console.log({data});\r\n  const _data = Array.isArray(data) ? data[0] : data;\r\n  const country_S: Country_I = {\r\n    id: _data['id'],\r\n    name: String(_data['name']),\r\n    short: String(_data['short']),\r\n    code: String(_data['code']),\r\n  };\r\n\r\n  return country_S;\r\n}\r\nexport function _Country_D(): Country_I {\r\n  const country_S: Country_I = {\r\n    id: 0,\r\n    name: \"-\",\r\n    short: \"-\",\r\n    code: \"-\",\r\n  };\r\n\r\n  return country_S;\r\n}","import { Region_I, Region_S, _Region_D } from \"./region\";\r\n\r\nexport interface District_I {\r\n  id?: number,\r\n  regionId?: Region_I,\r\n  location?: string,\r\n}\r\nexport function District_S(data: any): District_I {\r\n  // console.log({data});\r\n  const district_S: District_I = {\r\n    id: Number(data['id']),\r\n    regionId: ('regionId' in data) ? Region_S(data['regionId']) : _Region_D(),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return district_S;\r\n}\r\nexport function _District_D(): District_I {\r\n  // console.log({data});\r\n  const district_S: District_I = {\r\n    id: 0,\r\n    regionId: _Region_D(),\r\n    location: \"-\",\r\n  };\r\n\r\n  return district_S;\r\n}","import { District_I, District_S, _District_D } from \"./district\";\r\nimport { Region_I, Region_S, _Region_D } from \"./region\";\r\n\r\nexport interface ElectoralArea_I {\r\n  id?: number,\r\n  regionId?: Region_I,\r\n  districtId?: District_I,\r\n  location?: string,\r\n}\r\nexport function ElectoralArea_S(data: any): ElectoralArea_I {\r\n  // console.log({data});\r\n  const electoralArea_S: ElectoralArea_I = {\r\n    id: Number(data['id']),\r\n    regionId: ('regionId' in data) ? Region_S(data['regionId']) : _Region_D(),\r\n    districtId: ('districtId' in data) ? District_S(data['districtId']) : _District_D(),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return electoralArea_S;\r\n}\r\nexport function _ElectoralArea_D(): ElectoralArea_I {\r\n  // console.log({data});\r\n  const electoralArea_S: ElectoralArea_I = {\r\n    id: 0,\r\n    regionId: _Region_D(),\r\n    districtId: _District_D(),\r\n    location: \"-\",\r\n  };\r\n\r\n  return electoralArea_S;\r\n}","export interface Region_I {\r\n  id?: number,\r\n  location?: string,\r\n}\r\nexport function Region_S(data: any): Region_I {\r\n  // console.log({data});\r\n  const region_S: Region_I = {\r\n    id: Number(data['id']),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return region_S;\r\n}\r\nexport function _Region_D(): Region_I {\r\n  const region_S: Region_I = {\r\n    id: 0,\r\n    location: \"-\",\r\n  };\r\n\r\n  return region_S;\r\n}","import { Constituency_I, Constituency_S, _Constituency_D } from \"@@addons/interfaces/location/constituency\"\r\nimport { Country_I, Country_S, _Country_D } from \"@@addons/interfaces/location/country\"\r\nimport { District_I, District_S, _District_D } from \"@@addons/interfaces/location/district\"\r\nimport { ElectoralArea_I, ElectoralArea_S, _ElectoralArea_D } from \"@@addons/interfaces/location/electoral_area\"\r\nimport { Region_I, Region_S, _Region_D } from \"@@addons/interfaces/location/region\"\r\n\r\nfunction null_string(params:any, replace: string = \"\") {\r\n  return String(params === null ? replace : params);\r\n}\r\nexport interface MembershipUser_I {\r\n  id?: number,\r\n  clientId?: number,\r\n  firstname?: string,\r\n  middlename?: string,\r\n  surname?: string,\r\n  gender?: number,\r\n  profilePicture?: string,\r\n  dateOfBirth?: Date,\r\n  phone?: string,\r\n  email?: string,\r\n  religion?: number,\r\n  nationality?: string,\r\n  countryOfResidence?: string,\r\n  stateProvince?: string,\r\n  region?: number,\r\n  district?: number,\r\n  constituency?: number,\r\n  electoralArea?: number,\r\n  community?: string,\r\n  hometown?: string,\r\n  houseNoDigitalAddress?: string,\r\n  digitalAddress?: string,\r\n  referenceId?: string,\r\n  branchId?: number,\r\n  accountType?: number,\r\n  memberType?: number,\r\n  level?: number,\r\n  status?: number,\r\n  lastUpdatedBy?: number,\r\n  date?: Date,\r\n  last_login?: Date,\r\n  countryInfo?: Country_I,\r\n  regionInfo?: Region_I,\r\n  districtInfo?: District_I,\r\n  constituencyInfo?: Constituency_I,\r\n  electoralareaInfo?: ElectoralArea_I,\r\n}\r\n\r\nexport function MembershipUser_S(data: any): MembershipUser_I {\r\n  // console.log({data});\r\n\r\n  const membershipUser_S: MembershipUser_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    firstname: String(data['firstname']),\r\n    middlename: null_string(data['middlename']),\r\n    surname: String(data['surname']),\r\n    gender: Number(data['gender']),\r\n    profilePicture: String(data['profilePicture']),\r\n    dateOfBirth: new Date(data['dateOfBirth']),\r\n    phone: String(data['phone']),\r\n    email: String(data['email']),\r\n    religion: Number(data['religion']),\r\n    nationality: String(data['nationality']),\r\n    countryOfResidence: String(data['countryOfResidence']),\r\n    stateProvince: String(data['stateProvince']),\r\n    region: Number(data['region']),\r\n    district: Number(data['district']),\r\n    constituency: Number(data['constituency']),\r\n    electoralArea: Number(data['electoralArea']),\r\n    community: String(data['community']),\r\n    hometown: String(data['hometown']),\r\n    houseNoDigitalAddress: String(data['houseNoDigitalAddress']),\r\n    digitalAddress: String(data['digitalAddress']),\r\n    referenceId: null_string(data['referenceId'], \"-\"),\r\n    accountType: Number(data['accountType']),\r\n    memberType: Number(data['memberType']),\r\n    branchId: Number(data['branchId']),\r\n    level: Number(data['level']),\r\n    status: Number(data['status']),\r\n    lastUpdatedBy: Number(data['lastUpdatedBy']),\r\n    date: new Date(data['date']),\r\n    last_login: new Date(data['last_login']),\r\n    countryInfo: ('countryInfo' in data) ? Country_S(data['countryInfo']) : _Country_D(),\r\n    regionInfo: ('regionInfo' in data) ? Region_S(data['regionInfo']) : _Region_D(),\r\n    districtInfo: ('districtInfo' in data) ? District_S(data['districtInfo']) : _District_D(),\r\n    constituencyInfo: ('constituencyInfo' in data) ? Constituency_S(data['constituencyInfo']) : _Constituency_D(),\r\n    electoralareaInfo: ('electoralareaInfo' in data) ? ElectoralArea_S(data['electoralareaInfo']) : _ElectoralArea_D(),\r\n  };\r\n\r\n  return membershipUser_S;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_UserConnectionAccount(ID: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-connection-account/' + ID,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Connection?',\r\n    text: \"Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MembershipUsers<Type>(ID: Number = null, url_params: string = \"\") {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, } from 'lit/decorators.js';\r\nimport \"@material/mwc-icon\";\r\nimport \"@material/mwc-icon-button\";\r\nimport \"../../../../assets/styles/views/home/dashboard.scss\";\r\nimport { DELETE_UserConnectionAccount } from '@@addons/network/members/connections/accounts/delete';\r\nimport { UserConnectionAccount_I } from '@@addons/interfaces/members/connections/accounts';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsGet, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { Button } from '@material/mwc-button';\r\nimport { QueryOptions } from 'select2';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport \"@material/mwc-select\";\r\nimport '@@addons/widgets/form/new/select';\r\nimport { UserConnectionType_I, UserConnectionType_S } from '@@addons/interfaces/members/connections/types';\r\nimport { GET_UserConnectionType } from '@@addons/network/members/connections/types';\r\nimport { MembershipUser_I, MembershipUser_S } from '@@addons/interfaces/members/user';\r\nimport { GET_MembershipUsers } from '@@addons/network/members/membership/users';\r\nimport { until } from 'lit/directives/until.js';\r\n\r\n\r\nexport function show_selection_member_id_filter(memberId: number) {\r\n  if (memberId === 0) {\r\n    return nothing;\r\n  } else {\r\n    const ___ = new PdbConnectionsMembersView();\r\n    return html`\r\n      <h4 class=\"font-semibold my-2\">\r\n        Current Selection: ${until(___.getMember(memberId), html`<span>Loading...</span>`)}\r\n      </h4>\r\n    `;\r\n  }\r\n}\r\n@customElement(\"pdb-connections-members-view\")\r\nexport class PdbConnectionsMembersView extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: Array })\r\n  private _connection_accounts: UserConnectionAccount_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage1: number = 0;\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"members/user-connection-account/member/\";\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }, isOpen: true,\r\n    });\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this._connection_accounts === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._connection_accounts === undefined) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Schedule </span>: undefined error</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n          filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1 overflow-x-scroll\">\r\n        <hr class=\"my-2\" />\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }, unmutableInputNames: [], isOpen: true,\r\n    });\r\n    \r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_memberId = \"memberId\";\r\n\r\n    let filterNameId_filter_memberIdVal: number = 0;\r\n\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = Number(_urlQueryParams[key]);\r\n      value = Number.isNaN(value) ? 0 : value;\r\n      if (key === filterNameId_filter_memberId) {\r\n        filterNameId_filter_memberIdVal = value;\r\n      }\r\n    }\r\n\r\n    const memberField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <h4 class=\"font-semibold my-2\">Select Member</h4>\r\n          ${show_selection_member_id_filter(filterNameId_filter_memberIdVal)}\r\n          <select-input class=\"w-100\" id=\"${filterNameId_filter_memberId}\" name=\"${filterNameId_filter_memberId}\" label=\"Select Member\"\r\n            .ajaxFetchProcessResponse=\"${this.processClientUserSearch1}\" startSearchPage=\"${this.startSearchPage1}\"\r\n            .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams1}\"\r\n            ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search\"></select-input>\r\n      </div>`;\r\n\r\n    returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          ${memberField}\r\n          <div class=\"col-xl-12 col-md-10\">\r\n            <div class=\"form-input-container mt-1\">\r\n              <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n              <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private processClientUserSearch1(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"memberId\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const member: MembershipUser_I = MembershipUser_S(item);\r\n        \r\n        const id = member.id;\r\n        const fullName = `${member.firstname} ${member.middlename} ${member.surname}`;\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n\r\n\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private get ajaxFetchUrlParams1(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"\", value: \"\" }\r\n    ]\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get getMemberId() {\r\n    const filterNameId_filter_memberId = \"memberId\";\r\n    let _memberId = urlQueryParamsGet(filterNameId_filter_memberId);\r\n    const memberId = Number.isNaN(_memberId) ? 0 : Number(_memberId);\r\n    // console.log({ \"this.meetingEventId\": this.meetingEventId });\r\n    return memberId;\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + this.getMemberId + \"?datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n\r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private renderMemberInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    // console.log({connectionInfo});\r\n    const memberId = connectionInfo.memberId;\r\n    const connectionId = connectionInfo.connectionId;\r\n    return `\r\n      <div class=\"flex flex-col\">\r\n        <div class=\"flex flex-col lg:flex-row m-1 justify-start\">\r\n          <div class=\"flex\">\r\n            <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Name</h6>\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${connectionId.firstname} ${connectionId.middlename}\r\n              ${connectionId.surname}</p>\r\n          </div>\r\n          <div class=\"m-1\"><mwc-icon>directions<mwc-icon/></div>\r\n          <div class=\"flex\">\r\n            <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Member Name</h6>\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${memberId.firstname} ${memberId.middlename} ${memberId.surname}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderClockInInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    // console.log({connectionInfo});\r\n    const connectionType = connectionInfo.type;    \r\n    return `\r\n      <div class=\"justify-center content-center\">\r\n        <mwc-icon-button class=\"ml-1 danger\" icon=\"delete_forever\" \r\n          delete-this-item=\"${connectionInfo.id}\" >\r\n        </mwc-icon-button>\r\n        <div class=\"flex flex-col\">\r\n          <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Type:</h6>\r\n          <div class=\"flex flex-col\">\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${connectionType.type}</p>\r\n            <p class=\"text-xs ml-1 whitespace-pre-wrap\">${connectionType.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_memberId = \"memberId\";\r\n\r\n    let newObject: any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_memberId)) {\r\n        // console.log({value, });\r\n\r\n        newObject[key] = value;\r\n      }\r\n    }\r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"__this\": __this, url });\r\n\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderMemberInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'inTime',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderClockInInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.deleteConnectionAction();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private deleteConnectionAction() {\r\n    document.querySelectorAll('[delete-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.deleteConnection(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  async deleteConnection(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userConnectionId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n\r\n    await DELETE_UserConnectionAccount(userConnectionId);\r\n  }\r\n\r\n  public async getMember(ID: number) {\r\n    const _networkResponse = await GET_MembershipUsers<MembershipUser_I>(ID);\r\n    if (_networkResponse === null) {\r\n      return \"???\";\r\n    } else {\r\n      // console.log({\"_networkResponse.response\": _networkResponse.response});\r\n      \r\n      if (_networkResponse.response.success && 'dateOfBirth' in _networkResponse.response.data) {\r\n        // console.log({ \"_networkResponse.response\": _networkResponse.response })\r\n        \r\n        const member: MembershipUser_I = MembershipUser_S(_networkResponse.response.data);\r\n        return `${member.firstname} ${member.middlename} ${member.surname}`;\r\n      } else {\r\n        return _networkResponse.response.message;\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","Constituency_S","id","Number","regionId","Region_S","_Region_D","districtId","District_S","_District_D","location","String","_Constituency_D","Country_S","_data","name","short","code","_Country_D","ElectoralArea_S","_ElectoralArea_D","null_string","params","replace","MembershipUser_S","clientId","firstname","middlename","surname","gender","profilePicture","dateOfBirth","Date","phone","email","religion","nationality","countryOfResidence","stateProvince","region","district","constituency","electoralArea","community","hometown","houseNoDigitalAddress","digitalAddress","referenceId","accountType","memberType","branchId","level","status","lastUpdatedBy","date","last_login","countryInfo","regionInfo","districtInfo","constituencyInfo","electoralareaInfo","DELETE_UserConnectionAccount","ID","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","title","text","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","e","err","push","res","console","errorHttp","postForm","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","reload","GET_MembershipUsers","url_params","show_selection_member_id_filter","memberId","nothing","___","PdbConnectionsMembersView","html","until","getMember","LitElement","constructor","super","_connection_accounts","startSearchPage1","datatablePathUrl","connectedCallback","this","filterBox","FilterFieldBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","isOpen","disconnectedCallback","render","undefined","toggleFilterFields","filterForm","table","firstUpdated","unmutableInputNames","returnHtml","_urlQueryParams","urlQueryParams","filterNameId_filter_memberId","filterNameId_filter_memberIdVal","ajaxHeader","key","isNaN","memberField","processClientUserSearch1","ajaxFetchUrlParams1","clear_filter","submit","page","TOTAL","count","RESULTS","results","SELECTOR","document","querySelector","processedData","i","item","member","_new","includes","total","totalShowing","param","__tableHeaders","__tableBody","__tableFoot","getMemberId","_memberId","urlQueryParamsGet","URL","urlQueryString","__dataTable","renderMemberInfo","type","connectionInfo","connectionId","renderClockInInfo","connectionType","description","newObject","_urlQueryParamsJoin","urlQueryParamsJoin","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","deleteConnectionAction","buttons","select","querySelectorAll","btn","addEventListener","deleteConnection","preventDefault","userConnectionId","currentTarget","getAttribute","_networkResponse","createRenderRoot","styles","css","query","Button","Element","HTMLFormElement","property","customElement"],"sourceRoot":""}