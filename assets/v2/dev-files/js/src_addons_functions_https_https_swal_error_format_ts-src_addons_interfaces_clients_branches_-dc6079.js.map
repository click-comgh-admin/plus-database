{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/src_addons_functions_https_https_swal_error_format_ts-src_addons_interfaces_clients_branches_-dc6079.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/user/organization_model/index.ts"],"sourcesContent":["export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","// To parse this data:\n//\n//   import { Convert, MembershipOrganizationUserModel } from \"./file\";\n//\n//   const membershipOrganizationUserModel = Convert.toMembershipOrganizationUserModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface MembershipOrganizationUserModel {\n    id?:                  number;\n    clientID?:            number;\n    organizationName?:    string;\n    contactPersonName?:   string;\n    organizationType?:    OrganizationType;\n    businessRegistered?:  boolean;\n    organizationPhone?:   string;\n    organizationEmail?:   string;\n    contactPersonGender?: number;\n    contactPersonPhoto?:  string;\n    dateOfIncorporation?: Date;\n    logo?:                string;\n    contactPersonPhone?:  string;\n    contactPersonEmail?:  string;\n    countryOfBusiness?:   string;\n    stateProvince?:       string;\n    region?:              number;\n    district?:            number;\n    constituency?:        number;\n    electoralArea?:       number;\n    community?:           string;\n    digitalAddress?:      string;\n    level?:               number;\n    status?:              number;\n    accountType?:         number;\n    memberType?:          number;\n    date?:                Date;\n    lastLogin?:           Date;\n    referenceID?:         string;\n    branchID?:            number;\n    certificates?:        null | Certificate[];\n}\n\nexport interface Certificate {\n    id?:         number;\n    memberID?:   number;\n    attachment?: Attachment;\n    date?:       Date;\n}\n\nexport interface Attachment {\n    id?:              number;\n    clientID?:        number;\n    attachment?:      string;\n    filename?:        string;\n    source?:          string;\n    size?:            string;\n    folderID?:        FolderID;\n    fileDescription?: string;\n    createdBy?:       number;\n    updatedBy?:       number;\n    updateDate?:      Date;\n    archived?:        boolean;\n    archivedBy?:      number;\n    archivedDate?:    Date;\n    date?:            Date;\n}\n\nexport interface FolderID {\n    id?:           number;\n    parentFolder?: null;\n    clientID?:     number;\n    branchID?:     number;\n    folder?:       string;\n    folderType?:   number;\n    createdBy?:    number;\n    updatedBy?:    number;\n    updateDate?:   Date;\n    date?:         Date;\n}\n\nexport interface OrganizationType {\n    id?:         number;\n    memberID?:   number;\n    clientID?:   number;\n    type?:       string;\n    createdBy?:  number;\n    updatedBy?:  number;\n    updateDate?: Date;\n    date?:       Date;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toMembershipOrganizationUserModel(json: string): MembershipOrganizationUserModel {\n        // console.log({\"json\": json})\n        return cast(JSON.parse(json), r(\"MembershipOrganizationUserModel\"));\n    }\n\n    public static membershipOrganizationUserModelToJson(value: MembershipOrganizationUserModel): string {\n        return JSON.stringify(uncast(value, r(\"MembershipOrganizationUserModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        m(\"\")\n        console.log(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    console.log(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    // console.log({\"jsonToJSProps(typ\": typ})\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    // console.log({\"val\": val, \"typ\": typ, \"getProps\": getProps, \"key\": key})\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    // console.log({\"val\": val, \"typ\": typ})\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"MembershipOrganizationUserModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"organizationName\", js: \"organizationName\", typ: u(null, \"\") },\n        { json: \"contactPersonName\", js: \"contactPersonName\", typ: u(null, \"\") },\n        { json: \"organizationType\", js: \"organizationType\", typ: u(null, r(\"OrganizationType\")) },\n        { json: \"businessRegistered\", js: \"businessRegistered\", typ: u(null, true) },\n        { json: \"organizationPhone\", js: \"organizationPhone\", typ: u(null, \"\") },\n        { json: \"organizationEmail\", js: \"organizationEmail\", typ: u(null, \"\") },\n        { json: \"contactPersonGender\", js: \"contactPersonGender\", typ: u(null, 0) },\n        { json: \"contactPersonPhoto\", js: \"contactPersonPhoto\", typ: u(null, \"\") },\n        { json: \"dateOfIncorporation\", js: \"dateOfIncorporation\", typ: u(null, Date) },\n        { json: \"logo\", js: \"logo\", typ: u(null, \"\") },\n        { json: \"contactPersonPhone\", js: \"contactPersonPhone\", typ: u(null, \"\") },\n        { json: \"contactPersonEmail\", js: \"contactPersonEmail\", typ: u(null, \"\") },\n        { json: \"countryOfBusiness\", js: \"countryOfBusiness\", typ: u(null, \"\") },\n        { json: \"stateProvince\", js: \"stateProvince\", typ: u(null, \"\") },\n        { json: \"region\", js: \"region\", typ: u(null, 0) },\n        { json: \"district\", js: \"district\", typ: u(null, 0) },\n        { json: \"constituency\", js: \"constituency\", typ: u(null, 0) },\n        { json: \"electoralArea\", js: \"electoralArea\", typ: u(null, 0) },\n        { json: \"community\", js: \"community\", typ: u(null, \"\") },\n        { json: \"digitalAddress\", js: \"digitalAddress\", typ: u(null, \"\") },\n        { json: \"level\", js: \"level\", typ: u(null, 0) },\n        { json: \"status\", js: \"status\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n        { json: \"memberType\", js: \"memberType\", typ: u(null, 0) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n        { json: \"last_login\", js: \"lastLogin\", typ: u(null, Date) },\n        { json: \"referenceId\", js: \"referenceID\", typ: u(null, \"\") },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, 0) },\n        { json: \"certificates\", js: \"certificates\", typ: u(null, a(r(\"Certificate\"))) },\n    ], false),\n    \"Certificate\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"memberId\", js: \"memberID\", typ: u(null, 0) },\n        { json: \"attachment\", js: \"attachment\", typ: u(null, r(\"Attachment\")) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n    \"Attachment\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"attachment\", js: \"attachment\", typ: u(null, \"\") },\n        { json: \"filename\", js: \"filename\", typ: u(null, \"\") },\n        { json: \"source\", js: \"source\", typ: u(null, \"\") },\n        { json: \"size\", js: \"size\", typ: u(null, \"\") },\n        { json: \"folderId\", js: \"folderID\", typ: u(null, r(\"FolderID\")) },\n        { json: \"fileDescription\", js: \"fileDescription\", typ: u(null, \"\") },\n        { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n        { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n        { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n        { json: \"archived\", js: \"archived\", typ: u(null, true) },\n        { json: \"archivedBy\", js: \"archivedBy\", typ: u(null, 0) },\n        { json: \"archivedDate\", js: \"archivedDate\", typ: u(null, Date) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n    \"FolderID\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"parentFolder\", js: \"parentFolder\", typ: u(null, null) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, 0) },\n        { json: \"folder\", js: \"folder\", typ: u(null, \"\") },\n        { json: \"folderType\", js: \"folderType\", typ: u(null, 0) },\n        { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n        { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n        { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n    \"OrganizationType\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"memberId\", js: \"memberID\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"type\", js: \"type\", typ: u(null, \"\") },\n        { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n        { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n        { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n};\n"],"names":["__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","ClientBranch_S","id","Number","name","String","accountId","createdBy","creationDate","Date","updatedBy","updateDate","clientBranchInfo_S","Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","invalidValue","typ","val","key","console","log","undefined","jsonToJS","map","props","p","js","jsToJSON","getProps","ref","typeMap","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","d","isNaN","valueOf","transformDate","transformPrimitive","u","o"],"sourceRoot":""}