{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/admin/user/edit.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/network/clients/users/index.ts","webpack://webpackNumbers/./src/view/admin/user/edit.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientUsers<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { base64Decode } from '@@addons/functions/base64';\r\nimport { urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { ClientUsers_I } from '@@addons/interfaces/clients/users';\r\nimport { GET_ClientUsers } from '@@addons/network/clients/users';\r\nimport '@material/mwc-circular-progress';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport '@@addons/widgets/alert';\r\nimport './form';\r\nimport { ClientUserAccess_I, ClientUserAccess_S } from '@@addons/interfaces/clients/users/access';\r\nimport { GET_ClientUserAccess } from '@@addons/network/clients/users/access';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\n\r\n\r\n@customElement(\"pdb-admin-user-edit-form\")\r\nexport class PdbAdminUserEditForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private userId?: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private loggedUserId?: number = 0;\r\n\r\n  @property({ type: Boolean })\r\n  private editAccess?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public page_type: \"mine\" | \"not-mine\" = \"mine\";\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  private __clientUser: NetworkCallResponse_I<ClientUsers_I> = null;\r\n\r\n  public set _clientUser(value: NetworkCallResponse_I<ClientUsers_I>) {\r\n    this.__clientUser = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _clientUser(): NetworkCallResponse_I<ClientUsers_I> {\r\n    return this.__clientUser;\r\n  }\r\n\r\n  private __clientUserAccess: NetworkCallResponse_I<ClientUserAccess_I> = null;\r\n\r\n  public set _clientUserAccess(value: NetworkCallResponse_I<ClientUserAccess_I>) {\r\n    this.__clientUserAccess = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _clientUserAccess(): NetworkCallResponse_I<ClientUserAccess_I> {\r\n    return this.__clientUserAccess;\r\n  }\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this.page_type === \"mine\") {\r\n      await this.getLoggedUserAccess();\r\n    }\r\n    this.getUserId();\r\n\r\n    if ((this.userId === 0) || (this.userId === null) || (Number.isNaN(this.userId))) { } else {\r\n      await this.getClientUser();\r\n      if (this._clientUser.success) {\r\n\r\n        if (this.page_type === \"not-mine\") {\r\n          await this.getLoggedUserAccess();\r\n        }\r\n\r\n        await this.getClientUserAccess();\r\n\r\n        if (this.userId === this.loggedUserId) {\r\n          this.page_type = \"mine\";\r\n        } else {\r\n          this.page_type = \"not-mine\";\r\n          // this.editAccess\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if ((this.userId === 0) || (this.userId === null) || (Number.isNaN(this.userId))) {\r\n      const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n      const content = html`\r\n        <div>\r\n          <p class=\"text-black mb-2\">User Not Found!</p>\r\n          <p class=\"text-black mb-2\"><small>Follow the link back to users page.</small></p>\r\n          <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\" href=\"/admin/user/accounts\"\r\n            label=\"Client Users Page\"></link-button>\r\n        </div>\r\n      `;\r\n      return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    } else {\r\n\r\n      if (this._clientUser === null) {\r\n        return html`\r\n          <div class=\"main-container\">\r\n            <div class=\"flex justify-center\">\r\n              <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n      if (this._clientUser === undefined) {\r\n        return html`\r\n          <div class=\"main-container\">\r\n            <div class=\"flex justify-center\">\r\n              <h4 class=\"text-red-600 text-lg\">\r\n                <span class=\"font-bold\">Schedule </span>: undefined error</h4>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n      return html`\r\n        <pdb-admin-user-form edit=\"true\" page_type=\"${this.page_type}\" ?editaccess=\"${this.editAccess}\" .clientUser=\"${this._clientUser}\"\r\n          .clientUserAccess=\"${this._clientUserAccess}\">\r\n        </pdb-admin-user-form>\r\n      `;\r\n    }\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getUserId() {\r\n    if (this.page_type === \"mine\") {\r\n      this.userId = this.loggedUserId;\r\n    } else {\r\n      let userId = urlQueryParamsGet('user-id');\r\n      // console.log({ userId });\r\n      let _userId = userId !== null ? base64Decode(userId) : null;\r\n      this.userId = Number.isNaN(_userId) ? null : Number(_userId);\r\n    }\r\n    // console.log({ \"this.userId\": this.userId });\r\n  }\r\n\r\n  private async getClientUser() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    const _networkResponse = await GET_ClientUsers<ClientUsers_I>(this.userId, \"?branchId=\" + branchId);\r\n    if (_networkResponse === null) {\r\n      this._clientUser = undefined;\r\n    } else {\r\n      this._clientUser = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  private async getClientUserAccess() {\r\n    // ClientUserAccess_S\r\n    const _networkResponse = await GET_ClientUserAccess<ClientUserAccess_I>(null, \"?userId=\" + this.userId);\r\n    if (_networkResponse === null) {\r\n      this._clientUserAccess = undefined;\r\n    } else {\r\n      this._clientUserAccess = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  private async getLoggedUserAccess() {\r\n    let userId = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userId = this._userLoginInfo[0].user.id;\r\n      }\r\n    }\r\n    this.loggedUserId = userId;\r\n    console.log({\"this.loggedUserId\": this.loggedUserId});\r\n    console.log({\"this._userLoginInfo\": this._userLoginInfo});\r\n    const _networkResponse = await GET_ClientUserAccess<ClientUserAccess_I>(null, \"?logged_user_this&userId=\" + this.loggedUserId);\r\n    if (_networkResponse !== null) {\r\n      if (_networkResponse.response.success) {\r\n        const datas = _networkResponse.response.data;\r\n        if (Array.isArray(datas)) {\r\n          datas.forEach((data: ClientUserAccess_I) => {\r\n            data = ClientUserAccess_S(data);\r\n            if (data.page.id === 14) {\r\n              // \"id\": 14,\r\n              // \"page\": \"Account Users\"\r\n              this.editAccess = true;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","urlQueryParams","urlSearchParams","URLSearchParams","window","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsJoin","object","urlStr","index","GET_ClientUsers","ID","url_params","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","PdbAdminUserEditForm","LitElement","constructor","super","userId","loggedUserId","editAccess","page_type","_activeBranchId","_userLoginInfo","__clientUser","__clientUserAccess","_clientUser","this","requestUpdate","_clientUserAccess","connectedCallback","activeBranchId","getActiveBranchIdCookie","getLoggedUserAccess","getUserId","Number","isNaN","getClientUser","success","getClientUserAccess","disconnectedCallback","render","header","html","content","undefined","firstUpdated","_userId","base64Decode","branchId","id","_networkResponse","response","GET_ClientUserAccess","length","user","log","datas","data","Array","isArray","forEach","ClientUserAccess_S","page","createRenderRoot","styles","css","property","type","Boolean","String","customElement"],"sourceRoot":""}