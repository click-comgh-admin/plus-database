{"version":3,"file":"../../../client_dashboard/assets/v2/dev-files/js/admin/user/view.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/users/group_subgroup.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/users/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/member_categories/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/subgroup/index.ts","webpack://webpackNumbers/./src/addons/network/clients/users/delete.ts","webpack://webpackNumbers/./src/addons/network/clients/users/group_subgroup.ts","webpack://webpackNumbers/./src/addons/network/clients/users/index.ts","webpack://webpackNumbers/./src/addons/network/clients/users/page_access/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/widgets/profile_photo/index.ts","webpack://webpackNumbers/./src/view/admin/user/view.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","import { GroupingsGroup_I, GroupingsGroup_S } from \"@@addons/interfaces/members/groupings/group\";\r\nimport { GroupingsSubGroup_I, GroupingsSubGroup_S } from \"@@addons/interfaces/members/groupings/subgroup\";\r\n\r\nexport interface ClientUserGroupSubgroup_I {\r\n  id?: number,\r\n  clientId?: number,\r\n  userId?: number,\r\n  group?: Array<GroupingsGroup_I>,\r\n  subgroup?: Array<GroupingsSubGroup_I>,\r\n  date?: Date,\r\n}\r\n\r\nexport function ClientUserGroupSubgroup_S(data: any): ClientUserGroupSubgroup_I {\r\n  // console.log({data});\r\n\r\n  let group: Array<GroupingsGroup_I> = [],\r\n    subgroup: Array<GroupingsSubGroup_I> = [],\r\n    clientUserGroupSubgroup_S: ClientUserGroupSubgroup_I = {};;\r\n\r\n  if (data !== undefined) {\r\n    if ('group' in data) {\r\n      if (Array.isArray(data['group'])) {\r\n        group = data['group'].map((value) => {\r\n          return GroupingsGroup_S(value);\r\n        });\r\n      }\r\n    }\r\n    if ('subgroup' in data) {\r\n      if (Array.isArray(data['subgroup'])) {\r\n        subgroup = data['subgroup'].map((value) => {\r\n          return GroupingsSubGroup_S(value);\r\n        });\r\n      }\r\n    }\r\n    clientUserGroupSubgroup_S = {\r\n      id: Number(data['id']),\r\n      clientId: Number(data['clientId']),\r\n      userId: Number(data['userId']),\r\n      group: group,\r\n      subgroup: subgroup,\r\n      date: new Date(data['date']),\r\n    };\r\n  }\r\n\r\n  return clientUserGroupSubgroup_S;\r\n}","export interface ClientUsers_I {\r\n  id?: number,\r\n  firstname?: string,\r\n  surname?: string,\r\n  gender?: number,\r\n  profilePicture?: string,\r\n  dateOfBirth?: Date,\r\n  phone?: string,\r\n  email?: string,\r\n  role?: number,\r\n  accountId?: number,\r\n  branchId?: number,\r\n  level?: number,\r\n  status?: number,\r\n  lastUpdatedBy?: number,\r\n  date?: Date,\r\n  last_login?: Date,\r\n}\r\nexport interface ClientUserShort_I {\r\n  id?: number,\r\n  accountId?: number,\r\n  branchId?: number,\r\n  firstname?: string,\r\n  surname?: string,\r\n  phone?: string,\r\n  email?: string,\r\n  profilePicture?: string,\r\n}\r\n\r\nexport function ClientUsers_S(data: any): ClientUsers_I {\r\n  // console.log({data});\r\n  \r\n  const clientUsers_S: ClientUsers_I = {\r\n    id: Number(data['id']),\r\n    firstname: String(data['firstname']),\r\n    surname: String(data['surname']),\r\n    gender: Number(data['gender']),\r\n    profilePicture: String(data['profilePicture']),\r\n    dateOfBirth: new Date(data['dateOfBirth']),\r\n    phone: String(data['phone']),\r\n    email: String(data['email']),\r\n    role: Number(data['role']),\r\n    accountId: Number(data['accountId']),\r\n    branchId: Number(data['branchId']),\r\n    level: Number(data['level']),\r\n    status: Number(data['status']),\r\n    lastUpdatedBy: Number(data['lastUpdatedBy']),\r\n    date: new Date(data['date']),\r\n    last_login: new Date(data['last_login']),\r\n  };\r\n\r\n  return clientUsers_S;\r\n}","import { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"../member_categories\";\r\n\r\nexport interface GroupingsGroup_I {\r\n  id: number,\r\n  clientId?: number,\r\n  group?: string,\r\n  branchId?: number,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  createdBy?: number,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\nexport function GroupingsGroup_S(data: any): GroupingsGroup_I {\r\n  // console.log({data});\r\n  \r\n  const groupingsGroup_S: GroupingsGroup_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    group: String(data['group']),\r\n    branchId: Number(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsGroup_S;\r\n}","export interface GroupingsMemberCategories_I {\r\n  id: number,\r\n  category: string,\r\n  clientId?: number,\r\n  createdBy?: number,\r\n  date?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\nexport function GroupingsMemberCategories_S(data: any): GroupingsMemberCategories_I {\r\n  // console.log({data});\r\n\r\n  const groupingsMemberCategories_S: GroupingsMemberCategories_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    category: String(data['category']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsMemberCategories_S;\r\n}","import { GET_MemberGroupingsGroups } from \"@@addons/network/members/groupings/group\";\r\nimport { GroupingsGroup_I } from \"../group\";\r\nimport { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"../member_categories\";\r\n\r\nexport interface GroupingsSubGroup_I {\r\n  id: number,\r\n  clientId?: number,\r\n  groupId?: number,\r\n  groupName?: string,\r\n  branchId?: number,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  subgroup?: string,\r\n  createdBy?: number,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\nexport function GroupingsSubGroup_S(data: any): GroupingsSubGroup_I {\r\n  // console.log({data});\r\n  const groupId = data['groupId'];\r\n  const groupingsSubGroup_S: GroupingsSubGroup_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    groupId: Number(groupId['id']),\r\n    groupName: String(groupId['group']),\r\n    subgroup: String(data['subgroup']),\r\n    branchId: Number(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsSubGroup_S;\r\n}\r\n\r\n\r\nasync function getGroup(ID: number) {\r\n  const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(ID);\r\n  if (_networkResponse === null) {\r\n    return \"???\";\r\n  } else {\r\n    if (_networkResponse.response.success && 'group' in _networkResponse.response.data) {\r\n      \r\n      const group: GroupingsGroup_I = _networkResponse.response.data;\r\n      return group.group;\r\n    } else {\r\n      let message = \"\";\r\n      let _message = _networkResponse.response.message;\r\n      if (Array.isArray(_message)) {\r\n        message = \"Unknown Error!\";\r\n      } else {\r\n        message = _message;\r\n      }\r\n      return message;\r\n    }\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_ClientUser(ID: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user/' + ID,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove User?',\r\n    text: \"User will no longer be able to login. Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientUserGroupSubgroup<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user-group-subgroup'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientUsers<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientPageAccess<Type>(ID: Number = null, url_params: string = \"\") {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/user-access/pages'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from '@@addons/constants';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement('user-profile-photo')\r\nexport class UserProfilePhoto extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public url?: string;\r\n\r\n  @property({ type: String })\r\n  public type?: \"member\" | \"client\";\r\n\r\n  @property({ type: Boolean })\r\n  public rounded?: boolean;\r\n\r\n  /** URL TO OPEN ON CLICK*/\r\n  @property({ type: String })\r\n  public 'click-to-open'?: 'false' | string = 'false';\r\n\r\n  @property({ type: Number })\r\n  public size?: 16 | 32;\r\n\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({ \"this['click-to-open']\": this['click-to-open'] });\r\n\r\n\r\n    if (this.type === \"client\") {\r\n      this.setUpClientImage();\r\n    } else {\r\n      this.setUpMemberImage();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div @click=\"${this.openProfile}\"\r\n        class=\"h-${this.size} w-${this.size} items-center justify-center border-2 border-yellow-500 ${this.rounded ? 'rounded-full' : ''}\">\r\n        <img class=\"object-cover h-full w-full border-2 border-akwaaba-orange-light ${this.rounded ? 'rounded-full' : ''}\"\r\n          src=\"${this.url}\">\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private openProfile(event: any) {\r\n    event.preventDefault();\r\n\r\n    if (this['click-to-open'] !== \"false\") {\r\n      window.location.href = this['click-to-open'];\r\n    }\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private setUpMemberImage() {\r\n    if (this.url.includes(\"member/logo/\") || this.url.includes(\"member/profile/\")) {\r\n      this.url = this.url;\r\n    } else {\r\n      const parts = this.url.split('/');\r\n      const fileName = parts[parts.length - 1];\r\n      this.url = CONSTANTS.URLS.FILE_BUCKET_BASE_URL + \"/files/members/profile-picture/\" + fileName;\r\n    }\r\n  }\r\n\r\n  private setUpClientImage() {\r\n    if (this.url.includes(\"clients/profile-picture/\")) {\r\n      this.url = this.url;\r\n    } else {\r\n      const parts = this.url.split('/');\r\n      const fileName = parts[parts.length - 1];\r\n      this.url = CONSTANTS.URLS.FILE_BUCKET_BASE_URL + \"/files/clients/profile-picture/\" + fileName;\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/admin/user/main.scss';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, query } from 'lit/decorators.js';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { base64Decode, base64Encode } from '@@addons/functions/base64';\r\nimport { urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport { ClientUsers_I, ClientUsers_S } from '@@addons/interfaces/clients/users';\r\nimport { GET_ClientUsers } from '@@addons/network/clients/users';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport '@@addons/widgets/alert';\r\nimport '@@addons/widgets/profile_photo';\r\nimport '@material/mwc-tab';\r\nimport '@material/mwc-tab-bar';\r\nimport '@material/mwc-icon-button';\r\nimport { ClientUserAccess_I, ClientUserAccess_S } from '@@addons/interfaces/clients/users/access';\r\nimport { GET_ClientUserAccess } from '@@addons/network/clients/users/access';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { ClientPageAccess_I, ClientPageAccess_S } from '@@addons/interfaces/clients/page_access';\r\nimport { GET_ClientPageAccess } from '@@addons/network/clients/users/page_access';\r\nimport { Button } from '@material/mwc-button';\r\nimport { ClientUserGroupSubgroup_S, ClientUserGroupSubgroup_I } from '@@addons/interfaces/clients/users/group_subgroup';\r\nimport { GET_ClientUserGroupSubgroup } from '@@addons/network/clients/users/group_subgroup';\r\nimport { DELETE_ClientUser } from '@@addons/network/clients/users/delete';\r\n\r\n\r\n@customElement(\"pdb-admin-user-one\")\r\nexport class PdbAdminUserOne extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('#groupsSectionFormBtn')\r\n  private groupsSectionFormBtn: Button;\r\n\r\n  @query('#subGroupsSectionFormBtn')\r\n  private subGroupsSectionFormBtn: Button;\r\n\r\n  @property({ type: Number })\r\n  private userId?: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private loggedUserId?: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private formId: 1 | 2 = 1;\r\n\r\n  @property({ type: String })\r\n  public page_type: \"mine\" | \"not-mine\" = \"mine\";\r\n\r\n  @property({ type: Boolean })\r\n  private editAccess?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private memberProfileEditBaseUrl: string = \"/admin/user/update-account?user-id=\";\r\n\r\n  @property({ type: String })\r\n  private memberGroupSubgroupAddBaseUrl: string = \"/admin/user/add-group-subgroup?user-id=\";\r\n\r\n  @property({ type: String })\r\n  private memberGroupSubgroupEditBaseUrl: string = \"/admin/user/update-group-subgroup?user-id=\";\r\n\r\n  @property({ type: Array })\r\n  private _pageAccesses: ClientPageAccess_I[] = [];\r\n\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  private _clientUser: NetworkCallResponse_I<ClientUsers_I> = null;\r\n\r\n  public set clientUser(value: NetworkCallResponse_I<ClientUsers_I>) {\r\n    this._clientUser = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get clientUser(): NetworkCallResponse_I<ClientUsers_I> {\r\n    return this._clientUser;\r\n  }\r\n\r\n  private get _clientUserAccessDefault(): NetworkCallResponse_I<ClientUserAccess_I>{\r\n    const access: ClientUserAccess_I = {};\r\n    return {data: access, message: \"\", success: false}\r\n  }\r\n\r\n  private _clientUserAccess: NetworkCallResponse_I<ClientUserAccess_I> = this._clientUserAccessDefault;\r\n\r\n  public set clientUserAccess(value: NetworkCallResponse_I<ClientUserAccess_I>) {\r\n    this._clientUserAccess = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get clientUserAccess(): NetworkCallResponse_I<ClientUserAccess_I> {\r\n    return this._clientUserAccess;\r\n  }\r\n\r\n  private get _clientUserGroupSubgroupDefault(): NetworkCallResponse_I<ClientUserGroupSubgroup_I>{\r\n    const groupSubgroup: ClientUserGroupSubgroup_I = {};\r\n    return {data: groupSubgroup, message: \"\", success: false}\r\n  }\r\n\r\n  private _clientUserGroupSubgroup: NetworkCallResponse_I<ClientUserGroupSubgroup_I> = this._clientUserGroupSubgroupDefault;\r\n\r\n  public set clientUserGroupSubgroup(value: NetworkCallResponse_I<ClientUserGroupSubgroup_I>) {\r\n    this._clientUserGroupSubgroup = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get clientUserGroupSubgroup(): NetworkCallResponse_I<ClientUserGroupSubgroup_I> {\r\n    return this._clientUserGroupSubgroup;\r\n  }\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this.page_type === \"mine\") {\r\n      await this.getLoggedUserAccess();\r\n    }\r\n    this.getUserId();\r\n\r\n    if ((this.userId === 0) || (this.userId === null) || (Number.isNaN(this.userId))) { } else {\r\n      await this.getClientUser();\r\n      if (this.clientUser.success) {\r\n        await this.getPageAccesses();\r\n\r\n        if (this.page_type === \"not-mine\") {\r\n          await this.getLoggedUserAccess();\r\n        }\r\n\r\n        await this.getClientUserAccess();\r\n        await this.getClientUserGroupSubgroup();\r\n\r\n        if (this.userId === this.loggedUserId) {\r\n          this.page_type = \"mine\";\r\n        } else {\r\n          this.page_type = \"not-mine\";\r\n          // this.editAccess\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if ((this.userId === 0) || (this.userId === null) || (Number.isNaN(this.userId))) {\r\n      const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n      const content = html`\r\n        <div>\r\n          <p class=\"text-black mb-2\">User Not Found!</p>\r\n          <p class=\"text-black mb-2\"><small>Follow the link back to users page.</small></p>\r\n          <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\" href=\"/admin/user/accounts\"\r\n            label=\"Client Users Page\"></link-button>\r\n        </div>\r\n      `;\r\n      return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n    } else {\r\n\r\n      if (this.clientUser === null) {\r\n        return html`\r\n          <div class=\"main-container\">\r\n            <div class=\"flex justify-center\">\r\n              <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n      if (this.clientUser === undefined) {\r\n        return html`\r\n          <div class=\"main-container\">\r\n            <div class=\"flex justify-center\">\r\n              <h4 class=\"text-red-600 text-lg\">\r\n                <span class=\"font-bold\">Admin User </span>: undefined error</h4>\r\n            </div>\r\n          </div>\r\n        `;\r\n      }\r\n\r\n      if (this.clientUser.success === false) {\r\n        const header = html`<h4 class=\"text-white\">Error</h4>`;\r\n        const content = html`\r\n          <div>\r\n            <p class=\"text-black mb-2\">User Not Found!</p>\r\n            <p class=\"text-black mb-2\"><small>Follow the link back to users page.</small></p>\r\n            <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\" href=\"/admin/user/accounts\"\r\n              label=\"Client Users Page\"></link-button>\r\n          </div>\r\n        `;\r\n        return html`<alert-card warning .header=\"${header}\" .content=\"${content}\"></alert-card>`;\r\n      }\r\n      const clientUser = this.clientUser,\r\n        _data = clientUser.data,\r\n        DATA = ClientUsers_S(Array.isArray(_data) ? _data[0] : _data),\r\n        SUCCESS = clientUser.success;\r\n      const ID = SUCCESS ? base64Encode(String(DATA.id), true) : \"\";\r\n\r\n      const clientUserGroupSubgroup = this.clientUserGroupSubgroup,\r\n        _groupSubgroupData = clientUserGroupSubgroup.data,\r\n        GROUP_SUBGROUP = Array.isArray(_groupSubgroupData)\r\n          ? ClientUserGroupSubgroup_S(_groupSubgroupData[0]) : ClientUserGroupSubgroup_S(_groupSubgroupData),\r\n        GROUP_SUBGROUP_SUCCESS = clientUserGroupSubgroup.success;\r\n        // console.log({\"GROUP_SUBGROUP.id\": GROUP_SUBGROUP.id});\r\n        \r\n      return html`\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-md-6 col-lg-4 my-1\">\r\n            <div class=\"shadow\">\r\n              <div class=\"p-3 border-b-2\">\r\n                <h4 class=\"uppercase text-base font-bold\">\r\n                  ${SUCCESS ? html`${DATA.firstname} ${DATA.surname}'s` : nothing} Photo\r\n                </h4>\r\n              </div>\r\n              <div class=\"p-3 flex flex-col items-center\">\r\n                <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\" type=\"client\"\r\n                  url=\"${SUCCESS ? DATA.profilePicture : \" profile.png\"}\" size=\"32\">\r\n                </user-profile-photo>\r\n              </div>\r\n              <div class=\"p-3 border-t-2 flex justify-end\">\r\n                <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\"\r\n                  href=\"/account/accounts?edit=photo&user=${ID}\" label=\"Edit\">\r\n                </link-button>\r\n              </div>\r\n            </div>\r\n            <div class=\"shadow my-2\">\r\n              <div class=\"p-3 border-b-2\">\r\n                <h4 class=\"uppercase text-base font-bold\">\r\n                  ${SUCCESS ? html`${DATA.firstname} ${DATA.surname}'s` : nothing} Group(s)/ Subgroup(s)\r\n                </h4>\r\n        \r\n                <mwc-tab-bar activeIndex=\"0\">\r\n                  <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth id=\"groupsSectionFormBtn\"\r\n                    label=\"Group\" @click=\"${this.displayGroupsSectionBtn}\"></mwc-tab>\r\n                  <mwc-tab stacked isMinWidthIndicator isFadingIndicator minWidth\r\n                    id=\"subGroupsSectionFormBtn\" label=\"Sub-Group\" @click=\"${this.displaySubGroupsSectionBtn}\"></mwc-tab>\r\n                </mwc-tab-bar>\r\n              </div>\r\n              <div class=\"py-2\">\r\n                ${this.getGroupSubgroupSection(GROUP_SUBGROUP, GROUP_SUBGROUP_SUCCESS)}\r\n              </div>\r\n              <div class=\"p-3 border-t-2 flex justify-end\">\r\n                ${Number.isNaN(GROUP_SUBGROUP.id) ? html`\r\n                  <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button success mr-2\"\r\n                    href=\"${this.memberGroupSubgroupAddBaseUrl}${ID}\" label=\"Add\">\r\n                  </link-button>\r\n                `: html`\r\n                  <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\"\r\n                    href=\"${this.memberGroupSubgroupEditBaseUrl}${ID}\" label=\"Edit\">\r\n                  </link-button>\r\n                `}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6 col-lg-8 my-1\">\r\n            <div class=\"shadow\">\r\n              <div class=\"p-3 border-b-2\">\r\n                <h4 class=\"uppercase text-base font-bold flex justify-between\">\r\n                  ${SUCCESS ? html`${DATA.firstname} ${DATA.surname}'s` : nothing} Bio/ Access \r\n                  ${this.editAccess? html`\r\n                  <div class=\"flex flex-col items-center pl-2\">\r\n                    <mwc-icon-button class=\"bg-love-kiss text-white\" icon=\"delete\" delete-this-item=\"${DATA.id}\" @click=\"${this.deleteClientUser}\"></mwc-icon-button>\r\n                    <small class=\"block\">Delete</small>\r\n                  </div>\r\n                  `: nothing}\r\n                </h4>\r\n              </div>\r\n              <div class=\"p-3 \">\r\n                <div class=\"row justify-content-center\">\r\n                  ${this.bioData(DATA, SUCCESS)}\r\n                  ${this.accessData}\r\n                </div>\r\n              </div>\r\n              <div class=\"p-3 border-t-2 flex justify-end\">\r\n                <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button warning mr-2\"\r\n                  href=\"${this.memberProfileEditBaseUrl}${ID}\" label=\"Edit\">\r\n                </link-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private displayGroupsSectionBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 1;\r\n    this.groupsSectionFormBtn.setAttribute('raised', \"true\");\r\n    this.subGroupsSectionFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private displaySubGroupsSectionBtn(e: any) {\r\n    e.preventDefault();\r\n    this.formId = 2;\r\n    this.subGroupsSectionFormBtn.setAttribute('raised', \"true\");\r\n    this.groupsSectionFormBtn.removeAttribute('raised');\r\n  }\r\n\r\n  private bioData(DATA: ClientUsers_I, SUCCESS: boolean) {\r\n    return html`\r\n      <div class=\"col-md-12 col-lg-6 my-1\">\r\n        <div class=\"mdc-data-table w-full\" mdc-data-table=\"data-table\">\r\n          <div class=\"mdc-data-table__table-container\">\r\n            <table class=\"mdc-data-table__table\" aria-label=\"New Meeting Member\">\r\n              <thead>\r\n                <tr class=\"mdc-data-table__header-row\">\r\n                  <th class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <b>Query</b>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                  <th class=\"mdc-data-table__header-cell !text-right\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <b>Info</b>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"mdc-data-table__content\">\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Name</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"\">\r\n                      <p>${SUCCESS ? html`${DATA.firstname} ${DATA.surname}` : \"-\"}</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Gender</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"\">\r\n                      <p>${SUCCESS ? html`${(DATA.gender === 1) ? \"Male\" : ((DATA.gender === 2) ? \"Female\" : '-')} ` : \"-\"}\r\n                      </p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Date of birth</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"\">\r\n                      <p>${SUCCESS ? html`${DATA.dateOfBirth.toDateString()}` : \"-\"}</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Phone</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"\">\r\n                      <p>${SUCCESS ? html`<a href=\"tel:${DATA.phone}\" type=\"tel\">${DATA.phone}</a>` : \"-\"}</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr class=\"mdc-data-table__row\">\r\n                  <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                    <div class=\"flex items-center\">\r\n                      <p>Email</p>\r\n                    </div>\r\n                  </th>\r\n                  <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                    <div class=\"\">\r\n                      <p>${SUCCESS ? html`<a href=\"mailto:${DATA.email}\" type=\"email\">${DATA.email}</a>` : \"-\"}</p>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get accessData() {\r\n\r\n    const clientUserAccess = this.clientUserAccess,\r\n      _accessData = clientUserAccess.data,\r\n      PAGES = Array.isArray(_accessData) ? _accessData : [_accessData],\r\n      ACCESS_SUCCESS = clientUserAccess.success;\r\n\r\n    let accessIDs: Array<number> = [];\r\n    if (ACCESS_SUCCESS) {\r\n      PAGES.forEach((PAGE) => {\r\n        PAGE = ClientUserAccess_S(PAGE);\r\n        // console.log({ PAGE });\r\n\r\n        if (!accessIDs.includes(PAGE.page.id)) {\r\n          accessIDs.push(PAGE.page.id);\r\n        }\r\n      });\r\n    }\r\n    const pageAccesses = this.pageAccesses;\r\n    return html`\r\n      <div class=\"col-md-12 col-lg-6 my-1\">\r\n        <div class=\"mdc-data-table w-full\" mdc-data-table=\"data-table\">\r\n          <div class=\"mdc-data-table__table-container\">\r\n            <table class=\"mdc-data-table__table\" aria-label=\"New Meeting Member\">\r\n              <thead>\r\n                <tr class=\"mdc-data-table__header-row\">\r\n                  <th class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <b>Page(s)</b>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                  <th class=\"mdc-data-table__header-cell !text-right\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <mwc-icon>tune</mwc-icon>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"mdc-data-table__content\">\r\n                ${pageAccesses.map((pageAccess, i) => {\r\n                  let access_id: any = \"access_\" + i; let checked = false;\r\n                  if (ACCESS_SUCCESS) {\r\n                    accessIDs.forEach((accessID) => {\r\n                      if (pageAccess.id === accessID) {\r\n                        checked = true;\r\n                      }\r\n                    });\r\n                  }\r\n                  return html`\r\n                    <tr class=\"mdc-data-table__row\">\r\n                      <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                        <div class=\"flex items-center\">\r\n                          <label for=\"${access_id}\">${pageAccess.name}</label>\r\n                        </div>\r\n                      </th>\r\n                      <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                        <div class=\"\">\r\n                          ${checked ? html`\r\n                          <input id=\"${access_id}\" disabled type=\"checkbox\" value=\"${pageAccess.id}\" checked\r\n                            class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n                          `: html`\r\n                          <input id=\"${access_id}\" disabled type=\"checkbox\" value=\"${pageAccess.id}\"\r\n                            class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n                          ` }\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  `;\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private getGroupSubgroupSection(GROUP_SUBGROUP: ClientUserGroupSubgroup_I, SUCCESS: boolean) {\r\n    if (this.formId === 1) {\r\n      this.formId\r\n      return html`\r\n        ${this.groupData(GROUP_SUBGROUP, SUCCESS)}\r\n      `;\r\n    } else {\r\n      this.formId\r\n      return html`\r\n        ${this.subGroupData(GROUP_SUBGROUP, SUCCESS)}\r\n      `;\r\n    }\r\n  }\r\n\r\n  private groupData(GROUP_SUBGROUP: ClientUserGroupSubgroup_I, SUCCESS: boolean) {\r\n\r\n    return html`\r\n      <div class=\"col-md-12 col-lg-12 my-1\">\r\n        <div class=\"mdc-data-table w-full\" mdc-data-table=\"data-table\">\r\n          <div class=\"mdc-data-table__table-container\">\r\n            <table class=\"mdc-data-table__table\" aria-label=\"New Meeting Member\">\r\n              <thead>\r\n                <tr class=\"mdc-data-table__header-row\">\r\n                  <th class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <b>Group(s)</b>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                  <th class=\"mdc-data-table__header-cell !text-right\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <mwc-icon>tune</mwc-icon>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"mdc-data-table__content\">\r\n                ${(SUCCESS? GROUP_SUBGROUP.group: []).map((group, i) => {\r\n                  return html`\r\n                    <tr class=\"mdc-data-table__row\">\r\n                      <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                        <div class=\"flex items-center\">\r\n                          <p>${group.group}</p>\r\n                        </div>\r\n                      </th>\r\n                      <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                        <div class=\"\">\r\n                          <input disabled type=\"checkbox\" value=\"${group.id}\" checked\r\n                            class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  `;\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private subGroupData(GROUP_SUBGROUP: ClientUserGroupSubgroup_I, SUCCESS: boolean) {\r\n\r\n    return html`\r\n      <div class=\"col-md-12 col-lg-12 my-1\">\r\n        <div class=\"mdc-data-table w-full\" mdc-data-table=\"data-table\">\r\n          <div class=\"mdc-data-table__table-container\">\r\n            <table class=\"mdc-data-table__table\" aria-label=\"New Meeting Member\">\r\n              <thead>\r\n                <tr class=\"mdc-data-table__header-row\">\r\n                  <th class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <b>Sub-Group(s)</b>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                  <th class=\"mdc-data-table__header-cell !text-right\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <mwc-icon>tune</mwc-icon>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"mdc-data-table__content\">\r\n                ${(SUCCESS? GROUP_SUBGROUP.subgroup: []).map((subgroup, i) => {\r\n                  return html`\r\n                    <tr class=\"mdc-data-table__row\">\r\n                      <th class=\"mdc-data-table__cell\" scope=\"row\">\r\n                        <div class=\"flex flex-col items-start\">\r\n                          <small class=\"text-gray-500\">${subgroup.groupName}</small>\r\n                          <p> <small class=\"text-gray-500\">></small> ${subgroup.subgroup}</p>\r\n                        </div>\r\n                      </th>\r\n                      <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n                        <div class=\"\">\r\n                          <input disabled type=\"checkbox\" value=\"${subgroup.id}\" checked\r\n                            class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  `;\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get pageAccesses() {\r\n    type pageAccessType = { id: number; name: string; isSelected: \"true\" | \"false\"; selected: boolean; }\r\n    let pageAccesses: pageAccessType[] = [];\r\n\r\n    this._pageAccesses.forEach(page => {\r\n      const pageAccess: pageAccessType = {\r\n        id: page.id, name: page.page, isSelected: \"false\", selected: false,\r\n      };\r\n\r\n      if (!pageAccesses.includes(pageAccess)) {\r\n        pageAccesses.push(pageAccess);\r\n      }\r\n    });\r\n    return pageAccesses;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getUserId() {\r\n    if (this.page_type === \"mine\") {\r\n      this.userId = this.loggedUserId;\r\n    } else {\r\n      let userId = urlQueryParamsGet('user-id');\r\n      // console.log({ userId });\r\n      let _userId = userId !== null ? base64Decode(userId) : null;\r\n      this.userId = Number.isNaN(_userId) ? null : Number(_userId);\r\n    }\r\n    // console.log({ \"this.userId\": this.userId });\r\n  }\r\n\r\n  async deleteClientUser(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userUserId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n\r\n    await DELETE_ClientUser(userUserId);\r\n  }\r\n\r\n  private async getClientUser() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    const _networkResponse = await GET_ClientUsers<ClientUsers_I>(this.userId, \"?branchId=\" + branchId);\r\n    if (_networkResponse === null) {\r\n      this.clientUser = undefined;\r\n    } else {\r\n      this.clientUser = _networkResponse.response;\r\n      console.log({\"this.clientUser\": this.clientUser})\r\n    }\r\n  }\r\n\r\n  private async getClientUserAccess() {\r\n    // ClientUserAccess_S\r\n    const _networkResponse = await GET_ClientUserAccess<ClientUserAccess_I>(null, \"?userId=\" + this.userId);\r\n    if (_networkResponse === null) {\r\n      this.clientUserAccess = undefined;\r\n    } else {\r\n      this.clientUserAccess = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  private async getLoggedUserAccess() {\r\n    let userId = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userId = this._userLoginInfo[0].user.id;\r\n      }\r\n    }\r\n    this.loggedUserId = userId;\r\n    // console.log({\"this.loggedUserId\": this.loggedUserId});\r\n    // console.log({\"this._userLoginInfo\": this._userLoginInfo});\r\n    \r\n    const _networkResponse = await GET_ClientUserAccess<ClientUserAccess_I>(null, \"?logged_user_this&userId=\" + this.loggedUserId);\r\n    if (_networkResponse !== null) {\r\n      if (_networkResponse.response.success) {\r\n        const datas = _networkResponse.response.data;\r\n        if (Array.isArray(datas)) {\r\n          datas.forEach((data: ClientUserAccess_I) => {\r\n            data = ClientUserAccess_S(data);\r\n            if (data.page.id === 14) {\r\n              // \"id\": 14,\r\n              // \"page\": \"Account Users\"\r\n              this.editAccess = true;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getClientUserGroupSubgroup() {\r\n    // ClientUserGroupSubgroup_S\r\n\r\n    const _networkResponse = await GET_ClientUserGroupSubgroup<ClientUserGroupSubgroup_I>(null, \"?userId=\" + this.userId);\r\n    if (_networkResponse === null) {\r\n      this.clientUserGroupSubgroup = undefined;\r\n    } else {\r\n      this.clientUserGroupSubgroup = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  private async getPageAccesses() {\r\n    const _networkResponse = await GET_ClientPageAccess<ClientPageAccess_I>();\r\n    // console.log({_networkResponse});\r\n\r\n    let __pageAccesses: ClientPageAccess_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __pageAccesses.push({ id: 0, page: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientPageAccess_I[] = data.map(value => {\r\n          return ClientPageAccess_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __pageAccesses = DATA;\r\n      }\r\n    }\r\n    this._pageAccesses = [...this._pageAccesses, ...__pageAccesses];\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","urlQueryParams","urlSearchParams","URLSearchParams","window","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsJoin","object","urlStr","index","ClientBranch_S","id","Number","name","String","accountId","createdBy","creationDate","Date","updatedBy","updateDate","clientBranchInfo_S","ClientUserGroupSubgroup_S","group","subgroup","clientUserGroupSubgroup_S","undefined","map","GroupingsGroup_S","GroupingsSubGroup_S","clientId","userId","date","ClientUsers_S","firstname","surname","gender","profilePicture","dateOfBirth","phone","email","role","branchId","level","status","lastUpdatedBy","last_login","memberCategoryId","GroupingsMemberCategories_S","category","groupId","groupName","DELETE_ClientUser","ID","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","title","text","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","e","err","push","res","console","errorHttp","postForm","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","reload","GET_ClientUserGroupSubgroup","url_params","GET_ClientUsers","GET_ClientPageAccess","GET_MemberGroupingsGroups","type","UserProfilePhoto","LitElement","constructor","super","connectedCallback","this","setUpClientImage","setUpMemberImage","disconnectedCallback","render","html","openProfile","size","rounded","event","preventDefault","href","firstUpdated","includes","parts","split","fileName","createRenderRoot","styles","css","property","Boolean","customElement","PdbAdminUserOne","loggedUserId","formId","page_type","editAccess","memberProfileEditBaseUrl","memberGroupSubgroupAddBaseUrl","memberGroupSubgroupEditBaseUrl","_pageAccesses","_activeBranchId","_userLoginInfo","_clientUser","_clientUserAccess","_clientUserAccessDefault","_clientUserGroupSubgroup","_clientUserGroupSubgroupDefault","clientUser","requestUpdate","clientUserAccess","clientUserGroupSubgroup","activeBranchId","getActiveBranchIdCookie","getLoggedUserAccess","getUserId","isNaN","getClientUser","getPageAccesses","getClientUserAccess","getClientUserGroupSubgroup","header","content","_data","DATA","SUCCESS","base64Encode","_groupSubgroupData","GROUP_SUBGROUP","GROUP_SUBGROUP_SUCCESS","nothing","displayGroupsSectionBtn","displaySubGroupsSectionBtn","getGroupSubgroupSection","deleteClientUser","bioData","accessData","groupsSectionFormBtn","setAttribute","subGroupsSectionFormBtn","removeAttribute","toDateString","_accessData","PAGES","ACCESS_SUCCESS","accessIDs","PAGE","ClientUserAccess_S","page","pageAccesses","pageAccess","i","access_id","checked","accessID","groupData","subGroupData","isSelected","selected","_userId","base64Decode","userUserId","currentTarget","getAttribute","_networkResponse","log","GET_ClientUserAccess","user","datas","__pageAccesses","ClientPageAccess_S","Button"],"sourceRoot":""}