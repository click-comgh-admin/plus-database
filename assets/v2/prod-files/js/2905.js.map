{"version":3,"file":"../../../client_dashboard/assets/v2/prod-files/js/2905.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index_full.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__individual.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__organization.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-in.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/start-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/second.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-out.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/end-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/third.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/cancel-clocking.ts"],"sourcesContent":["export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","import { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MembershipOrganizationUserModel, Convert as moumConvert } from \"@@addons/interfaces/members/user/organization_model\";\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from \".\";\r\n\r\nexport interface MemberClockingInfoFull_I {\r\n  attendance?: MemberClockingInfo_I,\r\n  additionalInfo?: MemberClockingAdditionalInfo_I,\r\n  lastSeen?: Date,\r\n  status?: String,\r\n}\r\nexport interface MemberClockingAdditionalInfo_I {\r\n  id?: number,\r\n  memberId?: number,\r\n  memberInfo?: MembershipUser_I | MembershipOrganizationUserModel,\r\n  placeOfWork?: string,\r\n  whatsapp?: string,\r\n  facebook?: string,\r\n  twitter?: string,\r\n  instagram?: string,\r\n  businessHashtag?: string,\r\n  businessDescription?: string,\r\n  profession?: string,\r\n  dateJoined?: Date,\r\n  date?: Date\r\n}\r\n\r\nexport const InstanceOfOrganizationMember = (data: any) => {\r\n  return \"organizationName\" in data && \"organizationType\" in data && \"businessRegistered\" in data && \"organizationPhone\" in data && \"dateOfIncorporation\" in data;\r\n}\r\n\r\nexport function MemberClockingAdditionalInfo_S(data: any, accountType?: number): MemberClockingAdditionalInfo_I {\r\n  // console.log({data});\r\n  let memberInfo: MembershipUser_I | MembershipOrganizationUserModel = null\r\n  \r\n  if (accountType === 1) {\r\n    memberInfo = MembershipUser_S(data['memberInfo']);\r\n  } else {\r\n    memberInfo = moumConvert.toMembershipOrganizationUserModel(JSON.stringify(data['memberInfo']))\r\n  }\r\n  \r\n  const MemberClockingAdditionalInfo_S: MemberClockingAdditionalInfo_I = {\r\n    id: Number(data['id']),\r\n    memberId: Number(data['memberId']),\r\n    memberInfo: memberInfo,\r\n    facebook: String(data['facebook']),\r\n    instagram: String(data['instagram']),\r\n    placeOfWork: String(data['placeOfWork']),\r\n    profession: String(data['profession']),\r\n    twitter: String(data['twitter']),\r\n    whatsapp: String(data['whatsapp']),\r\n    businessHashtag: String(data['businessHashtag']),\r\n    businessDescription: String(data['businessDescription']),\r\n    dateJoined: Date_I(data['dateJoined']),\r\n    date: Date_I(data['date']),\r\n  };\r\n\r\n  return MemberClockingAdditionalInfo_S;\r\n}\r\n\r\nexport function MemberClockingInfoFull_S(data: any): MemberClockingInfoFull_I {\r\n  // console.log({data});\r\n  const ATTENDANCE = MemberClockingInfo_S(data['attendance']);\r\n  \r\n  const MemberClockingInfoFull_S: MemberClockingInfoFull_I = {\r\n    attendance: ATTENDANCE,\r\n    additionalInfo: MemberClockingAdditionalInfo_S(data['additionalInfo'], ATTENDANCE.accountType),\r\n    lastSeen: Date_I(data['lastSeen']),\r\n    status: String(data['status']),\r\n  };\r\n\r\n  return MemberClockingInfoFull_S;\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MembershipUser_I } from '@@addons/interfaces/members/user';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-individual\")\r\nexport class ClockerTablePartsFirstIndividual extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  private _memberData: MembershipUser_I = null;\r\n\r\n  public set memberData(value: MembershipUser_I) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipUser_I {\r\n    return this._memberData;\r\n  }\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true);\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\"\r\n            click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n            url=\"${this._memberData.profilePicture}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.firstname} ${this._memberData.middlename} ${this._memberData.surname}\r\n          </span>\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MembershipOrganizationUserModel } from '@@addons/interfaces/members/user/organization_model';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-organization\")\r\nexport class ClockerTablePartsFirstOrganization extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  private _memberData: MembershipOrganizationUserModel = null;\r\n\r\n  public set memberData(value: MembershipOrganizationUserModel) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipOrganizationUserModel {\r\n    return this._memberData;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true);\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded type=\"member\"\r\n            url=\"${this._memberData.logo}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.organizationName}\r\n          </span>\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\nimport './first__individual';\r\nimport './first__organization';\r\n\r\n\r\n@customElement(\"clocker-table-parts-first\")\r\nexport class ClockerTablePartsFirst extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    console.log({ \"this.clocking_info\": this.clocking_info });\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n  \r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n  \r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() { \r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      console.log({ \"clockingInfo\": clockingInfo });\r\n      console.log({ \"clockingInfoFull\": clockingInfoFull });\r\n      const clockingMethodName = fullInfo ? clockingInfoFull.attendance.clockingMethodName : clockingInfo.clockingMethodName;\r\n      if (fullInfo ? InstanceOfOrganizationMember(clockingInfoFull.additionalInfo.memberInfo): InstanceOfOrganizationMember(clockingInfo.memberId)) {\r\n        return html`<clocker-table-parts-first-organization clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-organization>`;\r\n      } else {\r\n        return html`<clocker-table-parts-first-individual clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-individual>`;\r\n      }\r\n      \r\n    }\r\n    return null;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockIn(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-in/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock In?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingStartBreak(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/start-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Start Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceClockingClockIn } from '@@addons/network/attendance/clocking/clock-in';\r\nimport { PATCH_AttendanceClockingStartBreak } from '@@addons/network/attendance/clocking/start-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport '@material/mwc-icon-button';\r\n\r\n/*this is to change automatically update clocking times since datatabel is not allowing it */\r\nexport const setClockingTimeInfo = (clockingTime: boolean, clockingTimeValue: string) => {\r\n  // @ts-ignore\r\n  window['clocker'] = {\r\n    'clockingTimeInfo': {\r\n      \"clockingTime\": clockingTime, \"clockingTimeValue\": clockingTimeValue,\r\n    }\r\n  };\r\n}\r\nexport const getClockingTimeInfo = () => {\r\n  if (\"clocker\" in window) {\r\n    // @ts-ignore\r\n    const CTI = window['clocker']['clockingTimeInfo'];\r\n    if ('clockingTime' in CTI) return {\r\n      \"clockingTime\": CTI.clockingTime, \"clockingTimeValue\": CTI.clockingTimeValue,\r\n    }\r\n\r\n  } return null;\r\n}\r\n\r\n@customElement(\"clocker-table-parts-second\")\r\nexport class ClockerTablePartsSecond extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n      const inTime = fullInfo ? clockingInfoFull.attendance.inTime : clockingInfo.inTime;\r\n      // const atInTime = inTime !== null ? getLocalTime(inTime, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atInTime = inTime !== null ? getDateTime(inTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      // console.log({atInTime, \"_clockingInfo.inTime\": _clockingInfo.inTime})\r\n      const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n      const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n      const startBreak = fullInfo ? clockingInfoFull.attendance.startBreak : clockingInfo.startBreak;\r\n      // const atBreakTime = startBreak !== null ? getLocalTime(startBreak, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atBreakTime = startBreak !== null ? getDateTime(startBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const TODAY = new Date();\r\n      const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n      // console.log({ HAS_BREAKTIME, _clockingInfo });\r\n      const IS_TODAY = (fullInfo ? clockingInfoFull.attendance.date.toDateString() : clockingInfo.date.toDateString()) === TODAY.toDateString();\r\n      return html`\r\n        <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n          <div class=\"flex justify-between\">\r\n            ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-in=\"${CLOCK_ID}\" name=\"member_check_in_${CLOCK_ID}\"\r\n              id=\"member_check_in_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            `: nothing}\r\n            <label for=\"member_check_in_${CLOCK_ID}\">@ ${atDate}</label>\r\n          </div>\r\n        </div>\r\n        ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0\" clock-id=\"${CLOCK_ID}\" clock-user=\"in\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n          <span class=\"badge badge-success mx-1\">${IS_TODAY ? html`Today` : html`Post Clocking`}</span>\r\n          ${CLOCKED ? html`\r\n          <span class=\"badge badge-success bg-grow-early mx-1\">Present</span>`: html`\r\n          <span class=\"badge badge-danger mx-1\">Not Clocked</span>\r\n          `}\r\n        </div>\r\n        `: html`\r\n          <div class=\"text-center flex justify-evenly whitespace-nowrap\">\r\n            <a href=\"tel://${fullInfo ? InstanceOfOrganizationMember(clockingInfoFull.additionalInfo.memberInfo): InstanceOfOrganizationMember(clockingInfo.memberId)\r\n              // @ts-ignore\r\n              ? (fullInfo? clockingInfoFull.additionalInfo.memberInfo.organizationName: clockingInfo.memberId.organizationName) : (fullInfo? clockingInfoFull.additionalInfo.memberInfo.phone: clockingInfo.memberId.phone)}\">\r\n              <mwc-icon-button class=\"bg-sunny-morning text-white\" icon=\"call\"></mwc-icon-button>\r\n            </a>\r\n            <a href=\"https://api.whatsapp.com/send?phone=+${clockingInfoFull.additionalInfo.whatsapp}&amp;text=\">\r\n              <mwc-icon-button class=\"bg-grow-early text-white\" icon=\"whatsapp\"></mwc-icon-button>\r\n            </a>\r\n          </div>\r\n        `}\r\n        ${CLOCKED && (inTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock in Time</b>: ${atInTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n        ${this.clocking ? html`\r\n          ${HAS_BREAKTIME ? html`\r\n          <hr class=\"whitespace-nowrap\">\r\n          <div class=\"text-center whitespace-nowrap\">\r\n            <mwc-button raised class=\"shadow-sm success button\" label=\"Start Break\" clock-id=\"${CLOCK_ID}\" user-break=\"start\"\r\n              icon=\"check\">\r\n            </mwc-button>\r\n          </div>\r\n          `: ''\r\n          }\r\n        `: nothing}\r\n        ${(startBreak !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break Start Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n      `;\r\n    }\r\n    return null\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"in\") {\r\n        // console.log({ \"clock in\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockInUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async clockInUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingClockIn(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingClockIn(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"start\") {\r\n        // console.log({ \"start break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.startUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async startUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e,element,CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingStartBreak(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingStartBreak(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockOut(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-out/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock Out?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingEndBreak(clockId: Number, time: string = null): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/end-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'End Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceCancelClocking } from '@@addons/network/attendance/clocking/cancel-clocking';\r\nimport { PATCH_AttendanceClockingClockOut } from '@@addons/network/attendance/clocking/clock-out';\r\nimport { PATCH_AttendanceClockingEndBreak } from '@@addons/network/attendance/clocking/end-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport { getClockingTimeInfo } from './second';\r\n\r\n\r\n@customElement(\"clocker-table-parts-third\")\r\nexport class ClockerTablePartsThird extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private excuseBaseUrl: string = \"/attendance/v2/clocking/excuse?clocking-id=\";\r\n\r\n  @property({ type: String })\r\n  private followUpBaseUrl: string = \"/attendance/v2/clocking/follow-up?clocking-id=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n      const outTime = fullInfo ? clockingInfoFull.attendance.outTime : clockingInfo.outTime;\r\n      // const atOutTime = outTime !== null ? getLocalTime(outTime, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n      const atOutTime = outTime !== null ? getDateTime(outTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      // console.log({atOutTime, \"clockingInfo.outTime\": clockingInfo.outTime})\r\n      const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n      const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n      const endBreak = fullInfo ? clockingInfoFull.attendance.endBreak : clockingInfo.endBreak;\r\n      // const atBreakTime = endBreak !== null ? getLocalTime(endBreak, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n      const atBreakTime = endBreak !== null ? getDateTime(endBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n      const CLOCK_ID_ENC = base64Encode(String(CLOCK_ID), true);\r\n      // console.log({ HAS_BREAKTIME, clockingInfo });\r\n      return html`\r\n        <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n          <div class=\"flex justify-between\">\r\n            ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-out=\"${CLOCK_ID}\" name=\"member_check_out_${CLOCK_ID}\"\r\n              id=\"member_check_out_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            `: nothing}\r\n            <label for=\"member_check_out_${CLOCK_ID}\">@ ${atDate}</label>\r\n          </div>\r\n        </div>\r\n        ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\" clock-user=\"out\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\"\r\n            cancel-user-clock=\"true\">\r\n            <span class=\"pe-7s-close-circle bg-love-kiss fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n          <span class=\"badge badge-warning\">'X' to Cancel Attendance</span>\r\n        </div>\r\n        `: nothing}\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <a href=\"${this.excuseBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-info btn-sm\" target=\"_blank\" type=\"button\">Enter/ View\r\n            Excuse</a>\r\n          <a href=\"${this.followUpBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-primary btn-sm\" target=\"_blank\" type=\"button\">Follow-Up</a>\r\n        </div>\r\n        ${CLOCKED && (outTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock out Time</b>: ${atOutTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n        ${this.clocking ? html`\r\n        ${HAS_BREAKTIME ? html`\r\n        <hr class=\"whitespace-nowrap\">\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <mwc-button raised class=\"shadow-sm info button\" label=\"End Break\" clock-id=\"${CLOCK_ID}\" user-break=\"end\"\r\n            icon=\"close\">\r\n          </mwc-button>\r\n        </div>\r\n        `: ''\r\n        }\r\n        `: nothing}\r\n        ${(endBreak !== null) ? html`\r\n        <div class=\"text-center\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break End Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n      `;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n    this.cancelClocking();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private cancelClocking() {\r\n    const selectorString = 'cancel-user-clock=\"true\"';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(cancelClock => {\r\n      cancelClock.addEventListener('click', async (e) => {\r\n        e.preventDefault();\r\n        const CLOCK_ID = Number(cancelClock.getAttribute('clock-id'));\r\n        await PATCH_AttendanceCancelClocking(CLOCK_ID);\r\n      });\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"out\") {\r\n        // console.log({ \"clock out\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockOutUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async clockOutUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingClockOut(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingClockOut(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"end\") {\r\n        // console.log({ \"end break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.endUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async endUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingEndBreak(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingEndBreak(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceCancelClocking(clockId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/cancel-clocking/' + clockId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Cancel Clocking?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}"],"names":["getDateTime","date","options","Date","toLocaleString","InstanceOfOrganizationMember","data","MemberClockingAdditionalInfo_S","accountType","memberInfo","JSON","stringify","id","Number","memberId","facebook","String","instagram","placeOfWork","profession","twitter","whatsapp","businessHashtag","businessDescription","dateJoined","MemberClockingInfoFull_S","ATTENDANCE","attendance","additionalInfo","lastSeen","status","ClockerTablePartsFirstIndividual","constructor","super","clockingMethodName","_memberData","memberProfileBaseUrl","memberData","value","this","requestUpdate","connectedCallback","disconnectedCallback","render","MEMBER_ID","base64","profilePicture","firstname","middlename","surname","firstUpdated","createRenderRoot","styles","property","type","ClockerTablePartsFirstOrganization","logo","organizationName","ClockerTablePartsFirst","_data","_type","clockingInfo","fullInfo","clocking_info","console","log","_clockingInfo","parse","getClockingInfo","getClockingInfoFull","clockingInfoFull","Boolean","PATCH_AttendanceClockingClockIn","clockId","time","_get_cookie","url","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","e","err","errormsg","error","push","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","Object","VALUE","message","setTimeout","window","location","reload","PATCH_AttendanceClockingStartBreak","setClockingTimeInfo","clockingTime","clockingTimeValue","getClockingTimeInfo","CTI","ClockerTablePartsSecond","clocking","atDate","dateStyle","timeStyle","inTime","atInTime","CLOCK_ID","CLOCKED","inOrOut","startBreak","atBreakTime","TODAY","HAS_BREAKTIME","meetingEventId","hasBreakTime","IS_TODAY","toDateString","phone","clockUser","userBreak","setInterval","document","querySelectorAll","getAttribute","addEventListener","clockInUser","element","preventDefault","startUserBreak","PATCH_AttendanceClockingClockOut","PATCH_AttendanceClockingEndBreak","ClockerTablePartsThird","excuseBaseUrl","followUpBaseUrl","outTime","atOutTime","endBreak","CLOCK_ID_ENC","cancelClocking","cancelClock","PATCH_AttendanceCancelClocking","clockOutUser","endUserBreak"],"sourceRoot":""}