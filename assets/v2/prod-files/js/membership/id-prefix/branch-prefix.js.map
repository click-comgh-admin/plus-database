{"version":3,"file":"../../../client_dashboard/assets/v2/prod-files/js/membership/id-prefix/branch-prefix.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/select.ts","webpack://webpackNumbers/./src/view/membership/id-prefix/add/branch.ts","webpack://webpackNumbers/./src/addons/network/members/id_prefix/branch/post.ts","webpack://webpackNumbers/./src/view/membership/id-prefix/edit/branch.ts","webpack://webpackNumbers/./src/addons/network/members/id_prefix/branch/put.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/model/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/id_prefix/branch/index.ts","webpack://webpackNumbers/./src/view/membership/id-prefix/views/branch.ts","webpack://webpackNumbers/./src/addons/network/members/id_prefix/branch/delete.ts","webpack://webpackNumbers/./src/addons/network/members/id_prefix/branch/index.ts","webpack://webpackNumbers/./src/view/membership/id-prefix/branch-prefix.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { SelectInputOptions_I, SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport * as $ from 'jquery'\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport 'select2';\r\nimport { ProcessedResult, QueryOptions, DataParams, Event } from 'select2';\r\nimport '../../../../assets/styles/views/widget/select_input/select_input.scss';\r\n\r\n\r\n@customElement('select-input')\r\nexport class SelectInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Array })\r\n  public value: SelectInputOptions_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private randomID: number = Math.floor(Math.random() * 12345);\r\n\r\n  @property({ type: String })\r\n  public input_id?: string = this.id + \"_\" + this.randomID;\r\n\r\n  @property({ type: Array })\r\n  public options?: { id: number, name: string, isSelected?: \"true\" | \"false\", selected: boolean }[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  public required?: boolean;\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchToken?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public ajaxFetchUrl?: string = null;\r\n\r\n  @property({attribute: false})\r\n  public currentValue: any | any[];\r\n\r\n  // @property({ type: Object })\r\n  // public ajaxHeader: object = {};\r\n\r\n  private _ajaxHeader: any = null;\r\n\r\n  public set ajaxHeader(value: any) {\r\n    this._ajaxHeader = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get ajaxHeader(): any {\r\n    return this._ajaxHeader;\r\n  }\r\n\r\n  @property({ type: Object })\r\n  public ajaxFetchProcessResponse?: (data: any, params: QueryOptions) => SelectInputProcessedAjaxResponse_I = null;\r\n\r\n  @property({ type: Array })\r\n  public ajaxFetchUrlParams?: SelectInputProcessedAjaxUrlParam_I[] = [];\r\n  \r\n  @property({ type: Number })\r\n  public startSearchPage?: number = 0\r\n\r\n  @property({ type: Boolean })\r\n  /** For multiple image selection */\r\n  public multiple?: boolean;\r\n\r\n  private selectSelector: NodeListOf<HTMLSelectElement>;\r\n  private $selectSelector: JQuery<HTMLSelectElement>;\r\n\r\n  @property({ type: Number })\r\n  public startNumber: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public rowsPerPage: number = 10;\r\n\r\n  @property({ type: Number })\r\n  public totalShowing: number = 10;\r\n\r\n  @property({ type: Boolean })\r\n  private showSelectorLoaded?: boolean = false;\r\n\r\n  static styles = [\r\n    css`\r\n      .select2-container {\r\n        pointer-events: auto !important;\r\n      }\r\n    `\r\n  ];\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();  \r\n    this.value = Array.isArray(this.value) ? this.value : [];\r\n\r\n    setInterval(() => {\r\n      if (this.selectSelector === undefined) {\r\n        // console.log({ \"this.selectSelector\": this.selectSelector });\r\n        // console.log({ \"this.input_id\": this.input_id, \"'select-input>select[input_id='+ this.input_id +']\": 'select-input>select[input_id='+ this.input_id +']' });\r\n        this.selectSelector = document.querySelectorAll('select-input>select[input_id='+ this.input_id +']');\r\n        // console.log({\"this.selectSelector\": this.selectSelector});\r\n        \r\n        this.$selectSelector = $(this.selectSelector)\r\n        // console.log({\"this.$selectSelector\": this.$selectSelector});\r\n      } else {\r\n        this.showDropdownAlt();\r\n      }\r\n    });\r\n\r\n    this.options = this.options.map((option) => {\r\n      const optionId = option.id;\r\n      let isSelected = false;\r\n\r\n      // console.log({\"this.value\": this.value});\r\n\r\n      this.value.forEach((val) => {\r\n        const valId = val.id;\r\n\r\n        isSelected = optionId === valId;\r\n      });\r\n      option.selected = isSelected;\r\n      return option;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.multiple) {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple required>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}[]\" placeholder=\"${this.label}\" multiple>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    } else {\r\n      if (this.required) {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\" required>\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      } else {\r\n        return html`\r\n          <select input_id=\"${this.input_id}\" id=\"${this.id}\" name=\"${this.name}\" placeholder=\"${this.label}\">\r\n            ${this.options.map(option => {\r\n              const isSelected = option.isSelected === undefined ? option.selected : option.isSelected;\r\n              if (isSelected === true || isSelected === \"true\") {\r\n                return html`\r\n                  <option value=\"${option.id}\" selected>${option.name}</option>\r\n                `;\r\n              } else {\r\n                return html`\r\n                  <option value=\"${option.id}\">${option.name}</option>\r\n                `;\r\n              }\r\n            })}\r\n          </select>\r\n        `;\r\n      }\r\n    }\r\n  }\r\n\r\n  firstUpdated() {\r\n    // this.showDropdown();\r\n  }\r\n\r\n  formatRepo(repo: { loading: boolean; text: string; id: string; }) {\r\n    // console.log({ \"smbfl-repo\": repo });\r\n    if (repo.loading) {\r\n      return repo.text;\r\n    }\r\n\r\n    // console.log({ \"this.value\": this.value });\r\n    var $container = $(\r\n      this.value.map((val) => {\r\n        const _selected = Number(repo.id) === val.id,\r\n          selected = _selected ? \"selected='true'\" : \"\";\r\n        // console.log({ _selected, selected });\r\n\r\n        return '<option value=\"' + repo.id + '\" ' + selected + '>' + repo.text + '</option>'\r\n      })\r\n    );\r\n    return $container;\r\n  }\r\n\r\n  formatRepoSelection(repo: { full_name: string; text: string; }) {\r\n    return repo.full_name || repo.text;\r\n  }\r\n\r\n  _start(params: any, totalShowing: number) {\r\n    const _this = this;\r\n    // console.log({ _this });\r\n\r\n    // _this.totalShowing = 10;\r\n\r\n    this.startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n    this.startSearchPage = this.startSearchPage === 0 ? this.startSearchPage : this.startSearchPage * totalShowing;\r\n    $('.select2-search__field').on('keyup', function ($this) {\r\n      $(_this.selectSelector).empty();\r\n      _this.startSearchPage = 0\r\n      // _this.totalShowing = 10;\r\n      // console.log({ _this });\r\n    });\r\n\r\n    return _this.startSearchPage;\r\n  }\r\n\r\n  private showDropdownAlt() {\r\n    const _this = this;\r\n    let totalShowing = this.totalShowing,\r\n      startSearchPage = this.startSearchPage;\r\n\r\n      function _start(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        startSearchPage = isNaN(params.page) ? 0 : params.page;\r\n        startSearchPage = startSearchPage === 0 ? startSearchPage : startSearchPage * totalShowing;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n      function _page(params: any, S2: JQuery<HTMLSelectElement>) {\r\n        // console.log({ _this });\r\n  \r\n        // totalShowing = 0;\r\n  \r\n        let startSearchPage = isNaN(params.page) ? 1 : params.page + 1;\r\n        startSearchPage = startSearchPage === 0? 1 : startSearchPage;\r\n        $('.select2-search__field').on('keyup', function ($this) {\r\n          $(_this.selectSelector).empty();\r\n          startSearchPage = 0\r\n          totalShowing = 0;\r\n          // console.log({ _this });\r\n        });\r\n  \r\n        return startSearchPage;\r\n      }\r\n\r\n    if (this.showSelectorLoaded === false) {\r\n      this.showSelectorLoaded = true;\r\n      if (this.ajaxFetchUrl === null) {\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-1\": selectSelector})\r\n          $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            // @ts-ignore\r\n            placeholder: this.label,\r\n          });\r\n          $(selectSelector).on('select2:select', (e) => {\r\n            this.changeAction(e)\r\n          })\r\n        });\r\n      } else {\r\n        let _headers = {\r\n          \"Access-Control-Allow-Origin\": \"*/*\",\r\n          \"Accept\": \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        };\r\n        // console.log({\"this.ajaxHeader\": this.ajaxHeader})\r\n        \r\n        for (const header in this.ajaxHeader) {\r\n          // console.log({header})\r\n          // @ts-ignore\r\n          _headers[header] = this.ajaxHeader[header];\r\n        }\r\n\r\n        // console.log({ _headers });\r\n        // console.log({\"this.selectSelector\": this.selectSelector})\r\n        this.selectSelector.forEach(selectSelector => {\r\n          // console.log({\"selectSelector-2\": selectSelector})\r\n          const S2: JQuery<HTMLSelectElement> = $(selectSelector).select2({\r\n            closeOnSelect: false,\r\n            ajax: {\r\n              url: _this.ajaxFetchUrl,\r\n              dataType: 'json',\r\n              delay: 250,\r\n              data: function (params: { term: any; }) {\r\n                const start = _start(params, S2);\r\n                const page = _page(params, S2);\r\n                // let page = start / 10;\r\n                // page = page === 0 ? 1 : page;\r\n                let finalParams: any = {\r\n                  \"search\": params.term, // search term\r\n                  \"start\": start,\r\n                  \"page\": page,\r\n                };\r\n\r\n                _this.ajaxFetchUrlParams.forEach((param) => {\r\n                  finalParams[param.param] = param.value;\r\n                });\r\n                // console.log({finalParams});\r\n                return finalParams;\r\n              },\r\n              headers: _headers,\r\n              processResults: (data: any, params: any) => {\r\n                // return _this.ajaxFetchProcessResponse(data, params);\r\n                const processedResponse = this.ajaxFetchProcessResponse === null\r\n                  ? this._processResults(data, params)\r\n                  : this.ajaxFetchProcessResponse(data, params);\r\n\r\n                // console.log({ \"totalShowing-1\": totalShowing });\r\n                totalShowing += processedResponse.results.length;\r\n                // console.log({ \"totalShowing-2\": totalShowing });\r\n\r\n                return {\r\n                  results: processedResponse.results,\r\n                  pagination: {\r\n                    // @ts-ignore\r\n                    more: totalShowing < processedResponse.total\r\n                  }\r\n                };\r\n              },\r\n              cache: true\r\n            },\r\n            placeholder: this.label,\r\n          });\r\n          S2.on('select2:opening', (e) => {\r\n            // console.log({ e });\r\n            startSearchPage = 0\r\n            totalShowing = 0;\r\n          });\r\n        });\r\n      }\r\n\r\n      const SELECT2s = this.querySelectorAll('.select2-container');\r\n      // console.log({SELECT2s})\r\n      SELECT2s.forEach(SELECT2 => {\r\n        SELECT2.setAttribute('style', 'width: 100% !important; pointer-events: auto !important;');\r\n      });\r\n    }\r\n  }\r\n\r\n  private _processResults(data: any, params: any): SelectInputProcessedAjaxResponse_I {\r\n    const response = data;\r\n    params.page = params.page || 0;\r\n    // console.log({ \"smbfl-response\": response, \"check\": response.error === false });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (response.error === false) {\r\n      var _data = response['data'];\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const id = item['id'];\r\n        const fullName = item['fullName'];\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n          // $($select).append($('<option>', { fullName: id }).text(fullName));\r\n        }\r\n      }\r\n    }\r\n    this.totalShowing += processedData.length;\r\n    return {\r\n      results: processedData,\r\n      total: response.total,\r\n      totalShowing: this.totalShowing\r\n    };\r\n  }\r\n\r\n  // @ts-ignore\r\n  private changeAction(changeActionEvent: Event<HTMLSelectElement, DataParams>) {\r\n    // // console.log({ changeActionEvent });\r\n    // // @ts-ignore\r\n    // const selectedOptions = changeActionEvent.target.selectedOptions;\r\n    // let currentValue: number[] = [];\r\n    // for (const iterator of selectedOptions) {\r\n    //   let selectedOption: HTMLOptionElement = iterator;\r\n    //   // console.log({ iterator, selectedOption });\r\n    //   const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n    //   if (!currentValue.includes(value)) {\r\n    //     currentValue.push(value);\r\n    //   }\r\n    // }\r\n    // this.currentValue = currentValue;\r\n    // // console.log({'this.querySelector(`[input_id=\"${this.input_id}\"]`)': this.querySelector(`[input_id=\"${this.input_id}\"]`)})\r\n    // @ts-ignore\r\n    const selectedOptions2 = this.querySelector(`[input_id=\"${this.input_id}\"]`).selectedOptions;\r\n    let currentValue2: number[] = [];\r\n    for (const iterator of selectedOptions2) {\r\n      let selectedOption: HTMLOptionElement = iterator;\r\n      // console.log({ iterator, selectedOption });\r\n      const value = Number.isNaN(selectedOption.value)? 0: Number(selectedOption.value);\r\n      if (!currentValue2.includes(value)) {\r\n        currentValue2.push(value);\r\n      }\r\n    }\r\n    // console.log({ currentValue, currentValue2 });\r\n    this.currentValue = currentValue2;\r\n    // @ts-ignore\r\n    this.querySelector(`[input_id=\"${this.input_id}\"]`).setAttribute(\"currentValue\", currentValue2)\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-circular-progress';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { ClientBranchModel } from '@@addons/interfaces/clients/branches/model';\r\nimport { POST_MemberBranchIdPrefix } from '@@addons/network/members/id_prefix/branch/post';\r\n\r\n\r\n@customElement(\"id-branch-prefix-add\")\r\nexport class IdBranchPrefixAdd extends LitElement {\r\n\r\n  @property({ type: Number })\r\n  public CLIENT_ID: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public branches: ClientBranchModel[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">New Prefix</h1>\r\n                  <h3 class=\"h3\">Create New Prefix!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"member-id-branch-prefix\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                    <mwc-select name=\"branchId\" class=\"w-full\" id=\"branchId\" setSelectedBranchId label=\"Select Branch\" outlined required>\r\n                      ${this.branches.map((value) => {\r\n                        return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Prefix</h4>\r\n                    <mwc-textfield name=\"prefix\" type=\"text\" class=\"w-full\" id=\"prefix\" value=\"\" label=\"Enter Prefix\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-input-container\">\r\n                  <mwc-button label=\"Save\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                  </mwc-button>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    Lets go digital...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    \r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n\r\n    await POST_MemberBranchIdPrefix();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_MemberBranchIdPrefix(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/member-id-branch-prefix',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"member-id-branch-prefix\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Member Branch Id Prefix?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-circular-progress';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { ClientBranchModel } from '@@addons/interfaces/clients/branches/model';\r\nimport { MembershipMemberBranchIDPrefixModel } from '@@addons/interfaces/members/id_prefix/branch';\r\nimport { PUT_MemberBranchIdPrefix } from '@@addons/network/members/id_prefix/branch/put';\r\n\r\n\r\n@customElement(\"id-branch-prefix-edit\")\r\nexport class IdBranchPrefixEdit extends LitElement {\r\n\r\n  @property({ type: Number })\r\n  public prefixId: number = 0;\r\n\r\n  @property({ type: Number })\r\n  public currentBranchId: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public prefixEdit: MembershipMemberBranchIDPrefixModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public branches: ClientBranchModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public _data?: Array<string> = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    console.log({ \"prefixEdit\": this.prefixEdit })\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  \r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Edit Prefix</h1>\r\n                  <h3 class=\"h3\">Update New Prefix!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"member-id-branch-prefix\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                    <mwc-select name=\"branchId\" class=\"w-full\" id=\"branchId\" setSelectedBranchId label=\"Select Branch\" outlined required>\r\n                      ${this.branches.map((value) => {\r\n                        if (this.prefixEdit.length === 0) {\r\n                          return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                        } else {\r\n                          if (value.id === this.prefixEdit[0].branchID.id) {\r\n                            console.log({ \"value\": value })\r\n\r\n                            if (this.currentBranchId !== value.id) {\r\n                              this.currentBranchId = value.id;\r\n                              this.requestUpdate();\r\n                            } \r\n                            return html`<mwc-list-item value=\"${value.id}\"  selected>${value.name}</mwc-list-item>`;\r\n                          }\r\n                        }\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Enter Prefix</h4>\r\n                    <mwc-textfield name=\"prefix\" type=\"text\" class=\"w-full\" id=\"prefix\" value=\"${this.prefixEdit.length === 0? \"\" : this.prefixEdit[0].prefix}\" label=\"Enter Prefix\" outlined required>\r\n                    </mwc-textfield>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-input-container\">\r\n                  <mwc-button label=\"Save\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                  </mwc-button>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    Lets go digital...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    \r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n\r\n    await PUT_MemberBranchIdPrefix(this.prefixId);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PUT_MemberBranchIdPrefix(ID: Number,): Promise<any> {\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/member-id-branch-prefix/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"member-id-branch-prefix\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Member Branch Id Prefix?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PUT\",\r\n        body: formData,\r\n        headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","// To parse this data:\n//\n//   import { Convert, ClientBranchModel } from \"./file\";\n//\n//   const clientBranchModel = Convert.toClientBranchModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface ClientBranchModel {\n    id?:           number;\n    name?:         string;\n    accountID?:    number;\n    createdBy?:    number;\n    creationDate?: Date;\n    updatedBy?:    number;\n    updateDate?:   Date;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toClientBranchModel(json: string): ClientBranchModel {\n        return cast(JSON.parse(json), r(\"ClientBranchModel\"));\n    }\n\n    public static clientBranchModelToJson(value: ClientBranchModel): string {\n        return JSON.stringify(uncast(value, r(\"ClientBranchModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = ''): never {\n    if (key) {\n        throw Error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    throw Error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n        \n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"ClientBranchModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"name\", js: \"name\", typ: u(null, \"\") },\n        { json: \"accountId\", js: \"accountID\", typ: u(null, 0) },\n        { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n        { json: \"creationDate\", js: \"creationDate\", typ: u(null, Date) },\n        { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n        { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n    ], false),\n};\n","// To parse this data:\n//\n//   import { Convert, MembershipMemberBranchIDPrefixModel } from \"./file\";\n//\n//   const membershipMemberBranchIDPrefixModel = Convert.toMembershipMemberBranchIDPrefixModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nimport { ClientBranchModel, typeMap as cbmTypeMap } from \"@@addons/interfaces/clients/branches/model\";\n\n\nexport interface MembershipMemberBranchIDPrefixModel {\n    id?:           number;\n    prefix?:       string;\n    branchID?:     ClientBranchModel;\n    createdBy?:    number;\n    creationDate?: Date;\n    updatedBy?:    number;\n    updateDate?:   Date;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toMembershipMemberBranchIDPrefixModel(json: string): MembershipMemberBranchIDPrefixModel {\n        return cast(JSON.parse(json), r(\"MembershipMemberBranchIDPrefixModel\"));\n    }\n\n    public static membershipMemberBranchIDPrefixModelToJson(value: MembershipMemberBranchIDPrefixModel): string {\n        return JSON.stringify(uncast(value, r(\"MembershipMemberBranchIDPrefixModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n        \n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"MembershipMemberBranchIDPrefixModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"prefix\", js: \"prefix\", typ: u(null, \"\") },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, r(\"ClientBranchModel\")) },\n        { json: \"createdBy\", js: \"createdBy\", typ: u(null, 0) },\n        { json: \"creationDate\", js: \"creationDate\", typ: u(null, Date) },\n        { json: \"updatedBy\", js: \"updatedBy\", typ: u(null, 0) },\n        { json: \"updateDate\", js: \"updateDate\", typ: u(null, Date) },\n    ], false),\n    \"ClientBranchModel\": cbmTypeMap['ClientBranchModel'],\n};","import '@@assets/styles/views/widget/simple-table/main.scss';\r\nimport { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { urlQueryParams, urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\nimport '../add/branch';\r\nimport '../edit/branch';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { ClientBranchModel, Convert as cbmConvert } from '@@addons/interfaces/clients/branches/model';\r\nimport { MembershipMemberBranchIDPrefixModel, Convert as mmbidpConvert } from '@@addons/interfaces/members/id_prefix/branch';\r\nimport { DELETE_MemberBranchIdPrefix } from '@@addons/network/members/id_prefix/branch/delete';\r\nimport { GET_MemberBranchIdPrefix } from '@@addons/network/members/id_prefix/branch';\r\n\r\n\r\n@customElement(\"id-branch-prefix-view\")\r\nexport class IdBranchPrefixView extends LitElement {\r\n  constructor() {\r\n    super(); \r\n  }\r\n\r\n  @property({ type: Number })\r\n  public prefixId: number = 0;\r\n\r\n  @property({ type: Number })\r\n  public currentPrefixId: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public prefixEdit: MembershipMemberBranchIDPrefixModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  public _data?: Array<string> = [];\r\n\r\n  @property({ type: Object })\r\n  private urlQueryParams?: { [k: string]: string; } = undefined;\r\n\r\n  @property({ type: Array })\r\n  private _memberPrefixIds: MembershipMemberBranchIDPrefixModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranchModel[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    this.urlQueryParams = urlQueryParams();\r\n    \r\n    await this.getMemberBranchIdPrefix();\r\n    await this.getClientBranches();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._memberPrefixIds === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else if (this._memberPrefixIds === undefined) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Member Prefix Id</span>: undefined error</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.form}\r\n        <hr />\r\n        <div class=\"flex justify-end my-2\">\r\n          <mwc-button raised label=\"Add Branch Prefix\" class=\"ml-1 success\" icon=\"add\" @click=\"${this.addNew}\"></mwc-button> \r\n        </div>\r\n        ${this.table}\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get form(): TemplateResult {\r\n    if (this._memberPrefixIds.length > 0) {\r\n      if (this.prefixId === 0) {\r\n        return html`\r\n          <id-branch-prefix-add .branches=\"${this._branches}\"></id-branch-prefix-add>\r\n        `;\r\n      } else {\r\n        let htmlEdit = html``,\r\n          _htmlEdit = html``;\r\n        return html`<id-branch-prefix-edit prefixId=\"${this.prefixId}\" .prefixEdit=\"${this.prefixEdit}\" .branches=\"${this._branches}\"></id-branch-prefix-edit>`;\r\n      }\r\n    } else {\r\n      return html`\r\n        <id-branch-prefix-add .branches=\"${this._branches}\"></id-branch-prefix-add>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    if (this._memberPrefixIds.length > 0) {\r\n      return html`\r\n        <div class=\"mdc-data-table w-full\" mdc-data-table=\"data-table\">\r\n          <div class=\"mdc-data-table__table-container\">\r\n            <table class=\"mdc-data-table__table\" aria-label=\"New Meeting Group\">\r\n              <thead>\r\n                <tr class=\"mdc-data-table__header-row\">\r\n                  <th class=\"mdc-data-table__header-cell\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <b>Member ID Prefix</b>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                  <th class=\"mdc-data-table__header-cell !text-right\" role=\"columnheader\" scope=\"col\" aria-sort=\"ascending\">\r\n                    <div class=\"mdc-data-table__header-cell-wrapper\">\r\n                      <div class=\"mdc-data-table__header-cell-label\">\r\n                        <mwc-icon>tune</mwc-icon>\r\n                      </div>\r\n                      <div class=\"mdc-data-table__sort-status-label\" aria-hidden=\"true\"></div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class=\"mdc-data-table__content\">\r\n                ${this.getMemberPrefixIds}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <div class=\"flex justify-center\">\r\n          <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get getMemberPrefixIds() {\r\n    return html`\r\n      ${this._memberPrefixIds.map((item, i) => {\r\n        // console.log({\"item-item-item\": item})\r\n        return html`\r\n          <tr class=\"mdc-data-table__row\">\r\n            <th class=\"mdc-data-table__cell whitespace-pre-line\" scope=\"row\">\r\n              ${item.branchID.name} -> <b>${item.prefix}</b>\r\n            </th>\r\n            <td class=\"mdc-data-table__cell mdc-data-table__cell--numeric !py-1\" scope=\"row\">\r\n              <mwc-icon-button class=\"ml-1 warning\" icon=\"edit\" edit-this-item=\"${item.id}\"\r\n                @click=\"${this.editMemberPrefixId}\"></mwc-icon-button>    \r\n              <mwc-icon-button class=\"ml-1 danger\" icon=\"delete_forever\" delete-this-item=\"${item.id}\"\r\n                @click=\"${this.deleteMemberPrefixId}\"></mwc-icon-button>         \r\n            </td>\r\n          </tr>\r\n        `;\r\n      })}\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    \r\n  }\r\n\r\n  async addNew(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    \r\n    this.prefixId = 0;\r\n\r\n    window.scrollTo({ top: 0, });\r\n    // @ts-ignore\r\n    document.querySelector('mwc-textfield[name=\"prefix\"]').focus();\r\n  }\r\n\r\n  async editMemberPrefixId(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    \r\n    // @ts-ignore\r\n    const prefixId = Number(e.currentTarget.getAttribute('edit-this-item'));\r\n    this.prefixId = prefixId;\r\n\r\n    window.scrollTo({ top: 0, });\r\n    // @ts-ignore\r\n    document.querySelector('mwc-textfield[name=\"prefix\"]').focus();\r\n    const _branches = this._branches;\r\n    for (const iterator of this._memberPrefixIds) {\r\n      if (iterator.id === this.prefixId) {\r\n        this.prefixEdit[0] = iterator;\r\n        this._branches = [];\r\n        setTimeout(() => {\r\n          this._branches = _branches;\r\n        }, 100);\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  async deleteMemberPrefixId(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    \r\n    // @ts-ignore\r\n    const prefixId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n    await DELETE_MemberBranchIdPrefix(prefixId);\r\n  }\r\n  \r\n  private async getMemberBranchIdPrefix() {\r\n    const _networkResponse = await GET_MemberBranchIdPrefix<MembershipMemberBranchIDPrefixModel>();\r\n    let __memberPrefixIds: MembershipMemberBranchIDPrefixModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberPrefixIds.push({ id: 0, prefix: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: MembershipMemberBranchIDPrefixModel[] = data.map(value => {\r\n          return mmbidpConvert.toMembershipMemberBranchIDPrefixModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __memberPrefixIds = [...[], ...DATA];\r\n      }\r\n    }\r\n    this._memberPrefixIds = [...this._memberPrefixIds, ...__memberPrefixIds];\r\n  }\r\n  \r\n  private async getClientBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranchModel>();\r\n    let __branches: ClientBranchModel[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: ClientBranchModel[] = data.map(value => {\r\n          return cbmConvert.toClientBranchModel(JSON.stringify(value))\r\n        });\r\n        // console.log({DATA});\r\n        __branches = [...[], ...DATA];\r\n      }\r\n    }\r\n    this._branches = [...this._branches, ...__branches];\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_MemberBranchIdPrefix(ID: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/member-id-branch-prefix/' + ID,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Member Branch Id Prefix?',\r\n    text: \"You may have members assigned to this prefix. Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberBranchIdPrefix<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/member-id-branch-prefix'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport { LitElement, html, } from 'lit';\r\nimport { customElement, } from 'lit/decorators.js';\r\nimport './views/branch';\r\n\r\n\r\n@customElement(\"id-branch-prefix\")\r\nexport class IdBranchPrefix extends LitElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    return html`\r\n      <id-branch-prefix-view></id-branch-prefix-view>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n\r\n\r\n"],"names":["root","factory","exports","module","define","amd","self","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","urlQueryParams","urlSearchParams","URLSearchParams","window","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsJoin","object","urlStr","index","GET_ClientBranches","type","_get_cookie","url","HTTP","method","headers","Authorization","token","console","errorHttp","SelectInput","name","label","randomID","Math","floor","random","input_id","this","id","options","ajaxFetchToken","ajaxFetchUrl","_ajaxHeader","ajaxFetchProcessResponse","ajaxFetchUrlParams","startSearchPage","startNumber","rowsPerPage","totalShowing","showSelectorLoaded","ajaxHeader","requestUpdate","connectedCallback","super","setInterval","undefined","selectSelector","document","querySelectorAll","$selectSelector","showDropdownAlt","map","option","optionId","isSelected","val","valId","selected","render","multiple","required","firstUpdated","formatRepo","repo","loading","text","Number","formatRepoSelection","full_name","_start","_this","isNaN","page","on","$this","empty","select2","closeOnSelect","placeholder","e","changeAction","_headers","header","ajax","dataType","delay","start","S2","_page","finalParams","term","param","processResults","processedResponse","_processResults","results","length","pagination","more","total","cache","SELECT2","setAttribute","response","processedData","_data","i","item","_new","includes","push","changeActionEvent","selectedOptions2","querySelector","selectedOptions","currentValue2","iterator","selectedOption","currentValue","createRenderRoot","styles","String","Boolean","attribute","IdBranchPrefixAdd","CLIENT_ID","branches","disconnectedCallback","submitForm","preventDefault","formContainer","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","then","networkCallRes","_RESPONSE","unknownError","errors","err","errormsg","res","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","success","setTimeout","reload","POST_MemberBranchIdPrefix","property","IdBranchPrefixEdit","prefixId","currentBranchId","prefixEdit","log","branchID","prefix","ID","PUT_MemberBranchIdPrefix","invalidValue","typ","JSON","stringify","jsonToJSProps","jsonToJS","props","p","json","js","jsToJSONProps","jsToJSON","transform","getProps","ref","typeMap","cases","indexOf","transformEnum","hasOwnProperty","typs","l","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","getOwnPropertyNames","prop","v","prototype","call","transformObject","Date","d","valueOf","transformDate","transformPrimitive","u","r","IdBranchPrefixView","constructor","currentPrefixId","_memberPrefixIds","_branches","getMemberBranchIdPrefix","getClientBranches","form","addNew","table","getMemberPrefixIds","editMemberPrefixId","deleteMemberPrefixId","scrollTo","top","focus","currentTarget","getAttribute","postForm","DELETE_MemberBranchIdPrefix","_networkResponse","GET_MemberBranchIdPrefix","__memberPrefixIds","static","parse","__branches","IdBranchPrefix"],"sourceRoot":""}