{"version":3,"file":"../../../client_dashboard/assets/v2/prod-files/js/membership/groupings/group_subgroup/groups/add.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/member_categories/index.ts","webpack://webpackNumbers/./src/view/membership/groupings/group_subgroup/groups/add.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/group/post.ts","webpack://webpackNumbers/./src/view/membership/members/select-member-type/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsMemberCategories<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/member-category'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@@addons/widgets/form/new/select';\r\nimport '../../../members/select-member-type';\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { GroupingsMemberCategories_I } from \"@@addons/interfaces/members/groupings/member_categories\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { GET_MemberGroupingsMemberCategories } from \"@@addons/network/members/groupings/member_categories\";\r\nimport { POST_GroupingsGroup } from \"@@addons/network/members/groupings/group/group/post\";\r\n\r\n\r\n@customElement(\"membership-groupings-group_subgroup-group-add\")\r\nexport class MembershipGroupingsGroupSubgroupGroupAdd extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n        \r\n      }\r\n    }\r\n\r\n    await this.getBranches();\r\n    await this.getClientMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n    return html`\r\n    <div class=\"form-container flex justify-center\">\r\n      <div class=\"app-container- !px-0\">\r\n        <div class=\"app-container--row !px-0\">\r\n          <div class=\"app-container--col-md-12\">\r\n            <header class=\"header warning app-container--col-md-12\">\r\n              <label for=\"\" class=\"label\">\r\n                <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                <h1 class=\"h1 !text-red-400\">New Group</h1>\r\n                <h3 class=\"h3\">Create Group!</h3>\r\n              </label>\r\n            </header>\r\n            <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"members-groupings-group\" enctype=\"multipart/form-data\">\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"col-md-6 col-lg-6\">\r\n                  <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                  <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n                    name=\"branchId\" id=\"branchId\" @change=\"${this.branchChange}\" outlined required>\r\n                    ${userBranch === 1 ? html`\r\n                      <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                      ${this._branches.map((value) => {\r\n                          if (userBranch === value.id) {\r\n                            return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                          } else {\r\n                            return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                          }\r\n                      })}\r\n                    `: html`\r\n                      ${this._branches.map((value) => {\r\n                        if (value.id === userBranch) {\r\n                          return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                        }\r\n                      })}\r\n                    `}\r\n                  </mwc-select>\r\n                </div>\r\n                <div class=\"col-md-6 col-lg-6\">\r\n                  <h4 class=\"font-semibold my-2\">Member Category</h4>\r\n                  <pdb-membership-select-member-type defaultValue=\"1\" \r\n                    name=\"memberCategoryId\" id=\"memberCategoryId\"\r\n                    label=\"Select Member Category\" outlined required>\r\n                  </pdb-membership-select-member-type>\r\n                </div>\r\n                <div class=\"col-md-6 col-lg-6\">\r\n                  <h4 class=\"font-semibold my-2\">Group</h4>\r\n                  <mwc-textfield name=\"group\" id=\"group\" label=\"Enter Group\"\r\n                    outlined required>\r\n                  </mwc-textfield>\r\n                </div>\r\n              </div>\r\n    \r\n              <div class=\"form-input-container\">\r\n                <mwc-button label=\"Create\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                </mwc-button>\r\n              </div>\r\n            \r\n              <div class=\"flex form-input-container items-center text-center\">\r\n                <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                  ...\r\n                </label>\r\n                <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    `;\r\n  }\r\n\r\n  branchChange(e: Event) {\r\n    // @ts-ignore\r\n    this.selectedBranch = Number.isNaN(e.currentTarget.value)? 0: Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    this._branches = [...this._branches, ...__branches];\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    this._memberCategories = [...this._memberCategories, ...__memberCategories];\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_GroupingsGroup();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_GroupingsGroup(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"members-groupings-group\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Create Group?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import \"../../../../assets/styles/views/home/dashboard.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport { GET_MemberGroupingsMemberCategories } from '@@addons/network/members/groupings/member_categories';\r\n\r\n@customElement(\"pdb-membership-select-member-type\")\r\nexport class PdbMembershipSelectMemberType extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public material: \"true\" | \"false\" = \"true\";\r\n\r\n  @property({ type: Number })\r\n  public defaultValue: number = null;\r\n\r\n  @property({ type: Number })\r\n  public selectedCategory: number = null;\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public id: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public tag_class: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public css_style: string = \"\";\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    await this.getMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this.material === \"true\") {\r\n      return html`\r\n        ${this.materialSelectField}\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.selectField}\r\n      `;      \r\n    }\r\n  }\r\n\r\n  private get materialSelectField() {\r\n    if (this.defaultValue === null) {\r\n    return html`\r\n      <mwc-select name=\"${this.name}\" class=\"w-full ${this.tag_class}\" id=\"${this.id}\" label=\"${this.label}\" outlined required @change=\"${this.changeAction}\">\r\n        <mwc-list-item value=\"0\">${this.label}</mwc-list-item>\r\n        ${this._memberCategories.map((value) => {\r\n          return html`<mwc-list-item value=\"${value.id}\">${value.category}</mwc-list-item>`;\r\n        })}\r\n      </mwc-select>\r\n    `;\r\n    } else {\r\n      return html`\r\n      <mwc-select name=\"${this.name}\" class=\"w-full ${this.tag_class}\" id=\"${this.id}\" label=\"${this.label}\" outlined required @change=\"${this.changeAction}\">\r\n        <mwc-list-item value=\"0\">${this.label}</mwc-list-item>\r\n        ${this._memberCategories.map((value) => {\r\n          if (this.defaultValue === value.id) {\r\n            return html`<mwc-list-item value=\"${value.id}\" selected>${value.category}</mwc-list-item>`;\r\n          } else {\r\n            return html`<mwc-list-item value=\"${value.id}\">${value.category}</mwc-list-item>`;\r\n          }\r\n        })}\r\n      </mwc-select>\r\n    `;\r\n    }\r\n  }\r\n\r\n  private get selectField() {\r\n    let _html = html``;\r\n    if (this.defaultValue === null) {\r\n    _html = html`\r\n      <select class=\"${this.tag_class}\" name=\"${this.name}\" id=\"${this.id}\" style=\"${this.css_style}\" @change=\"${this.changeAction}\">\r\n\t\t\t\t<option value=\"0\">${this.label}</option>\r\n        ${this._memberCategories.map((value) => {\r\n          return html`<option value=\"${value.id}\">${value.category}</option>`;\r\n        })}\r\n\t\t\t</select>\r\n    `;\r\n    } else {\r\n      _html = html`\r\n        <select class=\"${this.tag_class}\" name=\"${this.name}\" id=\"${this.id}\" style=\"${this.css_style}\" @change=\"${this.changeAction}\">\r\n          <option value=\"0\">${this.label}</option>\r\n          ${this._memberCategories.map((value) => {\r\n            if (this.defaultValue === value.id) {\r\n              return html`<option value=\"${value.id}\" selected>${value.category}</option>`;\r\n            } else {\r\n              return html`<option value=\"${value.id}\">${value.category}</option>`;\r\n            }\r\n          })}\r\n        </select>\r\n      `;\r\n    }\r\n    return html`\r\n      <div class=\"main_class\">\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<div class=\"input-group mb-4\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\" icon_id=\"\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text px-2\">\r\n\t\t\t\t\t\t\t\t<i class=\"pe-7s-leaf icon-gradient bg-warm-flame text-success font-weight-bolder \"></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t${_html}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    `\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private async getMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    this._memberCategories = [...this._memberCategories, ...__memberCategories];\r\n  }\r\n\r\n  private changeAction(changeActionEvent: { target: { selected: boolean; value: string; }; currentTarget: { selected: boolean; value: string; }; }) {\r\n    // console.log({changeActionEvent});\r\n    this.selectedCategory = Number.isNaN(changeActionEvent.currentTarget.value)? 0: Number(changeActionEvent.currentTarget.value);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","GET_ClientBranches","type","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","GET_MemberGroupingsMemberCategories","MembershipGroupingsGroupSubgroupGroupAdd","constructor","super","startSearchPage","accountType","selectedBranch","_userLoginInfo","_activeBranchId","_memberCategories","_branches","connectedCallback","activeBranchId","this","length","user","branchId","setTimeout","getBranches","getClientMemberCategories","disconnectedCallback","render","userBranch","branchChange","map","value","id","name","submitForm","e","Number","isNaN","currentTarget","firstUpdated","_networkResponse","__branches","push","response","success","data","__memberCategories","category","preventDefault","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","then","networkCallRes","_RESPONSE","unknownError","errors","forEach","err","errormsg","res","https_swal_error_format","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","Object","VALUE","message","window","location","reload","POST_GroupingsGroup","createRenderRoot","styles","property","Array","PdbMembershipSelectMemberType","material","defaultValue","selectedCategory","label","tag_class","css_style","getMemberCategories","materialSelectField","selectField","changeAction","_html","changeActionEvent"],"sourceRoot":""}