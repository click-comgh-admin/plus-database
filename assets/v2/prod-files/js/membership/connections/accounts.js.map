{"version":3,"file":"../../../client_dashboard/assets/v2/prod-files/js/membership/connections/accounts.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/interfaces/members/connections/types.ts","webpack://webpackNumbers/./src/addons/network/members/connections/types/index.ts","webpack://webpackNumbers/./src/view/membership/connections/accounts/add.ts","webpack://webpackNumbers/./src/addons/network/members/connections/accounts/post.ts","webpack://webpackNumbers/./src/view/membership/connections/accounts/view.ts","webpack://webpackNumbers/./src/view/membership/connections/index.ts","webpack://webpackNumbers/./node_modules/lit-html/directives/live.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export interface UserConnectionType_I {\r\n  id?: number,\r\n  clientId?: number,\r\n  type?: string,\r\n  description?: string,\r\n  lastUpdatedBy?: number,\r\n  lastUpdateDate?: Date,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n}\r\n\r\nexport function UserConnectionType_S(data: any): UserConnectionType_I {\r\n  // console.log({data});\r\n\r\n  const userConnectionType_S: UserConnectionType_I = {\r\n    id: Number(data['id']),\r\n    type: String(data['type']),\r\n    clientId: Number(data['clientId']),\r\n    description: String(data['description']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    lastUpdatedBy: Number(data['lastUpdatedBy']),\r\n    lastUpdateDate: new Date(data['lastUpdateDate']),\r\n  };\r\n\r\n  return userConnectionType_S;\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_UserConnectionType<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-connection-type'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@@assets/styles/views/attendance/setup/form.scss';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport \"@material/mwc-button\";\r\nimport \"@material/mwc-textarea\";\r\nimport \"@material/mwc-textfield\";\r\nimport \"@material/mwc-select\";\r\nimport '@@addons/widgets/form/new/select';\r\nimport { POST_UserConnectionAccount } from '@@addons/network/members/connections/accounts/post';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { QueryOptions } from 'select2';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { UserConnectionType_I, UserConnectionType_S } from '@@addons/interfaces/members/connections/types';\r\nimport { GET_UserConnectionType } from '@@addons/network/members/connections/types';\r\nimport { MembershipUser_I, MembershipUser_S } from '@@addons/interfaces/members/user';\r\n\r\n\r\n@customElement(\"pdb-connections-accounts-add\")\r\nexport class PdbConnectionsAccountsAdd extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Boolean })\r\n  private showing?: boolean = false;\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage1: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage2: number = 0;\r\n\r\n  @property({ type: Array })\r\n  private _connection_types: UserConnectionType_I[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    await this.getConnectionTypes();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      ${this.show_form}\r\n      ${this.toggle_showing_button}\r\n    `;\r\n  }\r\n\r\n  private get show_form() {\r\n    let ajaxHeader: {Authorization?: string} = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    if (this.showing) {\r\n      return html`\r\n        <div class=\"shadow-sm\">\r\n          <div class=\"form-container\">\r\n            <div class=\" !px-0\">\r\n              <div class=\"-row !px-0\">\r\n                <div class=\"-col-md-12\">\r\n                  <header class=\"header warning -col-md-12\">\r\n                    <label for=\"\" class=\"label\">\r\n                      <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                      <h1 class=\"h1 !text-red-400\">New Connection Type</h1>\r\n                      <h3 class=\"h3\">Create New Connection Type!</h3>\r\n                    </label>\r\n                  </header>\r\n                  <form method=\"post\" action=\"#\" class=\"form mt-0\" make-general-posts=\"user-connection-account\">\r\n                    <div class=\"container my-4\">\r\n                      <div class=\"row justify-center\">\r\n\r\n                        <div class=\"col-md-6 col-lg-6\">\r\n                          <h4 class=\"font-semibold my-2\">Select Member</h4>\r\n                          <select-input class=\"w-100\" id=\"memberId\" name=\"memberId\" label=\"Select Member\"\r\n                            .ajaxFetchProcessResponse=\"${this.processClientUserSearch1}\" startSearchPage=\"${this.startSearchPage1}\"\r\n                            .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams1}\"\r\n                            ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search\"></select-input>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-6 col-lg-6\">\r\n                          <h4 class=\"font-semibold my-2\">Select Connection <span class=\"text-akwaaba-orange-light\">Account to be connected</span></h4>\r\n                          <select-input class=\"w-100\" id=\"connectionId\" name=\"connectionId\" label=\"Select Connection\"\r\n                            .ajaxFetchProcessResponse=\"${this.processClientUserSearch2}\" startSearchPage=\"${this.startSearchPage2}\"\r\n                            .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams2}\"\r\n                            ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search\"></select-input>\r\n                        </div>\r\n                        <div class=\"col-md-6 col-lg-6\">\r\n                          <h4 class=\"font-semibold my-2\">Select Connection Type</h4>\r\n                          <mwc-select name=\"type\" class=\"w-full\" id=\"type\" label=\"Select Connection Type\" outlined required>\r\n                            <mwc-list-item value=\"0\">Select Connection Type</mwc-list-item>\r\n                            ${this._connection_types.map((value) => {\r\n                              // console.log({ \"schedule.type\": schedule.type, \"value.id\": value.id });\r\n                              return html`<mwc-list-item value=\"${value.id}\">${value.type}</mwc-list-item>`;\r\n                            })}\r\n                          </mwc-select>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"row justify-content-center\">\r\n                      <div class=\"col-md-12 col-lg-12\">\r\n                        <div class=\"form-input-container\">\r\n                          <mwc-button label=\"Add Connection\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n                          </mwc-button>\r\n                        </div>\r\n        \r\n                        <div class=\"flex form-input-container items-center text-center\">\r\n                          <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                          <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                            Lets go digital...\r\n                          </label>\r\n                          <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return nothing;\r\n    }\r\n  }\r\n\r\n  private get toggle_showing_button() {\r\n    if (this.showing) {\r\n      return html`\r\n        <mwc-button @click=\"${this.toggle_showing_button_action_hide}\" class=\"button warning\" raised label=\"Hide Add Form\">\r\n        </mwc-button>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-button @click=\"${this.toggle_showing_button_action_show}\" class=\"button success\" raised label=\"Show Add Form\">\r\n        </mwc-button>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private toggle_showing_button_action_show(e: any) {\r\n    e.preventDefault();\r\n    this.showing = true;\r\n  }\r\n\r\n  private toggle_showing_button_action_hide(e: any) {\r\n    e.preventDefault();\r\n    this.showing = false;\r\n  }\r\n\r\n  private processClientUserSearch1(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"memberId\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const member: MembershipUser_I = MembershipUser_S(item);\r\n        \r\n        const id = member.id;\r\n        const fullName = `${member.firstname} ${member.middlename} ${member.surname}`;\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n    \r\n\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private processClientUserSearch2(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"connectionId\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const member: MembershipUser_I = MembershipUser_S(item);\r\n        \r\n        const id = member.id;\r\n        const fullName = `${member.firstname} ${member.middlename} ${member.surname}`;\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private get ajaxFetchUrlParams1(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"\", value: \"\" }\r\n    ]\r\n  }\r\n\r\n  private get ajaxFetchUrlParams2(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"\", value: \"\" }\r\n    ]\r\n  }\r\n\r\n  private async getConnectionTypes() {\r\n    const _networkResponse = await GET_UserConnectionType<UserConnectionType_I>(null);\r\n\r\n    let __connection_types: UserConnectionType_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __connection_types.push({ id: 0, type: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: UserConnectionType_I[] = data.map(value => {\r\n          return UserConnectionType_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __connection_types = DATA;\r\n      }\r\n    }\r\n    this._connection_types = [...this._connection_types, ...__connection_types];\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_UserConnectionAccount();\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_UserConnectionAccount(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/user-connection-account',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"user-connection-account\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Connection?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { LitElement, html, css, TemplateResult } from 'lit';\r\nimport { customElement, property, query, } from 'lit/decorators.js';\r\nimport \"@material/mwc-icon\";\r\nimport \"@material/mwc-icon-button\";\r\nimport \"../../../../assets/styles/views/home/dashboard.scss\";\r\nimport { DELETE_UserConnectionAccount } from '@@addons/network/members/connections/accounts/delete';\r\nimport { UserConnectionAccount_I } from '@@addons/interfaces/members/connections/accounts';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\nimport { Button } from '@material/mwc-button';\r\nimport { QueryOptions } from 'select2';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport \"@material/mwc-select\";\r\nimport '@@addons/widgets/form/new/select';\r\nimport { UserConnectionType_I, UserConnectionType_S } from '@@addons/interfaces/members/connections/types';\r\nimport { GET_UserConnectionType } from '@@addons/network/members/connections/types';\r\nimport { show_selection_member_id_filter } from '../members_and_connections/view_members';\r\nimport { MembershipUser_I, MembershipUser_S } from '@@addons/interfaces/members/user';\r\n\r\n\r\n@customElement(\"pdb-connections-accounts-view\")\r\nexport class PdbConnectionsAccountsView extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: Array })\r\n  private _connection_accounts: UserConnectionAccount_I[] = [];\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage1: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage2: number = 0;\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  @property({ type: Array })\r\n  private _connection_types: UserConnectionType_I[] = [];\r\n\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"members/user-connection-account\";\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getConnectionTypes();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this._connection_accounts === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._connection_accounts === undefined) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Schedule </span>: undefined error</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    return html`\r\n      <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n      <div class=\"block my-1\">\r\n        <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n          filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n        </mwc-button>\r\n      </div>\r\n      <div class=\"block my-1\">\r\n        ${this.filterForm}\r\n      </div>\r\n      <div class=\"block my-1 overflow-x-scroll\">\r\n        <hr class=\"my-2\" />\r\n        ${this.table}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }, unmutableInputNames: [],\r\n    });\r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_memberId = \"memberId\",\r\n      filterNameId_filter_connectionId = \"connectionId\",\r\n      filterNameId_filter_type = \"type\";\r\n\r\n    let filterNameId_filter_memberIdVal: string = null,\r\n      filterNameId_filter_connectionIdVal: string = null,\r\n      filterNameId_filter_typeVal: string = null;\r\n\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      value = value === \"\" ? null : value;\r\n      if (key === filterNameId_filter_memberId) {\r\n        filterNameId_filter_memberIdVal = value;\r\n      }\r\n      if (key === filterNameId_filter_connectionId) {\r\n        filterNameId_filter_connectionIdVal = value;\r\n      }\r\n      if (key === filterNameId_filter_type) {\r\n        filterNameId_filter_typeVal = value;\r\n      }\r\n    }\r\n\r\n    const memberField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <h4 class=\"font-semibold my-2\">Select Member</h4>\r\n        ${show_selection_member_id_filter(Number(filterNameId_filter_memberIdVal))}\r\n          <select-input class=\"w-100\" id=\"${filterNameId_filter_memberId}\" name=\"${filterNameId_filter_memberId}\" label=\"Select Member\"\r\n            .ajaxFetchProcessResponse=\"${this.processClientUserSearch1}\" startSearchPage=\"${this.startSearchPage1}\"\r\n            .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams1}\"\r\n            ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search\"></select-input>\r\n      </div>`;\r\n\r\n    const connectionField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <h4 class=\"font-semibold my-2\">Select Connection</h4>\r\n        ${show_selection_member_id_filter(Number(filterNameId_filter_connectionIdVal))}\r\n          <select-input class=\"w-100\" id=\"${filterNameId_filter_connectionId}\" name=\"${filterNameId_filter_connectionId}\" label=\"Select Connection\"\r\n            .ajaxFetchProcessResponse=\"${this.processClientUserSearch2}\" startSearchPage=\"${this.startSearchPage2}\"\r\n            .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams2}\"\r\n            ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}members/user/search\"></select-input>\r\n      </div>`;\r\n\r\n    const typeField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <h4 class=\"font-semibold my-2\">Select Connection Type</h4>\r\n        <mwc-select name=\"type\" class=\"w-full\" id=\"type\" label=\"Select Connection Type\" outlined required>\r\n          <mwc-list-item value=\"0\">Select Connection Type</mwc-list-item>\r\n          ${this._connection_types.map((item) => {\r\n            if (filterNameId_filter_typeVal === null) {\r\n              return html`<mwc-list-item value=\"${item.id}\">${item.type}</mwc-list-item>`;\r\n            } else {\r\n              if (Number(filterNameId_filter_typeVal) === item.id) {\r\n                return html`<mwc-list-item value=\"${item.id}\" selected>${item.type}</mwc-list-item>`;\r\n              } else {\r\n                return html`<mwc-list-item value=\"${item.id}\">${item.type}</mwc-list-item>`;\r\n              }\r\n            }\r\n          })}\r\n        </mwc-select>\r\n      </div>`;\r\n\r\n    returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          ${memberField} ${connectionField} ${typeField}\r\n          <div class=\"col-xl-12 col-md-10\">\r\n            <div class=\"form-input-container mt-1\">\r\n              <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n              <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private processClientUserSearch1(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"memberId\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const member: MembershipUser_I = MembershipUser_S(item);\r\n        \r\n        const id = member.id;\r\n        const fullName = `${member.firstname} ${member.middlename} ${member.surname}`;\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n\r\n\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private processClientUserSearch2(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"connectionId\"]');\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const member: MembershipUser_I = MembershipUser_S(item);\r\n        \r\n        const id = member.id;\r\n        const fullName = `${member.firstname} ${member.middlename} ${member.surname}`;\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private get ajaxFetchUrlParams1(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"\", value: \"\" }\r\n    ]\r\n  }\r\n\r\n  private get ajaxFetchUrlParams2(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"\", value: \"\" }\r\n    ]\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Connection', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + \"?datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n\r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  private renderMemberInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    // console.log({connectionInfo});\r\n    const memberId = connectionInfo.memberId;\r\n    const connectionId = connectionInfo.connectionId;\r\n    return `\r\n      <div class=\"flex flex-col\">\r\n        <div class=\"flex flex-col lg:flex-row m-1 justify-start\">\r\n          <div class=\"flex\">\r\n            <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Name</h6>\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${connectionId.firstname} ${connectionId.middlename}\r\n              ${connectionId.surname}</p>\r\n          </div>\r\n          <div class=\"m-1\"><mwc-icon>directions<mwc-icon/></div>\r\n          <div class=\"flex\">\r\n            <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Member Name</h6>\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${memberId.firstname} ${memberId.middlename} ${memberId.surname}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderClockInInfo(data: any, type: any, connectionInfo: UserConnectionAccount_I) {\r\n    // console.log({connectionInfo});\r\n    const connectionType = connectionInfo.type;    \r\n    return `\r\n      <div class=\"justify-center content-center\">\r\n        <mwc-icon-button class=\"ml-1 danger\" icon=\"delete_forever\" \r\n          delete-this-item=\"${connectionInfo.id}\" >\r\n        </mwc-icon-button>\r\n        <div class=\"flex flex-col\">\r\n          <h6 class=\"whitespace-nowrap text-sm font-bold mr-1\">Connection Type:</h6>\r\n          <div class=\"flex flex-col\">\r\n            <p class=\"whitespace-nowrap text-sm ml-1\">${connectionType.type}</p>\r\n            <p class=\"text-xs ml-1 whitespace-pre-wrap\">${connectionType.description}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_memberId = \"memberId\",\r\n      filterNameId_filter_connectionId = \"connectionId\";\r\n\r\n    let newObject: any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_memberId) || (key === filterNameId_filter_connectionId)) {\r\n        // console.log({value, });\r\n\r\n        newObject[key] = value;\r\n      }\r\n    }\r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"__this\": __this, url });\r\n\r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderMemberInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'inTime',\r\n          render: (data: any, type: any, connectionInfo: UserConnectionAccount_I) => __this.renderClockInInfo(data, type, connectionInfo),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.deleteConnectionAction();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private async getConnectionTypes() {\r\n    const _networkResponse = await GET_UserConnectionType<UserConnectionType_I>(null);\r\n\r\n    let __connection_types: UserConnectionType_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __connection_types.push({ id: 0, type: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: UserConnectionType_I[] = data.map(value => {\r\n          return UserConnectionType_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __connection_types = DATA;\r\n      }\r\n    }\r\n    this._connection_types = [...this._connection_types, ...__connection_types];\r\n  }\r\n\r\n  private deleteConnectionAction() {\r\n    document.querySelectorAll('[delete-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.deleteConnection(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  async deleteConnection(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n\r\n    // @ts-ignore\r\n    const userConnectionId = Number(e.currentTarget.getAttribute('delete-this-item'));\r\n\r\n    await DELETE_UserConnectionAccount(userConnectionId);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport './accounts/add';\r\nimport './accounts/view';\r\n\r\n\r\n@customElement(\"pdb-connections-accounts\")\r\nexport class PdbConnectionsAccounts extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    return html`\r\n      <div class=\"flex flex-col\">\r\n        <pdb-connections-accounts-add class=\"my-1\"></pdb-connections-accounts-add>\r\n        <pdb-connections-accounts-view class=\"my-1\"></pdb-connections-accounts-view>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import{noChange as r,nothing as e}from\"../lit-html.js\";import{directive as i,Directive as t,PartType as n}from\"../directive.js\";import{isSingleExpression as o,setCommittedValue as s}from\"../directive-helpers.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=i(class extends t{constructor(r){if(super(r),r.type!==n.PROPERTY&&r.type!==n.ATTRIBUTE&&r.type!==n.BOOLEAN_ATTRIBUTE)throw Error(\"The `live` directive is not allowed on child or event bindings\");if(!o(r))throw Error(\"`live` bindings can only contain a single expression\")}render(r){return r}update(i,[t]){if(t===r||t===e)return t;const o=i.element,l=i.name;if(i.type===n.PROPERTY){if(t===o[l])return r}else if(i.type===n.BOOLEAN_ATTRIBUTE){if(!!t===o.hasAttribute(l))return r}else if(i.type===n.ATTRIBUTE&&o.getAttribute(l)===t+\"\")return r;return s(i),t}});export{l as live};\n//# sourceMappingURL=live.js.map\n"],"names":["root","factory","exports","module","define","amd","self","UserConnectionType_S","data","id","Number","type","String","clientId","description","createdBy","creationDate","Date","lastUpdatedBy","lastUpdateDate","GET_UserConnectionType","_get_cookie","url","HTTP","method","headers","Authorization","token","error","console","errorHttp","PdbConnectionsAccountsAdd","constructor","super","showing","startSearchPage1","startSearchPage2","_connection_types","connectedCallback","this","getConnectionTypes","disconnectedCallback","render","show_form","toggle_showing_button","ajaxHeader","processClientUserSearch1","ajaxFetchUrlParams1","processClientUserSearch2","ajaxFetchUrlParams2","map","value","submitForm","toggle_showing_button_action_hide","toggle_showing_button_action_show","e","preventDefault","params","page","TOTAL","count","RESULTS","results","SELECTOR","document","querySelector","processedData","_data","i","length","item","member","_new","text","firstname","middlename","surname","includes","push","total","totalShowing","param","_networkResponse","__connection_types","response","success","formContainer","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","then","networkCallRes","_RESPONSE","unknownError","errors","forEach","err","errormsg","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","Object","VALUE","message","setTimeout","window","location","reload","POST_UserConnectionAccount","firstUpdated","createRenderRoot","styles","property","Boolean","Array","PdbConnectionsAccountsView","_connection_accounts","datatablePathUrl","filterBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","undefined","toggleFilterFields","filterForm","table","unmutableInputNames","returnHtml","_urlQueryParams","filterNameId_filter_memberId","filterNameId_filter_connectionId","filterNameId_filter_memberIdVal","filterNameId_filter_connectionIdVal","filterNameId_filter_typeVal","key","memberField","connectionField","typeField","clear_filter","submit","__tableHeaders","__tableBody","__tableFoot","URL","urlQueryString","__dataTable","renderMemberInfo","connectionInfo","memberId","connectionId","renderClockInInfo","connectionType","newObject","_urlQueryParamsJoin","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","deleteConnectionAction","buttons","select","querySelectorAll","btn","addEventListener","deleteConnection","userConnectionId","currentTarget","getAttribute","query","Element","HTMLFormElement","PdbConnectionsAccounts","l","r","Error","update","t","o","element","name","hasAttribute"],"sourceRoot":""}