{"version":3,"file":"../../../client_dashboard/assets/v2/prod-files/js/attendance/absent-leave/status/edit.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/absent_leave/status/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/status/get.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/view/attendance/absent_leave/status/edit.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/status/patch.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","// To parse this data:\n//\n//   import { Convert, AttendanceAbsentLeaveStatusModel } from \"./file\";\n//\n//   const attendanceAbsentLeaveStatusModel = Convert.toAttendanceAbsentLeaveStatusModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface AttendanceAbsentLeaveStatusModel {\n    id?:       number;\n    clientID?: number;\n    branchID?: number;\n    status?:   string;\n    date?:     Date;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toAttendanceAbsentLeaveStatusModel(json: string): AttendanceAbsentLeaveStatusModel {\n        return cast(JSON.parse(json), r(\"AttendanceAbsentLeaveStatusModel\"));\n    }\n\n    public static attendanceAbsentLeaveStatusModelToJson(value: AttendanceAbsentLeaveStatusModel): string {\n        return JSON.stringify(uncast(value, r(\"AttendanceAbsentLeaveStatusModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"AttendanceAbsentLeaveStatusModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, 0) },\n        { json: \"status\", js: \"status\", typ: u(null, \"\") },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n    ], false),\n};\n","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_AttendanceAbsentLeaveStatus<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/status'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { urlQueryParamsGet } from \"@@addons/functions/url_query_params\";\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { GET_AttendanceAbsentLeaveStatus } from \"@@addons/network/attendance/absent_leave/status/get\";\r\nimport { PATCH_AttendanceAbsentLeaveStatus } from \"@@addons/network/attendance/absent_leave/status/patch\";\r\nimport { AttendanceAbsentLeaveStatusModel, Convert as aalsmConvert } from \"@@addons/interfaces/attendance/absent_leave/status\";\r\n\r\n\r\n@customElement(\"attendance-absent-leave-status-edit\")\r\nexport class AttendanceAbsentLeaveStatusEdit extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private statusId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  private statusIdEnc?: string = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _statuses: AttendanceAbsentLeaveStatusModel[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n        \r\n      }\r\n    }\r\n\r\n    this.getStatusId();\r\n    this.getStatus(this.statusId);\r\n    await this.getBranches();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    if (this._statuses.length < 1) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._statuses === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Group </span>: Not Found</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const STATUS = this._statuses[0];\r\n    // console.log({STATUS});\r\n    \r\n    \r\n    return html`\r\n      <div class=\"form-container flex justify-center\">\r\n        <div class=\"app-container- !px-0\">\r\n          <div class=\"app-container--row !px-0\">\r\n            <div class=\"app-container--col-md-12\">\r\n              <header class=\"header warning app-container--col-md-12\">\r\n                <label for=\"\" class=\"label\">\r\n                  <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                  <h1 class=\"h1 !text-red-400\">Change Status</h1>\r\n                  <h3 class=\"h3\">Update Status!</h3>\r\n                </label>\r\n              </header>\r\n              <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"attendance-absent-leave-status\" enctype=\"multipart/form-data\">\r\n                <div class=\"row justify-content-center\">\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                    <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n                      name=\"_branchId_\" id=\"_branchId_\"  outlined required>\r\n                      <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                      ${this._branches.map((value) => {\r\n                        if (value.id === STATUS.branchID) {\r\n                          return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                        }\r\n                      })}\r\n                    </mwc-select>\r\n                  </div>\r\n                  <div class=\"col-md-6 col-lg-6\">\r\n                    <h4 class=\"font-semibold my-2\">Status</h4>\r\n                    <mwc-textfield name=\"status\" id=\"status\" label=\"Enter Status\"\r\n                      outlined required value=\"${STATUS.status}\">\r\n                    </mwc-textfield>\r\n                  </div>\r\n                </div>\r\n      \r\n                <div class=\"form-input-container\">\r\n                  <mwc-button label=\"Update\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                  </mwc-button>\r\n                </div>\r\n              \r\n                <div class=\"flex form-input-container items-center text-center\">\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                    ...\r\n                  </label>\r\n                  <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getStatusId() {\r\n    let statusId = urlQueryParamsGet('view-status');\r\n    // console.log({ statusId });\r\n    let _statusId = statusId !== null ? base64Decode(statusId) : null;\r\n    this.statusId = Number.isNaN(_statusId) ? null : Number(_statusId);\r\n    // console.log({ \"this.statusId\": this.statusId });\r\n    this.statusIdEnc = base64Encode(String(this.statusId), true);\r\n  }\r\n\r\n  private async getStatus(ID: number) {\r\n    const _networkResponse = await GET_AttendanceAbsentLeaveStatus<AttendanceAbsentLeaveStatusModel>(ID);\r\n    if (_networkResponse !== null) {\r\n      if (_networkResponse.response.success && 'status' in _networkResponse.response.data) {\r\n        const status = aalsmConvert.toAttendanceAbsentLeaveStatusModel(JSON.stringify(_networkResponse.response.data))\r\n        this._statuses = [status];\r\n        return;\r\n      }\r\n    }\r\n    this._statuses = null;\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    this._branches = [...this._branches, ...__branches];\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await PATCH_AttendanceAbsentLeaveStatus(this.statusId);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\n\r\n\r\nexport async function PATCH_AttendanceAbsentLeaveStatus(ID: Number, ): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/status/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"attendance-absent-leave-status\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Status?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","self","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","urlQueryParams","urlSearchParams","URLSearchParams","window","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsJoin","object","urlStr","index","userLoginInfo","setActiveBranchIdCookie","stringData","JSON","stringify","removeActiveBranchIdCookie","getActiveBranchIdCookie","_cookie","cookie","parse","Convert","static","json","transform","r","jsonToJSProps","jsToJSONProps","invalidValue","typ","val","console","undefined","jsonToJS","map","props","p","js","jsToJSON","getProps","ref","typeMap","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","getOwnPropertyNames","prop","v","prototype","call","transformObject","Date","d","isNaN","valueOf","transformDate","transformPrimitive","u","name","ClientBranch_S","id","Number","String","accountId","createdBy","creationDate","updatedBy","updateDate","clientBranchInfo_S","GET_AttendanceAbsentLeaveStatus","ID","url_params","_get_cookie","url","HTTP","method","headers","Authorization","token","errorHttp","GET_ClientBranches","type","AttendanceAbsentLeaveStatusEdit","constructor","super","accountType","selectedBranch","statusId","statusIdEnc","_userLoginInfo","_activeBranchId","_branches","_statuses","connectedCallback","activeBranchId","this","user","branchId","setTimeout","getStatusId","getStatus","getBranches","disconnectedCallback","render","STATUS","branchID","status","submitForm","firstUpdated","_statusId","base64","_networkResponse","response","success","__branches","push","e","preventDefault","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","then","networkCallRes","_RESPONSE","unknownError","errors","err","errormsg","res","catch","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","VALUE","message","reload","PATCH_AttendanceAbsentLeaveStatus","createRenderRoot","styles","property"],"sourceRoot":""}