{"version":3,"file":"../../../client_dashboard/assets/v2/prod-files/js/attendance/absent-leave/status/add.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/view/attendance/absent_leave/status/add.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/status/post.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, function() {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","export interface ClientBranches_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n  createdBy?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n}\r\n\r\nexport function ClientBranch_S(data: any): ClientBranches_I {\r\n  const clientBranchInfo_S: ClientBranches_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n    createdBy: Number(data['createdBy']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n\r\nexport interface ClientBranchShort_I {\r\n  id: number,\r\n  name: string,\r\n  accountId?: number,\r\n}\r\n\r\nexport function clientBranchInfo_S(data: any): ClientBranchShort_I {\r\n  const clientBranchInfo_S = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountId: Number(data['accountId']),\r\n  };\r\n\r\n  return clientBranchInfo_S;\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { POST_AttendanceAbsentLeaveStatus } from \"@@addons/network/attendance/absent_leave/status/post\";\r\n\r\n\r\n@customElement(\"attendance-absent-leave-status-add\")\r\nexport class AttendanceAbsentLeaveStatusAdd extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n        \r\n      }\r\n    }\r\n\r\n    await this.getBranches();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n    return html`\r\n    <div class=\"form-container flex justify-center\">\r\n      <div class=\"app-container- !px-0\">\r\n        <div class=\"app-container--row !px-0\">\r\n          <div class=\"app-container--col-md-12\">\r\n            <header class=\"header warning app-container--col-md-12\">\r\n              <label for=\"\" class=\"label\">\r\n                <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                <h1 class=\"h1 !text-red-400\">New Status</h1>\r\n                <h3 class=\"h3\">Create Status!</h3>\r\n              </label>\r\n            </header>\r\n            <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"attendance-absent-leave-status\" enctype=\"multipart/form-data\">\r\n              <div class=\"row justify-content-center\">\r\n                <div class=\"col-md-6 col-lg-6\">\r\n                  <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                  <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n                    name=\"branchId\" id=\"branchId\" @change=\"${this.branchChange}\" outlined required>\r\n                    ${userBranch === 1 ? html`\r\n                      <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                      ${this._branches.map((value) => {\r\n                          if (userBranch === value.id) {\r\n                            return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                          } else {\r\n                            return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                          }\r\n                      })}\r\n                    `: html`\r\n                      ${this._branches.map((value) => {\r\n                        if (value.id === userBranch) {\r\n                          return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                        }\r\n                      })}\r\n                    `}\r\n                  </mwc-select>\r\n                </div>\r\n                <div class=\"col-md-6 col-lg-6\">\r\n                  <h4 class=\"font-semibold my-2\">Status</h4>\r\n                  <mwc-textfield name=\"status\" id=\"status\" label=\"Enter Status\"\r\n                    outlined required>\r\n                  </mwc-textfield>\r\n                </div>\r\n              </div>\r\n    \r\n              <div class=\"form-input-container\">\r\n                <mwc-button label=\"Create\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                </mwc-button>\r\n              </div>\r\n            \r\n              <div class=\"flex form-input-container items-center text-center\">\r\n                <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                  ...\r\n                </label>\r\n                <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    `;\r\n  }\r\n\r\n  branchChange(e: Event) {\r\n    // @ts-ignore\r\n    this.selectedBranch = Number.isNaN(e.currentTarget.value)? 0: Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    this._branches = [...this._branches, ...__branches];\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_AttendanceAbsentLeaveStatus();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\n\r\n\r\nexport async function POST_AttendanceAbsentLeaveStatus(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/status',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"attendance-absent-leave-status\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Create Status?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","self","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","userLoginInfo","setActiveBranchIdCookie","stringData","JSON","stringify","removeActiveBranchIdCookie","getActiveBranchIdCookie","_cookie","cookie","parse","ClientBranch_S","id","Number","name","String","accountId","createdBy","creationDate","Date","updatedBy","updateDate","clientBranchInfo_S","GET_ClientBranches","type","_get_cookie","url","HTTP","method","headers","Authorization","token","console","errorHttp","AttendanceAbsentLeaveStatusAdd","constructor","super","accountType","selectedBranch","_userLoginInfo","_activeBranchId","_branches","connectedCallback","activeBranchId","this","length","user","branchId","setTimeout","getBranches","disconnectedCallback","render","userBranch","branchChange","map","value","submitForm","e","isNaN","currentTarget","firstUpdated","_networkResponse","__branches","push","response","success","preventDefault","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","then","networkCallRes","_RESPONSE","unknownError","errors","err","errormsg","res","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","Object","VALUE","message","window","location","reload","POST_AttendanceAbsentLeaveStatus","createRenderRoot","styles","property"],"sourceRoot":""}