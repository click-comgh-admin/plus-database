{"version":3,"file":"../../../client_dashboard/assets/v2/prod-files/js/2798.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/interfaces/boolean/index.ts","webpack://webpackNumbers/./src/addons/interfaces/datetime/date.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/index.ts","webpack://webpackNumbers/./src/addons/interfaces/datetime/time.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/schedules/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-in.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/start-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/second.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-out.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/end-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/third.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/cancel-clocking.ts"],"sourcesContent":["export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const Boolean_I = (bool: any) => {\r\n  const _bool = String(bool).toLowerCase();\r\n  // console.info({_bool});\r\n  \r\n  if (_bool === \"1\") {\r\n    return true;\r\n  } else if (_bool === \"true\") {\r\n    return true;\r\n  } else if (bool === true) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}","export function Date_I(dateTime: string): Date {\r\n\r\n  if (dateTime === 'null' || dateTime === null) {\r\n    return null;\r\n  }\r\n\r\n  let date = new Date(dateTime);\r\n  \r\n  // console.log({ date })\r\n  return date;\r\n}","import { Constituency_I, Constituency_S, _Constituency_D } from \"../location/constituency\";\r\nimport { Country_I, Country_S, _Country_D } from \"../location/country\";\r\nimport { District_I, District_S, _District_D } from \"../location/district\";\r\nimport { Region_I, Region_S, _Region_D } from \"../location/region\";\r\n\r\nexport interface ClientInfo_I {\r\n  id?: number,\r\n  name?: string,\r\n  accountType?: number,\r\n  country?: string,\r\n  stateProvince?: string,\r\n  applicantFirstname?: string,\r\n  applicantSurname?: string,\r\n  applicantGender?: number,\r\n  applicantPhone?: string,\r\n  applicantEmail?: string,\r\n  applicantDesignationRole?: number,\r\n  region?: number,\r\n  district?: number,\r\n  constituency?: number,\r\n  community?: string,\r\n  subscriptionDuration?: number,\r\n  subscriptionDate?: Date,\r\n  subscriptionFee?: string,\r\n  logo?: string,\r\n  status?: number,\r\n  archive?: number,\r\n  accountCategory?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  countryInfo?: Country_I,\r\n  regionInfo?: Region_I,\r\n  districtInfo?: District_I,\r\n  constituencyInfo?: Constituency_I,\r\n};\r\n\r\n\r\nexport function ClientInfo_S(data: any): ClientInfo_I {\r\n  // console.log({data});\r\n  \r\n  const clientInfo_S: ClientInfo_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountType: Number(data['accountType']),\r\n    country: String(data['country']),\r\n    stateProvince: String(data['stateProvince']),\r\n    applicantFirstname: String(data['applicantFirstname']),\r\n    applicantSurname: String(data['applicantSurname']),\r\n    applicantGender: Number(data['applicantGender']),\r\n    applicantPhone: String(data['applicantPhone']),\r\n    applicantEmail: String(data['applicantEmail']),\r\n    applicantDesignationRole: Number(data['applicantDesignationRole']),\r\n    region: Number(data['region']),\r\n    district: Number(data['district']),\r\n    constituency: Number(data['constituency']),\r\n    community: String(data['community']),\r\n    subscriptionDuration: Number(data['subscriptionDuration']),\r\n    subscriptionDate: new Date(data['updateDate']),\r\n    subscriptionFee: String(data['subscriptionFee']),\r\n    logo: String(data['logo']),\r\n    status: Number(data['status']),\r\n    archive: Number(data['archive']),\r\n    accountCategory: Number(data['accountCategory']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n    countryInfo: ('countryInfo' in data) ? Country_S(data['countryInfo']) : _Country_D(),\r\n    regionInfo: ('regionInfo' in data) ? Region_S(data['regionInfo']) : _Region_D(),\r\n    districtInfo: ('districtInfo' in data) ? District_S(data['districtInfo']) : _District_D(),\r\n    constituencyInfo: ('constituencyInfo' in data) ? Constituency_S(data['constituencyInfo']) : _Constituency_D(),\r\n  };\r\n\r\n  return clientInfo_S;\r\n}\r\n","export function Time_I(dateTime: string): Date {\r\n  const __dT: string = \"00:00:00\",\r\n    _dT_ = String(dateTime).toLocaleLowerCase().split(\"T\");\r\n  let _dT: string = __dT;\r\n  if (_dT_.length > 1) {\r\n    _dT = _dT_[1];\r\n    // _dT = _dT_[1].split('.')[0];\r\n  } else if (_dT_.length === 1) {\r\n    _dT = _dT_[0];\r\n  }\r\n\r\n  if (_dT === 'null') {\r\n    return null;\r\n  }\r\n\r\n  let today = new Date();\r\n  const newTime = _dT.split(':');\r\n  // console.log({ today, newTime })\r\n  if (newTime[0] !== undefined) {\r\n    today.setHours(Number(newTime[0]));\r\n  }\r\n  if (newTime[1] !== undefined) {\r\n    today.setMinutes(Number(newTime[1]));\r\n  }\r\n  if (newTime[2] !== undefined) {\r\n    today.setSeconds(Number(newTime[2]));\r\n  }\r\n  // console.log({ today })\r\n  return today;\r\n}","import { Boolean_I } from \"@@addons/interfaces/boolean\"\r\nimport { ClientInfo_I, ClientInfo_S } from \"@@addons/interfaces/clients\"\r\nimport { ClientBranches_I, ClientBranch_S } from \"@@addons/interfaces/clients/branches\"\r\nimport { Time_I } from \"@@addons/interfaces/datetime/time\"\r\nimport { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"@@addons/interfaces/members/groupings/member_categories\"\r\n\r\nexport interface MeetingEventSchedule_I {\r\n  id?: number,\r\n  type?: number,\r\n  memberType?: number,\r\n  name?: string,\r\n  clientId?: ClientInfo_I,\r\n  branchId?: ClientBranches_I,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  meetingSpan?: number,\r\n  startTime?: Date,\r\n  closeTime?: Date,\r\n  latenessTime?: Date,\r\n  isRecuring?: boolean,\r\n  hasBreakTime?: boolean,\r\n  hasDuty?: boolean,\r\n  hasOvertime?: boolean,\r\n  agenda?: string,\r\n  agendaFile?: string,\r\n  virtualMeetingLink?: string,\r\n  virtualMeetingType?: number\r\n  meetingLocation?: number\r\n  expectedMonthlyAttendance?: number\r\n  activeMonthlyAttendance?: number\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\n\r\nexport function MeetingEventSchedule_S(data: any): MeetingEventSchedule_I {\r\n  // console.log({data});\r\n  \r\n  const meetingEventSchedule_S: MeetingEventSchedule_I = {\r\n    id: Number(data['id']),\r\n    type: Number(data['type']),\r\n    memberType: Number(data['memberType']),\r\n    name: String(data['name']),\r\n    clientId: ClientInfo_S(data['clientId']),\r\n    branchId: ClientBranch_S(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    meetingSpan: Number(data['meetingSpan']),\r\n    startTime: Time_I(data['startTime']),\r\n    closeTime: Time_I(data['closeTime']),\r\n    latenessTime: Time_I(data['latenessTime']),\r\n    isRecuring: Boolean_I(data['isRecuring']),\r\n    hasBreakTime: Boolean_I(data['hasBreakTime']),\r\n    hasDuty: Boolean_I(data['hasDuty']),\r\n    hasOvertime: Boolean_I(data['hasOvertime']),\r\n    agenda: String(data['agenda']),\r\n    agendaFile: String(data['agendaFile']),\r\n    virtualMeetingLink: String(data['virtualMeetingLink']),\r\n    virtualMeetingType: Number(data['virtualMeetingType']),\r\n    meetingLocation: Number(data['meetingLocation']),\r\n    expectedMonthlyAttendance: Number(data['expectedMonthlyAttendance']),\r\n    activeMonthlyAttendance: Number(data['activeMonthlyAttendance']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return meetingEventSchedule_S;\r\n}\r\n","import { Boolean_I } from \"@@addons/interfaces/boolean\";\r\nimport { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { Time_I } from \"@@addons/interfaces/datetime/time\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MeetingEventSchedule_I, MeetingEventSchedule_S } from \"../meeting_event/schedules\";\r\n\r\nexport interface MemberClockingInfo_I {\r\n  id?: number,\r\n  meetingEventId?: MeetingEventSchedule_I,\r\n  memberId?: MembershipUser_I,\r\n  accountType?: number,\r\n  inOrOut?: boolean,\r\n  inTime?: Date,\r\n  outTime?: Date,\r\n  startBreak?: Date,\r\n  endBreak?: Date,\r\n  clockedBy?: number,\r\n  clockingMethod?: number,\r\n  clockingMethodName?: string,\r\n  date?: Date\r\n}\r\n\r\nexport function MemberClockingInfo_S(data: any): MemberClockingInfo_I {\r\n  // console.log({data});\r\n  \r\n  const memberClockingInfo_S: MemberClockingInfo_I = {\r\n    id: Number(data['id']),\r\n    meetingEventId: MeetingEventSchedule_S(data['meetingEventId']),\r\n    memberId: MembershipUser_S(data['memberId']),\r\n    accountType: Number(data['accountType']),\r\n    inOrOut: Boolean_I(data['inOrOut']),\r\n    // inTime: Time_I(data['inTime']),\r\n    // outTime: Time_I(data['outTime']),\r\n    // startBreak: Time_I(data['startBreak']),\r\n    // endBreak: Time_I(data['endBreak']),\r\n    inTime: Date_I(data['inTime']),\r\n    outTime: Date_I(data['outTime']),\r\n    startBreak: Date_I(data['startBreak']),\r\n    endBreak: Date_I(data['endBreak']),\r\n    clockedBy: Number(data['clockedBy']),\r\n    clockingMethod: Number(data['clockingMethod']),\r\n    clockingMethodName: String(data['clockingMethodName']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return memberClockingInfo_S;\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first\")\r\nexport class ClockerTablePartsFirst extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfo_I = null;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const clockingInfo = this.clockingInfo;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    const MEMBER_ID = base64Encode(String(clockingInfo.memberId.id), true);\r\n    return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n      <div class=\"d-block m-1\">\r\n        <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n          ${clockingInfo.clockingMethodName}\r\n        </span>\r\n      </div>\r\n      <div class=\"flex m-1 justify-evenly\">\r\n        <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\" click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n          url=\"${clockingInfo.memberId.profilePicture}\" size=\"32\"></user-profile-photo>\r\n      </div>\r\n      <div class=\"block m-1\">\r\n        <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n          <b>Name</b>: ${clockingInfo.memberId.firstname} ${clockingInfo.memberId.middlename} ${clockingInfo.memberId.surname}\r\n        </span>\r\n      </div>\r\n    </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockIn(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-in/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock In?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingStartBreak(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/start-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Start Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { PATCH_AttendanceClockingClockIn } from '@@addons/network/attendance/clocking/clock-in';\r\nimport { PATCH_AttendanceClockingStartBreak } from '@@addons/network/attendance/clocking/start-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\n\r\n/*this is to change automatically update clocking times since datatabel is not allowing it */\r\nexport const setClockingTimeInfo = (clockingTime: boolean, clockingTimeValue: string) => {\r\n  // @ts-ignore\r\n  window['clocker'] = {\r\n    'clockingTimeInfo': {\r\n      \"clockingTime\": clockingTime, \"clockingTimeValue\": clockingTimeValue,\r\n    }\r\n  };\r\n}\r\nexport const getClockingTimeInfo = () => {\r\n  if (\"clocker\" in window) {\r\n    // @ts-ignore\r\n    const CTI = window['clocker']['clockingTimeInfo'];\r\n    return {\r\n      \"clockingTime\": CTI.clockingTime, \"clockingTimeValue\": CTI.clockingTimeValue,\r\n    }\r\n\r\n  } return null;\r\n}\r\n\r\n@customElement(\"clocker-table-parts-second\")\r\nexport class ClockerTablePartsSecond extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  private clockingInfo: MemberClockingInfo_I = null;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const clockingInfo = this.clockingInfo;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n\r\n    const atDate = getDateTime(clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n    const inTime = clockingInfo.inTime;\r\n    // const atInTime = inTime !== null ? getLocalTime(inTime, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const atInTime = inTime !== null ? getDateTime(inTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    // console.log({atInTime, \"_clockingInfo.inTime\": _clockingInfo.inTime})\r\n    const CLOCK_ID = clockingInfo.id;\r\n    const CLOCKED = clockingInfo.inOrOut;\r\n    const startBreak = clockingInfo.startBreak;\r\n    // const atBreakTime = startBreak !== null ? getLocalTime(startBreak, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const atBreakTime = startBreak !== null ? getDateTime(startBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const TODAY = new Date();\r\n    const HAS_BREAKTIME = clockingInfo.meetingEventId.hasBreakTime;\r\n    // console.log({ HAS_BREAKTIME, _clockingInfo });\r\n    const IS_TODAY = clockingInfo.date.toDateString() === TODAY.toDateString();\r\n    return html`\r\n      <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n        <div class=\"flex justify-between\">\r\n          ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-in=\"${CLOCK_ID}\" name=\"member_check_in_${CLOCK_ID}\" id=\"member_check_in_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n          `: nothing}\r\n          <label for=\"member_check_in_${CLOCK_ID}\">@ ${atDate}</label>\r\n        </div>\r\n      </div>\r\n      ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0\" clock-id=\"${CLOCK_ID}\" clock-user=\"in\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n      `: nothing}\r\n      <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n        <span class=\"badge badge-success mx-1\">${IS_TODAY ? html`Today` : html`Post Clocking`}</span>\r\n        ${CLOCKED ? html`\r\n        <span class=\"badge badge-success bg-grow-early mx-1\">Present</span>`: html`\r\n        <span class=\"badge badge-danger mx-1\">Not Clocked</span>\r\n        `}\r\n      </div>\r\n      ${CLOCKED && (inTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock in Time</b>: ${atInTime}\r\n          </span>\r\n        </div>`: ''\r\n      }\r\n      ${this.clocking ? html`\r\n        ${HAS_BREAKTIME ? html`\r\n          <hr class=\"whitespace-nowrap\">\r\n          <div class=\"text-center whitespace-nowrap\">\r\n            <mwc-button raised class=\"shadow-sm success button\" label=\"Start Break\" clock-id=\"${CLOCK_ID}\" user-break=\"start\"\r\n              icon=\"check\">\r\n            </mwc-button>\r\n          </div>\r\n          `: ''\r\n        }\r\n      `: nothing}\r\n      ${(startBreak !== null) ? html`\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <span class=\"badge badge-light shadow p-2 m-1\">\r\n          <b>Break Start Time</b>: ${atBreakTime}\r\n        </span>\r\n      </div>`: ''\r\n      }\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"in\") {\r\n        // console.log({ \"clock in\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockInUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async clockInUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingClockIn(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingClockIn(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"start\") {\r\n        // console.log({ \"start break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.startUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async startUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e,element,CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingStartBreak(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingStartBreak(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockOut(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-out/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock Out?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingEndBreak(clockId: Number, time: string = null): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/end-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'End Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { PATCH_AttendanceCancelClocking } from '@@addons/network/attendance/clocking/cancel-clocking';\r\nimport { PATCH_AttendanceClockingClockOut } from '@@addons/network/attendance/clocking/clock-out';\r\nimport { PATCH_AttendanceClockingEndBreak } from '@@addons/network/attendance/clocking/end-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport { getClockingTimeInfo } from './second';\r\n\r\n\r\n@customElement(\"clocker-table-parts-third\")\r\nexport class ClockerTablePartsThird extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfo_I = null;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private excuseBaseUrl: string = \"/attendance/v2/clocking/excuse?clocking-id=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const clockingInfo = this.clockingInfo;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n\r\n    const atDate = getDateTime(clockingInfo.date, {dateStyle: \"medium\", timeStyle: \"short\"}); // Sun, 07:39 AM\r\n    const outTime = clockingInfo.outTime;\r\n    // const atOutTime = outTime !== null ? getLocalTime(outTime, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n    const atOutTime = outTime !== null ? getDateTime(outTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    // console.log({atOutTime, \"clockingInfo.outTime\": clockingInfo.outTime})\r\n    const CLOCK_ID = clockingInfo.id;\r\n    const CLOCKED = clockingInfo.inOrOut;\r\n    const endBreak = clockingInfo.endBreak;\r\n    // const atBreakTime = endBreak !== null ? getLocalTime(endBreak, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n    const atBreakTime = endBreak !== null ? getDateTime(endBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const HAS_BREAKTIME = clockingInfo.meetingEventId.hasBreakTime;\r\n    const CLOCK_ID_ENC = base64Encode(String(CLOCK_ID), true);\r\n    // console.log({ HAS_BREAKTIME, clockingInfo });\r\n    return html`\r\n      <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n        <div class=\"flex justify-between\">\r\n          ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-out=\"${CLOCK_ID}\" name=\"member_check_out_${CLOCK_ID}\" id=\"member_check_out_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n          `: nothing}\r\n          <label for=\"member_check_out_${CLOCK_ID}\">@ ${atDate}</label>\r\n        </div>\t\r\n      </div>\r\n      ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\" clock-user=\"out\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\" cancel-user-clock=\"true\">\r\n            <span class=\"pe-7s-close-circle bg-love-kiss fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n      `: nothing}\r\n      <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n        <span class=\"badge badge-warning\">'X' to Cancel Attendance</span>\r\n      </div>\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <a href=\"${this.excuseBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-info btn-sm\" target=\"_blank\" type=\"button\">Enter/ View Excuse</a>\r\n      </div>\r\n      ${CLOCKED && (outTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock out Time</b>: ${atOutTime}\r\n          </span>\r\n        </div>`: ''\r\n      }\r\n      ${this.clocking ? html`\r\n        ${HAS_BREAKTIME ? html`\r\n          <hr class=\"whitespace-nowrap\">\r\n          <div class=\"text-center whitespace-nowrap\">\r\n            <mwc-button raised class=\"shadow-sm info button\" label=\"End Break\" clock-id=\"${CLOCK_ID}\"\r\n              user-break=\"end\" icon=\"close\">\r\n            </mwc-button>\r\n          </div>\r\n          `: ''\r\n        }\r\n      `: nothing}\r\n      ${(endBreak !== null) ? html`\r\n        <div class=\"text-center\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break End Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n      }\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n    this.cancelClocking();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      this.clockingTime = CTI.clockingTime;\r\n      this.clockingTimeValue = CTI.clockingTimeValue;\r\n    });\r\n  }\r\n\r\n  private cancelClocking() {\r\n    const selectorString = 'cancel-user-clock=\"true\"';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(cancelClock => {\r\n      cancelClock.addEventListener('click', async (e) => {\r\n        e.preventDefault();\r\n        const CLOCK_ID = Number(cancelClock.getAttribute('clock-id'));\r\n        await PATCH_AttendanceCancelClocking(CLOCK_ID);\r\n      });\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"out\") {\r\n        // console.log({ \"clock out\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockOutUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async clockOutUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingClockOut(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingClockOut(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"end\") {\r\n        // console.log({ \"end break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.endUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async endUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingEndBreak(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingEndBreak(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceCancelClocking(clockId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/cancel-clocking/' + clockId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Cancel Clocking?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}"],"names":["getDateTime","date","options","Date","toLocaleString","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","Boolean_I","bool","_bool","String","toLowerCase","Date_I","dateTime","ClientInfo_S","id","Number","name","accountType","country","stateProvince","applicantFirstname","applicantSurname","applicantGender","applicantPhone","applicantEmail","applicantDesignationRole","region","district","constituency","community","subscriptionDuration","subscriptionDate","subscriptionFee","logo","status","archive","accountCategory","creationDate","updatedBy","updateDate","countryInfo","regionInfo","districtInfo","constituencyInfo","Time_I","_dT_","toLocaleLowerCase","split","_dT","length","today","newTime","undefined","setHours","setMinutes","setSeconds","MeetingEventSchedule_S","type","memberType","clientId","branchId","memberCategoryId","meetingSpan","startTime","closeTime","latenessTime","isRecuring","hasBreakTime","hasDuty","hasOvertime","agenda","agendaFile","virtualMeetingLink","virtualMeetingType","meetingLocation","expectedMonthlyAttendance","activeMonthlyAttendance","MemberClockingInfo_S","meetingEventId","memberId","inOrOut","inTime","outTime","startBreak","endBreak","clockedBy","clockingMethod","clockingMethodName","ClockerTablePartsFirst","constructor","super","_data","_type","clockingInfo","clocking_info","memberProfileBaseUrl","value","this","requestUpdate","connectedCallback","_clockingInfo","JSON","parse","disconnectedCallback","render","MEMBER_ID","profilePicture","firstname","middlename","surname","firstUpdated","createRenderRoot","styles","PATCH_AttendanceClockingClockIn","clockId","time","_get_cookie","url","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","stringify","headers","Authorization","token","then","HTTP","networkCallRes","_RESPONSE","response","unknownError","errors","e","err","errormsg","push","res","catch","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","Object","VALUE","message","setTimeout","window","location","reload","PATCH_AttendanceClockingStartBreak","setClockingTimeInfo","clockingTime","clockingTimeValue","getClockingTimeInfo","CTI","ClockerTablePartsSecond","clocking","atDate","dateStyle","timeStyle","atInTime","CLOCK_ID","CLOCKED","atBreakTime","TODAY","HAS_BREAKTIME","IS_TODAY","toDateString","clockUser","userBreak","setInterval","document","querySelectorAll","getAttribute","addEventListener","clockInUser","element","preventDefault","console","log","startUserBreak","property","Boolean","PATCH_AttendanceClockingClockOut","PATCH_AttendanceClockingEndBreak","ClockerTablePartsThird","excuseBaseUrl","atOutTime","CLOCK_ID_ENC","base64","cancelClocking","cancelClock","PATCH_AttendanceCancelClocking","clockOutUser","endUserBreak"],"sourceRoot":""}