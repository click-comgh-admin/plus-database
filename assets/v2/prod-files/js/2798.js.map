{"version":3,"file":"../../../client_dashboard/assets/v2/prod-files/js/2798.js","mappings":"iIAAO,MAiBMA,EAAc,CAACC,EAAYC,KACvB,IAAIC,KAGP,IAAIA,KAFA,GAAGF,KAGNG,eAAe,QAASF,K,iECIhC,SAASG,EAA+BC,GAmB7C,MAhBuE,CACrEC,GAAIC,OAAOF,EAAS,IACpBG,SAAUD,OAAOF,EAAe,UAChCI,YAAY,OAAiBJ,EAAiB,YAC9CK,SAAUC,OAAON,EAAe,UAChCO,UAAWD,OAAON,EAAgB,WAClCQ,YAAaF,OAAON,EAAkB,aACtCS,WAAYH,OAAON,EAAiB,YACpCU,QAASJ,OAAON,EAAc,SAC9BW,SAAUL,OAAON,EAAe,UAChCY,gBAAiBN,OAAON,EAAsB,iBAC9Ca,oBAAqBP,OAAON,EAA0B,qBACtDc,YAAY,OAAOd,EAAiB,YACpCL,MAAM,OAAOK,EAAW,OAMrB,SAASe,EAAyBf,GAUvC,MAP2D,CACzDgB,YAAY,OAAqBhB,EAAiB,YAClDiB,eAAgBlB,EAA+BC,EAAqB,gBACpEkB,UAAU,OAAOlB,EAAe,UAChCmB,OAAQb,OAAON,EAAa,W,6gBC9ChC,IAAaoB,EAAb,cAA4C,KAC1CC,cAAgBC,QAER,KAAAC,MAAa,KAWb,KAAAC,MAAa,KAWb,KAAAC,aAAgE,KAGhE,KAAAC,UAAqB,EAGrB,KAAAC,cAAyB,GAGzB,KAAAC,qBAA+B,+BA7B5B5B,SAAK6B,GACdC,KAAKP,MAAQM,EACbC,KAAKC,gBAGI/B,WACT,OAAO8B,KAAKP,MAKHS,SAAKH,GACdC,KAAKN,MAAQK,EACbC,KAAKC,gBAGIC,WACT,OAAOF,KAAKN,MAcdS,oBACEX,MAAMW,oBAEN,MAAMC,EAAgBC,KAAKC,MAAMN,KAAKH,eAGhB,OAAlBO,IACE,eAAgBA,GAClB,mBAAoBA,GACpB,aAAcA,GACd,WAAYA,GACZJ,KAAKJ,UAAW,EAChBI,KAAKL,cAAe,OAAyBS,KAE7CJ,KAAKJ,UAAW,EAChBI,KAAKL,cAAe,OAAqBS,KAM/CG,wBAOYC,sBAEV,OAAOR,KAAKL,aAGFc,0BAEV,OAAOT,KAAKL,aAGde,SACE,MAAMd,EAAWI,KAAKJ,SACpBD,EAAeK,KAAKQ,gBACpBG,EAAmBX,KAAKS,oBACxBG,QAAQC,IAAI,CAAE,aAAgBlB,IAC9BiB,QAAQC,IAAI,CAAE,iBAAoBF,IACpC,MAAMG,GAAY,OAAatC,OAAOoB,EAAUe,EAAiBzB,WAAWb,SAASF,GAAIwB,EAAatB,SAASF,KAAK,GACpH,OAAO,IAAI;;;QAGPyB,EAAUe,EAAiBzB,WAAW6B,mBAAoBpB,EAAaoB;;;;;uBAKxDf,KAAKF,uBAAuBgB;aACtClB,EAAUe,EAAiBzB,WAAWb,SAAS2C,eAAgBrB,EAAatB,SAAS2C;;;;qBAI7EpB,EAAUe,EAAiBzB,WAAWb,SAAS4C,UAAWtB,EAAatB,SAAS4C,aAAarB,EAAUe,EAAiBzB,WAAWb,SAAS6C,WAAYvB,EAAatB,SAAS6C;QAC3LtB,EAAUe,EAAiBzB,WAAWb,SAAS8C,QAASxB,EAAatB,SAAS8C;;;QAMpFC,gBAEAC,mBACE,OAAOrB,OA9CF,EAAAsB,OAAS,CACd,IAAG;;KA/BL,IADC,OAAS,CAAEpB,KAAMqB,U,yDAIlB,IADC,OAAS,CAAErB,KAAM1B,S,6DAIlB,IADC,OAAS,CAAE0B,KAAM1B,S,oEAjCPc,EAAsB,IADlC,OAAc,6B,2BACFA,I,obCAN,SAAekC,EAAgCC,EAAiBC,EAAe,M,yCAEpF,MAAMC,GAAc,UAGdC,EAAM,8BAAsC,gDAAkDH,EAClGI,EAAqB,OAATH,EAAiB,GAAK,CAAE,KAAQA,GAE9C,OAAO,SAAU,CACfI,MAAO,YAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,EAAD,gCAC1B,aAAa,EAAAC,EAAA,GAAKf,EAAK,CACrBgB,OAAQ,QACRC,KAAMxC,KAAKyC,UAAUjB,GACrBkB,QAAS,CACPC,cAAe,SAAWrB,EAAYsB,SAEvC,GAAMC,MAAMC,IAGb,MAAMC,EAAiB,IAAI,IAA6B,QAASD,GAAM,GACjEE,EAAYD,EAAeE,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAEC,MAAOH,EAAExF,GAAK,KAAOyF,GACzB,qBAATD,EAAExF,KACJ0F,EAAW,CAAEC,MAAOF,IAGtBH,EAAOM,KAAKF,SAIhB,MAAMG,GAAM,EAAAC,EAAA,GAAwBR,GACpC,0BACE,GAAGO,KAIT,OAAOZ,KACNc,OAAMJ,IACP,0BACE,GAAGtF,OAAOsF,YAIhBK,kBAAmB,KAAO,kBACzBjB,MAAMkB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACjB,MAAMC,EAASH,EAAOrE,MAEtB,GAAIwE,aAAkBC,QAA+B,OAApBD,EAAOjB,SAAoB,CAC1D,MAAMmB,EAAwCF,EAAOjB,SACrDgB,EAAa9F,OAAOiG,EAAMC,SAGxBH,aAAkBC,QAA+B,OAApBD,EAAOjB,WACtC,SAAU,CACRxB,MAAOwC,EACPvC,KAAM,UACNC,UAAW,UACXI,mBAAoB,YAEtBuC,YAAW,KACTC,OAAOC,SAASC,WACf,a,0SCrFJ,SAAeC,EAAmCtD,EAAiBC,EAAe,M,yCAEvF,MAAMC,GAAc,UAGdC,EAAM,8BAAsC,mDAAqDH,EACrGI,EAAqB,OAATH,EAAiB,GAAK,CAAE,KAAQA,GAE9C,OAAO,SAAU,CACfI,MAAO,eAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,kCAC3B,aAAa,EAAAC,EAAA,GAAKf,EAAK,CACrBgB,OAAQ,QACRC,KAAMxC,KAAKyC,UAAUjB,GACrBkB,QAAS,CACPC,cAAe,SAAWrB,EAAYsB,SAEvC,GAAMC,MAAMC,IAGb,MAAMC,EAAiB,IAAI,IAA6B,QAASD,GAAM,GACjEE,EAAYD,EAAeE,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAEC,MAAOH,EAAExF,GAAK,KAAOyF,GACzB,qBAATD,EAAExF,KACJ0F,EAAW,CAAEC,MAAOF,IAGtBH,EAAOM,KAAKF,SAIhB,MAAMG,GAAM,EAAAC,EAAA,GAAwBR,GACpC,0BACE,GAAGO,KAIT,OAAOZ,KACNc,OAAMJ,IACP,0BACE,GAAGtF,OAAOsF,YAIhBK,kBAAmB,KAAO,kBACzBjB,MAAMkB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACjB,MAAMC,EAASH,EAAOrE,MAEtB,GAAIwE,aAAkBC,QAA+B,OAApBD,EAAOjB,SAAoB,CAC1D,MAAMmB,EAAwCF,EAAOjB,SACrDgB,EAAa9F,OAAOiG,EAAMC,SAGxBH,aAAkBC,QAA+B,OAApBD,EAAOjB,WACtC,SAAU,CACRxB,MAAOwC,EACPvC,KAAM,UACNC,UAAW,UACXI,mBAAoB,YAEtBuC,YAAW,KACTC,OAAOC,SAASC,WACf,a,swBCnFJ,MAAME,EAAsB,CAACC,EAAuBC,KAEzDN,OAAgB,QAAI,CAClB,iBAAoB,CAClB,aAAgBK,EAAc,kBAAqBC,KAI5CC,EAAsB,KACjC,GAAI,YAAaP,OAAQ,CAEvB,MAAMQ,EAAMR,OAAgB,QAAoB,iBAChD,GAAI,iBAAkBQ,EAAK,MAAO,CAChC,aAAgBA,EAAIH,aAAc,kBAAqBG,EAAIF,mBAG7D,OAAO,MAIX,IAAaG,EAAb,cAA6C,KAC3C9F,cAAgBC,QAER,KAAAC,MAAa,KAWb,KAAAC,MAAa,KAYd,KAAAwF,kBAA6B,GAG7B,KAAAI,UAAoB,EAGpB,KAAAL,cAAwB,EAEvB,KAAAtF,aAAgE,KAGhE,KAAAC,UAAqB,EAGrB,KAAAC,cAAyB,GAnCtB3B,SAAK6B,GACdC,KAAKP,MAAQM,EACbC,KAAKC,gBAGI/B,WACT,OAAO8B,KAAKP,MAKHS,SAAKH,GACdC,KAAKN,MAAQK,EACbC,KAAKC,gBAGIC,WACT,OAAOF,KAAKN,MAoBdS,oBACEX,MAAMW,oBAGN,MAAMC,EAAgBC,KAAKC,MAAMN,KAAKH,eAGhB,OAAlBO,IACE,eAAgBA,GAClB,mBAAoBA,GACpB,aAAcA,GACd,WAAYA,GACZJ,KAAKJ,UAAW,EAChBI,KAAKL,cAAe,OAAyBS,KAE7CJ,KAAKJ,UAAW,EAChBI,KAAKL,cAAe,OAAqBS,KAM/CG,wBAOYC,sBAEV,OAAOR,KAAKL,aAGFc,0BAEV,OAAOT,KAAKL,aAGde,SACE,MAAMd,EAAWI,KAAKJ,SACpBD,EAAeK,KAAKQ,gBACpBG,EAAmBX,KAAKS,oBAGpB8E,GAAS,OAAY3F,EAAWe,EAAiBzB,WAAWrB,KAAO8B,EAAa9B,KAAM,CAAE2H,UAAW,SAAUC,UAAW,UACxHC,EAAS9F,EAAWe,EAAiBzB,WAAWwG,OAAS/F,EAAa+F,OAEtEC,EAAsB,OAAXD,GAAkB,OAAYA,EAAQ,CAAEF,UAAW,SAAUC,UAAW,UAAa,QAEhGG,EAAWhG,EAAWe,EAAiBzB,WAAWf,GAAKwB,EAAaxB,GACpE0H,EAAUjG,EAAWe,EAAiBzB,WAAW4G,QAAUnG,EAAamG,QACxEC,EAAanG,EAAWe,EAAiBzB,WAAW6G,WAAapG,EAAaoG,WAE9EC,EAA6B,OAAfD,GAAsB,OAAYA,EAAY,CAAEP,UAAW,SAAUC,UAAW,UAAa,QAC3GQ,EAAQ,IAAIlI,KACZmI,EAAgBtG,EAAWe,EAAiBzB,WAAWiH,eAAeC,aAAezG,EAAawG,eAAeC,aAEjHC,GAAYzG,EAAWe,EAAiBzB,WAAWrB,KAAKyI,eAAiB3G,EAAa9B,KAAKyI,kBAAoBL,EAAMK,eAC3H,OAAO,IAAI;;;YAGHtG,KAAKsF,SAAW,IAAI;yDACyBM,4BAAmCA;kCAC1DA;;YAErB;wCAC2BA,QAAeL;;;QAG/CvF,KAAKsF,SAAW,IAAI;;wFAE4DM;;;;;iDAKvCS,EAAW,IAAI,QAAU,IAAI;UACpER,EAAU,IAAI;6EACsD,IAAI;;;;QAIzE,IAAI;;2BAEclF,EAAiBxB,eAAeb,WAAWiI;;;0DAGZ5F,EAAiBxB,eAAeN;;;;;QAKlFgH,GAAuB,OAAXH,EAAmB,IAAI;;;kCAGTC;;cAEnB;QAEP3F,KAAKsF,SAAW,IAAI;UAClBY,EAAgB,IAAI;;;8FAGgEN;;;;UAInF;QAEF;QACe,OAAfG,EAAuB,IAAI;;;qCAGCC;;cAEtB;MAKb5E,eACEpB,KAAKwG,YACLxG,KAAKyG,YAELC,aAAY,KACV,MAAMtB,EAAMD,IACA,OAARC,IACFpF,KAAKiF,aAAeG,EAAIH,aACxBjF,KAAKkF,kBAAoBE,EAAIF,sBAK3BsB,YAENG,SAASC,iBAAiB,gBAA4BlD,SAAQ8C,IAG1C,OADcA,EAAUK,aAHrB,eAMnBL,EAAUM,iBAAiB,SAAUnD,IACnC3D,KAAK+G,YAAYP,EAAW7C,SAM9BoD,YAAYC,EAAkBrD,G,yCAClCA,EAAEsD,iBACFrG,QAAQC,IAAI,CAAE,oBAAqBb,KAAKiF,aAAc,yBAA0BjF,KAAKkF,oBAErF,MAAMU,EAAWxH,OAAO4I,EAAQH,aAAa,aAEzC7G,KAAKiF,mBACDzD,EAAgCoE,EAAU5F,KAAKkF,yBAE/C1D,EAAgCoE,MAKlCa,YAENE,SAASC,iBAAiB,gBAA4BlD,SAAQ+C,IAG1C,UADiBA,EAAUI,aAHxB,eAMnBJ,EAAUK,iBAAiB,SAAUnD,IACnC3D,KAAKkH,eAAeT,EAAW9C,SAMjCuD,eAAeF,EAAkBrD,G,yCACrCA,EAAEsD,iBACF,MAAMrB,EAAWxH,OAAO4I,EAAQH,aAAa,aAEzC7G,KAAKiF,mBACDF,EAAmCa,EAAU5F,KAAKkF,yBAElDH,EAAmCa,MAI7CvE,mBACE,OAAOrB,OArKF,EAAAsB,OAAS,CACd,IAAG;;KAxCL,IADC,EAAA6F,EAAA,GAAS,CAAEjH,KAAM1B,S,iEAIlB,IADC,EAAA2I,EAAA,GAAS,CAAEjH,KAAMqB,U,yDAIlB,IADC,EAAA4F,EAAA,GAAS,CAAEjH,KAAMqB,U,6DAMlB,IADC,EAAA4F,EAAA,GAAS,CAAEjH,KAAMqB,U,yDAIlB,IADC,EAAA4F,EAAA,GAAS,CAAEjH,KAAM1B,S,6DAvCP6G,EAAuB,IADnC,OAAc,8B,2BACFA,I,ysBCtBN,SAAe+B,EAAiC3F,EAAiBC,EAAe,M,yCAErF,MAAMC,GAAc,UAGdC,EAAM,8BAAsC,iDAAmDH,EACnGI,EAAqB,OAATH,EAAiB,GAAK,CAAE,KAAQA,GAE9C,OAAO,SAAU,CACfI,MAAO,aAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,kCAC3B,aAAa,EAAAC,EAAA,GAAKf,EAAK,CACrBgB,OAAQ,QACRC,KAAMxC,KAAKyC,UAAUjB,GACrBkB,QAAS,CACPC,cAAe,SAAWrB,EAAYsB,SAEvC,GAAMC,MAAMC,IAGb,MAAMC,EAAiB,IAAI,IAA6B,QAASD,GAAM,GACjEE,EAAYD,EAAeE,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAEC,MAAOH,EAAExF,GAAK,KAAOyF,GACzB,qBAATD,EAAExF,KACJ0F,EAAW,CAAEC,MAAOF,IAGtBH,EAAOM,KAAKF,SAIhB,MAAMG,GAAM,EAAAC,EAAA,GAAwBR,GACpC,0BACE,GAAGO,KAIT,OAAOZ,KACNc,OAAMJ,IACP,0BACE,GAAGtF,OAAOsF,YAIhBK,kBAAmB,KAAO,kBACzBjB,MAAMkB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACjB,MAAMC,EAASH,EAAOrE,MAEtB,GAAIwE,aAAkBC,QAA+B,OAApBD,EAAOjB,SAAoB,CAC1D,MAAMmB,EAAwCF,EAAOjB,SACrDgB,EAAa9F,OAAOiG,EAAMC,SAGxBH,aAAkBC,QAA+B,OAApBD,EAAOjB,WACtC,SAAU,CACRxB,MAAOwC,EACPvC,KAAM,UACNC,UAAW,UACXI,mBAAoB,YAEtBuC,YAAW,KACTC,OAAOC,SAASC,WACf,a,0SCrFJ,SAAeuC,EAAiC5F,EAAiBC,EAAe,M,yCAErF,MAAMC,GAAc,UAGdC,EAAM,8BAAsC,iDAAmDH,EACnGI,EAAqB,OAATH,EAAiB,GAAK,CAAE,KAAQA,GAE9C,OAAO,SAAU,CACfI,MAAO,aAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,kCAC3B,aAAa,EAAAC,EAAA,GAAKf,EAAK,CACrBgB,OAAQ,QACRC,KAAMxC,KAAKyC,UAAUjB,GACrBkB,QAAS,CACPC,cAAe,SAAWrB,EAAYsB,SAEvC,GAAMC,MAAMC,IAGb,MAAMC,EAAiB,IAAI,IAA6B,QAASD,GAAM,GACjEE,EAAYD,EAAeE,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAEC,MAAOH,EAAExF,GAAK,KAAOyF,GACzB,qBAATD,EAAExF,KACJ0F,EAAW,CAAEC,MAAOF,IAGtBH,EAAOM,KAAKF,SAIhB,MAAMG,GAAM,EAAAC,EAAA,GAAwBR,GACpC,0BACE,GAAGO,KAIT,OAAOZ,KACNc,OAAMJ,IACP,0BACE,GAAGtF,OAAOsF,YAIhBK,kBAAmB,KAAO,kBACzBjB,MAAMkB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACjB,MAAMC,EAASH,EAAOrE,MAEtB,GAAIwE,aAAkBC,QAA+B,OAApBD,EAAOjB,SAAoB,CAC1D,MAAMmB,EAAwCF,EAAOjB,SACrDgB,EAAa9F,OAAOiG,EAAMC,SAGxBH,aAAkBC,QAA+B,OAApBD,EAAOjB,WACtC,SAAU,CACRxB,MAAOwC,EACPvC,KAAM,UACNC,UAAW,UACXI,mBAAoB,YAEtBuC,YAAW,KACTC,OAAOC,SAASC,WACf,a,uwBChFX,IAAawC,EAAb,cAA4C,KAC1C/H,cAAgBC,QAER,KAAAC,MAAa,KAWb,KAAAC,MAAa,KAWb,KAAAC,aAAgE,KAGhE,KAAAC,UAAqB,EAGrB,KAAAC,cAAyB,GAG1B,KAAAyF,UAAoB,EAGpB,KAAAJ,kBAA6B,GAG7B,KAAAD,cAAwB,EAGvB,KAAAsC,cAAwB,8CAGxB,KAAAC,gBAA0B,iDAzCvBtJ,SAAK6B,GACdC,KAAKP,MAAQM,EACbC,KAAKC,gBAGI/B,WACT,OAAO8B,KAAKP,MAKHS,SAAKH,GACdC,KAAKN,MAAQK,EACbC,KAAKC,gBAGIC,WACT,OAAOF,KAAKN,MA0BdS,oBACEX,MAAMW,oBAEN,MAAMC,EAAgBC,KAAKC,MAAMN,KAAKH,eAGhB,OAAlBO,IACE,eAAgBA,GAClB,mBAAoBA,GACpB,aAAcA,GACd,WAAYA,GACZJ,KAAKJ,UAAW,EAChBI,KAAKL,cAAe,OAAyBS,KAE7CJ,KAAKJ,UAAW,EAChBI,KAAKL,cAAe,OAAqBS,KAM/CG,wBAOYC,sBAEV,OAAOR,KAAKL,aAGFc,0BAEV,OAAOT,KAAKL,aAGde,SACE,MAAMd,EAAWI,KAAKJ,SACpBD,EAAeK,KAAKQ,gBACpBG,EAAmBX,KAAKS,oBAGpB8E,GAAS,OAAY3F,EAAWe,EAAiBzB,WAAWrB,KAAO8B,EAAa9B,KAAM,CAAE2H,UAAW,SAAUC,UAAW,UACxHgC,EAAU7H,EAAWe,EAAiBzB,WAAWuI,QAAU9H,EAAa8H,QAExEC,EAAwB,OAAZD,GAAmB,OAAYA,EAAS,CAAEjC,UAAW,SAAUC,UAAW,UAAa,QAEnGG,EAAWhG,EAAWe,EAAiBzB,WAAWf,GAAKwB,EAAaxB,GACpE0H,EAAUjG,EAAWe,EAAiBzB,WAAW4G,QAAUnG,EAAamG,QACxE6B,EAAW/H,EAAWe,EAAiBzB,WAAWyI,SAAWhI,EAAagI,SAE1E3B,EAA2B,OAAb2B,GAAoB,OAAYA,EAAU,CAAEnC,UAAW,SAAUC,UAAW,UAAa,QACvGS,EAAgBtG,EAAWe,EAAiBzB,WAAWiH,eAAeC,aAAezG,EAAawG,eAAeC,aACjHwB,GAAe,EAAAC,EAAA,GAAarJ,OAAOoH,IAAW,GAEpD,OAAO,IAAI;;;YAGH5F,KAAKsF,SAAW,IAAI;0DAC0BM,6BAAoCA;mCAC3DA;;YAEtB;yCAC4BA,QAAeL;;;QAGhDvF,KAAKsF,SAAW,IAAI;;6FAEiEM;;;6FAGAA;;;;;;;;QAQpF;;mBAEU5F,KAAKuH,gBAAgBK;;mBAErB5H,KAAKwH,kBAAkBI;;QAElC/B,GAAwB,OAAZ4B,EAAoB,IAAI;;;mCAGTC;;cAEpB;QAEP1H,KAAKsF,SAAW,IAAI;QACpBY,EAAgB,IAAI;;;uFAG2DN;;;;QAI9E;QAEA;QACa,OAAb+B,EAAqB,IAAI;;;mCAGC3B;;cAEpB;MAKb5E,eACEpB,KAAKwG,YACLxG,KAAKyG,YACLzG,KAAK8H,iBAELpB,aAAY,KACV,MAAMtB,GAAM,UACA,OAARA,IACFpF,KAAKiF,aAAeG,EAAIH,aACxBjF,KAAKkF,kBAAoBE,EAAIF,sBAK3B4C,iBAENnB,SAASC,iBAAiB,8BAA4BlD,SAAQqE,IAC5DA,EAAYjB,iBAAiB,SAAgBnD,GAAM,kCACjDA,EAAEsD,iBACF,MAAMrB,EAAWxH,OAAO2J,EAAYlB,aAAa,mBC3LlD,SAA8CpF,G,yCAEnD,MAAME,GAAc,UAGdC,EAAM,8BAAsC,uDAAyDH,EACzGI,EAAW,GAEb,OAAO,SAAU,CACfC,MAAO,mBAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,EAAD,gCAC1B,aAAa,EAAAC,EAAA,GAAKf,EAAK,CACrBgB,OAAQ,QACRC,KAAMxC,KAAKyC,UAAUjB,GACrBkB,QAAS,CACPC,cAAe,SAAWrB,EAAYsB,SAEvC,GAAMC,MAAMC,IAGb,MAAMC,EAAiB,IAAI,IAA6B,QAASD,GAAM,GACjEE,EAAYD,EAAeE,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAaG,SAAQC,IACbA,EAAEF,OACVC,SAAQE,IACd,IAAIC,EAAW,CAAEC,MAAOH,EAAExF,GAAK,KAAOyF,GACzB,qBAATD,EAAExF,KACJ0F,EAAW,CAAEC,MAAOF,IAGtBH,EAAOM,KAAKF,SAIhB,MAAMG,GAAM,EAAAC,EAAA,GAAwBR,GACpC,0BACE,GAAGO,KAIT,OAAOZ,KACNc,OAAMJ,IACP,0BACE,GAAGtF,OAAOsF,YAIhBK,kBAAmB,KAAO,kBACzBjB,MAAMkB,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACjB,MAAMC,EAASH,EAAOrE,MAEtB,GAAIwE,aAAkBC,QAA+B,OAApBD,EAAOjB,SAAoB,CAC1D,MAAMmB,EAAwCF,EAAOjB,SACrDgB,EAAa9F,OAAOiG,EAAMC,SAGxBH,aAAkBC,QAA+B,OAApBD,EAAOjB,WACtC,SAAU,CACRxB,MAAOwC,EACPvC,KAAM,UACNC,UAAW,UACXI,mBAAoB,YAEtBuC,YAAW,KACTC,OAAOC,SAASC,WACf,aDuGGkD,CAA+BpC,WAKnCY,YAENG,SAASC,iBAAiB,gBAA4BlD,SAAQ8C,IAG1C,QADcA,EAAUK,aAHrB,eAMnBL,EAAUM,iBAAiB,SAAUnD,IACnC3D,KAAKiI,aAAazB,EAAW7C,SAO/BsE,aAAajB,EAAkBrD,G,yCACnCA,EAAEsD,iBACF,MAAMrB,EAAWxH,OAAO4I,EAAQH,aAAa,aAEzC7G,KAAKiF,mBACDmC,EAAiCxB,EAAU5F,KAAKkF,yBAEhDkC,EAAiCxB,MAInCa,YAENE,SAASC,iBAAiB,gBAA4BlD,SAAQ+C,IAG1C,QADiBA,EAAUI,aAHxB,eAMnBJ,EAAUK,iBAAiB,SAAUnD,IACnC3D,KAAKkI,aAAazB,EAAW9C,SAO/BuE,aAAalB,EAAkBrD,G,yCACnCA,EAAEsD,iBACF,MAAMrB,EAAWxH,OAAO4I,EAAQH,aAAa,aAC7CjG,QAAQC,IAAI,CAAE8C,EAAAA,EAAGqD,QAAAA,EAASpB,SAAAA,IACtB5F,KAAKiF,mBACDoC,EAAiCzB,EAAU5F,KAAKkF,yBAEhDmC,EAAiCzB,MAI3CvE,mBACE,OAAOrB,OA3KF,EAAAsB,OAAS,CACd,IAAG;;KA3CL,IADC,EAAA6F,EAAA,GAAS,CAAEjH,KAAMqB,U,yDAIlB,IADC,EAAA4F,EAAA,GAAS,CAAEjH,KAAM1B,S,6DAIlB,IADC,EAAA2I,EAAA,GAAS,CAAEjH,KAAMqB,U,yDAIlB,IADC,EAAA4F,EAAA,GAAS,CAAEjH,KAAM1B,S,iEAIlB,IADC,EAAA2I,EAAA,GAAS,CAAEjH,KAAMqB,U,6DAIlB,IADC,EAAA4F,EAAA,GAAS,CAAEjH,KAAM1B,S,6DAIlB,IADC,EAAA2I,EAAA,GAAS,CAAEjH,KAAM1B,S,+DA7CP8I,EAAsB,IADlC,OAAc,6B,2BACFA","sources":["webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index_full.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-in.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/start-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/second.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-out.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/end-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/third.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/cancel-clocking.ts"],"sourcesContent":["export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","import { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from \".\";\r\n\r\nexport interface MemberClockingInfoFull_I {\r\n  attendance?: MemberClockingInfo_I,\r\n  additionalInfo?: MemberClockingAdditionalInfo_I,\r\n  lastSeen?: Date,\r\n  status?: String,\r\n}\r\nexport interface MemberClockingAdditionalInfo_I {\r\n  id?: number,\r\n  memberId?: number,\r\n  memberInfo?: MembershipUser_I,\r\n  placeOfWork?: string,\r\n  whatsapp?: string,\r\n  facebook?: string,\r\n  twitter?: string,\r\n  instagram?: string,\r\n  businessHashtag?: string,\r\n  businessDescription?: string,\r\n  profession?: string,\r\n  dateJoined?: Date,\r\n  date?: Date\r\n}\r\n\r\nexport function MemberClockingAdditionalInfo_S(data: any): MemberClockingAdditionalInfo_I {\r\n  // console.log({data});\r\n  \r\n  const MemberClockingAdditionalInfo_S: MemberClockingAdditionalInfo_I = {\r\n    id: Number(data['id']),\r\n    memberId: Number(data['memberId']),\r\n    memberInfo: MembershipUser_S(data['memberInfo']),\r\n    facebook: String(data['facebook']),\r\n    instagram: String(data['instagram']),\r\n    placeOfWork: String(data['placeOfWork']),\r\n    profession: String(data['profession']),\r\n    twitter: String(data['twitter']),\r\n    whatsapp: String(data['whatsapp']),\r\n    businessHashtag: String(data['businessHashtag']),\r\n    businessDescription: String(data['businessDescription']),\r\n    dateJoined: Date_I(data['dateJoined']),\r\n    date: Date_I(data['date']),\r\n  };\r\n\r\n  return MemberClockingAdditionalInfo_S;\r\n}\r\n\r\nexport function MemberClockingInfoFull_S(data: any): MemberClockingInfoFull_I {\r\n  // console.log({data});\r\n  \r\n  const MemberClockingInfoFull_S: MemberClockingInfoFull_I = {\r\n    attendance: MemberClockingInfo_S(data['attendance']),\r\n    additionalInfo: MemberClockingAdditionalInfo_S(data['additionalInfo']),\r\n    lastSeen: Date_I(data['lastSeen']),\r\n    status: String(data['status']),\r\n  };\r\n\r\n  return MemberClockingInfoFull_S;\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first\")\r\nexport class ClockerTablePartsFirst extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n  \r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n  \r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n      console.log({ \"clockingInfo\": clockingInfo });\r\n      console.log({ \"clockingInfoFull\": clockingInfoFull });\r\n    const MEMBER_ID = base64Encode(String(fullInfo? clockingInfoFull.attendance.memberId.id: clockingInfo.memberId.id), true);\r\n    return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n  <div class=\"d-block m-1\">\r\n    <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n      ${fullInfo? clockingInfoFull.attendance.clockingMethodName: clockingInfo.clockingMethodName}\r\n    </span>\r\n  </div>\r\n  <div class=\"flex m-1 justify-evenly\">\r\n    <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\"\r\n      click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n      url=\"${fullInfo? clockingInfoFull.attendance.memberId.profilePicture: clockingInfo.memberId.profilePicture}\" size=\"32\"></user-profile-photo>\r\n  </div>\r\n  <div class=\"block m-1\">\r\n    <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n      <b>Name</b>: ${fullInfo? clockingInfoFull.attendance.memberId.firstname: clockingInfo.memberId.firstname} ${fullInfo? clockingInfoFull.attendance.memberId.middlename: clockingInfo.memberId.middlename}\r\n      ${fullInfo? clockingInfoFull.attendance.memberId.surname: clockingInfo.memberId.surname}\r\n    </span>\r\n  </div>\r\n</div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockIn(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-in/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock In?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingStartBreak(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/start-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Start Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceClockingClockIn } from '@@addons/network/attendance/clocking/clock-in';\r\nimport { PATCH_AttendanceClockingStartBreak } from '@@addons/network/attendance/clocking/start-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport '@material/mwc-icon-button';\r\n\r\n/*this is to change automatically update clocking times since datatabel is not allowing it */\r\nexport const setClockingTimeInfo = (clockingTime: boolean, clockingTimeValue: string) => {\r\n  // @ts-ignore\r\n  window['clocker'] = {\r\n    'clockingTimeInfo': {\r\n      \"clockingTime\": clockingTime, \"clockingTimeValue\": clockingTimeValue,\r\n    }\r\n  };\r\n}\r\nexport const getClockingTimeInfo = () => {\r\n  if (\"clocker\" in window) {\r\n    // @ts-ignore\r\n    const CTI = window['clocker']['clockingTimeInfo'];\r\n    if ('clockingTime' in CTI) return {\r\n      \"clockingTime\": CTI.clockingTime, \"clockingTimeValue\": CTI.clockingTimeValue,\r\n    }\r\n\r\n  } return null;\r\n}\r\n\r\n@customElement(\"clocker-table-parts-second\")\r\nexport class ClockerTablePartsSecond extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n\r\n    const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n    const inTime = fullInfo ? clockingInfoFull.attendance.inTime : clockingInfo.inTime;\r\n    // const atInTime = inTime !== null ? getLocalTime(inTime, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const atInTime = inTime !== null ? getDateTime(inTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    // console.log({atInTime, \"_clockingInfo.inTime\": _clockingInfo.inTime})\r\n    const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n    const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n    const startBreak = fullInfo ? clockingInfoFull.attendance.startBreak : clockingInfo.startBreak;\r\n    // const atBreakTime = startBreak !== null ? getLocalTime(startBreak, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const atBreakTime = startBreak !== null ? getDateTime(startBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const TODAY = new Date();\r\n    const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n    // console.log({ HAS_BREAKTIME, _clockingInfo });\r\n    const IS_TODAY = (fullInfo ? clockingInfoFull.attendance.date.toDateString() : clockingInfo.date.toDateString()) === TODAY.toDateString();\r\n    return html`\r\n      <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n        <div class=\"flex justify-between\">\r\n          ${this.clocking ? html`\r\n          <input type=\"checkbox\" multi-break-check-in=\"${CLOCK_ID}\" name=\"member_check_in_${CLOCK_ID}\"\r\n            id=\"member_check_in_${CLOCK_ID}\"\r\n            class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n          `: nothing}\r\n          <label for=\"member_check_in_${CLOCK_ID}\">@ ${atDate}</label>\r\n        </div>\r\n      </div>\r\n      ${this.clocking ? html`\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0\" clock-id=\"${CLOCK_ID}\" clock-user=\"in\">\r\n          <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n        <span class=\"badge badge-success mx-1\">${IS_TODAY ? html`Today` : html`Post Clocking`}</span>\r\n        ${CLOCKED ? html`\r\n        <span class=\"badge badge-success bg-grow-early mx-1\">Present</span>`: html`\r\n        <span class=\"badge badge-danger mx-1\">Not Clocked</span>\r\n        `}\r\n      </div>\r\n      `: html`\r\n        <div class=\"text-center flex justify-evenly whitespace-nowrap\">\r\n          <a href=\"tel://${clockingInfoFull.additionalInfo.memberInfo.phone}\">\r\n            <mwc-icon-button class=\"bg-sunny-morning text-white\" icon=\"call\"></mwc-icon-button>\r\n          </a>\r\n          <a href=\"https://api.whatsapp.com/send?phone=+${clockingInfoFull.additionalInfo.whatsapp}&amp;text=\">\r\n            <mwc-icon-button class=\"bg-grow-early text-white\" icon=\"whatsapp\"></mwc-icon-button>\r\n          </a>\r\n        </div>\r\n      `}\r\n      ${CLOCKED && (inTime !== null) ? html`\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <span class=\"badge badge-light shadow p-2 m-1\">\r\n          <b>Clock in Time</b>: ${atInTime}\r\n        </span>\r\n      </div>`: ''\r\n      }\r\n      ${this.clocking ? html`\r\n        ${HAS_BREAKTIME ? html`\r\n        <hr class=\"whitespace-nowrap\">\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <mwc-button raised class=\"shadow-sm success button\" label=\"Start Break\" clock-id=\"${CLOCK_ID}\" user-break=\"start\"\r\n            icon=\"check\">\r\n          </mwc-button>\r\n        </div>\r\n        `: ''\r\n        }\r\n      `: nothing}\r\n      ${(startBreak !== null) ? html`\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <span class=\"badge badge-light shadow p-2 m-1\">\r\n          <b>Break Start Time</b>: ${atBreakTime}\r\n        </span>\r\n      </div>`: ''\r\n      }\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"in\") {\r\n        // console.log({ \"clock in\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockInUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async clockInUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingClockIn(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingClockIn(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"start\") {\r\n        // console.log({ \"start break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.startUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async startUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e,element,CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingStartBreak(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingStartBreak(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockOut(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-out/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock Out?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingEndBreak(clockId: Number, time: string = null): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/end-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'End Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceCancelClocking } from '@@addons/network/attendance/clocking/cancel-clocking';\r\nimport { PATCH_AttendanceClockingClockOut } from '@@addons/network/attendance/clocking/clock-out';\r\nimport { PATCH_AttendanceClockingEndBreak } from '@@addons/network/attendance/clocking/end-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport { getClockingTimeInfo } from './second';\r\n\r\n\r\n@customElement(\"clocker-table-parts-third\")\r\nexport class ClockerTablePartsThird extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private excuseBaseUrl: string = \"/attendance/v2/clocking/excuse?clocking-id=\";\r\n\r\n  @property({ type: String })\r\n  private followUpBaseUrl: string = \"/attendance/v2/clocking/follow-up?clocking-id=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n\r\n    const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n    const outTime = fullInfo ? clockingInfoFull.attendance.outTime : clockingInfo.outTime;\r\n    // const atOutTime = outTime !== null ? getLocalTime(outTime, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n    const atOutTime = outTime !== null ? getDateTime(outTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    // console.log({atOutTime, \"clockingInfo.outTime\": clockingInfo.outTime})\r\n    const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n    const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n    const endBreak = fullInfo ? clockingInfoFull.attendance.endBreak : clockingInfo.endBreak;\r\n    // const atBreakTime = endBreak !== null ? getLocalTime(endBreak, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n    const atBreakTime = endBreak !== null ? getDateTime(endBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n    const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n    const CLOCK_ID_ENC = base64Encode(String(CLOCK_ID), true);\r\n    // console.log({ HAS_BREAKTIME, clockingInfo });\r\n    return html`\r\n      <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n        <div class=\"flex justify-between\">\r\n          ${this.clocking ? html`\r\n          <input type=\"checkbox\" multi-break-check-out=\"${CLOCK_ID}\" name=\"member_check_out_${CLOCK_ID}\"\r\n            id=\"member_check_out_${CLOCK_ID}\"\r\n            class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n          `: nothing}\r\n          <label for=\"member_check_out_${CLOCK_ID}\">@ ${atDate}</label>\r\n        </div>\r\n      </div>\r\n      ${this.clocking ? html`\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\" clock-user=\"out\">\r\n          <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\"\r\n          cancel-user-clock=\"true\">\r\n          <span class=\"pe-7s-close-circle bg-love-kiss fa-5x icon-gradient\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n        <span class=\"badge badge-warning\">'X' to Cancel Attendance</span>\r\n      </div>\r\n      `: nothing}\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <a href=\"${this.excuseBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-info btn-sm\" target=\"_blank\" type=\"button\">Enter/ View\r\n          Excuse</a>\r\n        <a href=\"${this.followUpBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-primary btn-sm\" target=\"_blank\" type=\"button\">Follow-Up</a>\r\n      </div>\r\n      ${CLOCKED && (outTime !== null) ? html`\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <span class=\"badge badge-light shadow p-2 m-1\">\r\n          <b>Clock out Time</b>: ${atOutTime}\r\n        </span>\r\n      </div>`: ''\r\n      }\r\n      ${this.clocking ? html`\r\n      ${HAS_BREAKTIME ? html`\r\n      <hr class=\"whitespace-nowrap\">\r\n      <div class=\"text-center whitespace-nowrap\">\r\n        <mwc-button raised class=\"shadow-sm info button\" label=\"End Break\" clock-id=\"${CLOCK_ID}\" user-break=\"end\"\r\n          icon=\"close\">\r\n        </mwc-button>\r\n      </div>\r\n      `: ''\r\n      }\r\n      `: nothing}\r\n      ${(endBreak !== null) ? html`\r\n      <div class=\"text-center\">\r\n        <span class=\"badge badge-light shadow p-2 m-1\">\r\n          <b>Break End Time</b>: ${atBreakTime}\r\n        </span>\r\n      </div>`: ''\r\n      }\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n    this.cancelClocking();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private cancelClocking() {\r\n    const selectorString = 'cancel-user-clock=\"true\"';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(cancelClock => {\r\n      cancelClock.addEventListener('click', async (e) => {\r\n        e.preventDefault();\r\n        const CLOCK_ID = Number(cancelClock.getAttribute('clock-id'));\r\n        await PATCH_AttendanceCancelClocking(CLOCK_ID);\r\n      });\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"out\") {\r\n        // console.log({ \"clock out\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockOutUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async clockOutUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    // console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingClockOut(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingClockOut(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"end\") {\r\n        // console.log({ \"end break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.endUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async endUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n    console.log({ e, element, CLOCK_ID });\r\n    if (this.clockingTime) {\r\n      await PATCH_AttendanceClockingEndBreak(CLOCK_ID, this.clockingTimeValue);\r\n    } else {\r\n      await PATCH_AttendanceClockingEndBreak(CLOCK_ID);\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceCancelClocking(clockId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/cancel-clocking/' + clockId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Cancel Clocking?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}"],"names":["getDateTime","date","options","Date","toLocaleString","MemberClockingAdditionalInfo_S","data","id","Number","memberId","memberInfo","facebook","String","instagram","placeOfWork","profession","twitter","whatsapp","businessHashtag","businessDescription","dateJoined","MemberClockingInfoFull_S","attendance","additionalInfo","lastSeen","status","ClockerTablePartsFirst","constructor","super","_data","_type","clockingInfo","fullInfo","clocking_info","memberProfileBaseUrl","value","this","requestUpdate","type","connectedCallback","_clockingInfo","JSON","parse","disconnectedCallback","getClockingInfo","getClockingInfoFull","render","clockingInfoFull","console","log","MEMBER_ID","clockingMethodName","profilePicture","firstname","middlename","surname","firstUpdated","createRenderRoot","styles","Boolean","PATCH_AttendanceClockingClockIn","clockId","time","_get_cookie","url","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","stringify","headers","Authorization","token","then","HTTP","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","e","err","errormsg","error","push","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","Object","VALUE","message","setTimeout","window","location","reload","PATCH_AttendanceClockingStartBreak","setClockingTimeInfo","clockingTime","clockingTimeValue","getClockingTimeInfo","CTI","ClockerTablePartsSecond","clocking","atDate","dateStyle","timeStyle","inTime","atInTime","CLOCK_ID","CLOCKED","inOrOut","startBreak","atBreakTime","TODAY","HAS_BREAKTIME","meetingEventId","hasBreakTime","IS_TODAY","toDateString","phone","clockUser","userBreak","setInterval","document","querySelectorAll","getAttribute","addEventListener","clockInUser","element","preventDefault","startUserBreak","property","PATCH_AttendanceClockingClockOut","PATCH_AttendanceClockingEndBreak","ClockerTablePartsThird","excuseBaseUrl","followUpBaseUrl","outTime","atOutTime","endBreak","CLOCK_ID_ENC","base64","cancelClocking","cancelClock","PATCH_AttendanceCancelClocking","clockOutUser","endUserBreak"],"sourceRoot":""}